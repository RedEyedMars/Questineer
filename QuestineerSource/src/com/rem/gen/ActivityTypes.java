package com.rem.gen;
import com.rem.gen.Entity;
import java.util.Set;
import java.util.HashSet;
public class ActivityTypes {
	public static com.rem.lang.helpers.output.OutputBody createSwitchBody = new com.rem.lang.helpers.output.OutputBody();
	protected static Set<String> allActivityNames = new HashSet<String>();
	public static String currentlyDeclaredTypeName = "None";
	public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact(QuestineerSource.packageName),null).add(new com.rem.lang.helpers.output.OutputExact().set("entities"),null).add(new com.rem.lang.helpers.output.OutputExact().set("behaviours"),null).add(new com.rem.lang.helpers.output.OutputExact().set("activities"),null)).name(new com.rem.lang.helpers.output.OutputExact().set("ActivityTypes")).extendType(null).variable(new com.rem.lang.helpers.output.OutputVariable().isPublic().isStatic().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")),new com.rem.lang.helpers.output.OutputExact().set("None")).assign(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputQuote().set("None")).add(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")).add(new com.rem.lang.helpers.output.OutputExact().set("Id")),new com.rem.lang.helpers.output.OutputExact().set("None")))))).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").isStatic().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")),new com.rem.lang.helpers.output.OutputExact().set("from")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")).add(new com.rem.lang.helpers.output.OutputExact().set("Id")),new com.rem.lang.helpers.output.OutputExact().set("id")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("switch").body(createSwitchBody).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputExact().set("id")))).add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("null"))))).mark();
	public static void declaration(com.rem.gen.parser.Token input){
		String activityTypeName = com.rem.lang.helpers.output.OutputHelper.camelize((input.get(com.rem.gen.parser.Token.Id._activityTypeName)).toString());
		currentlyDeclaredTypeName=activityTypeName;
		if(allActivityNames.add(activityTypeName)){
			com.rem.lang.helpers.output.OutputClassStructure.getClass("ActivityType").getEnclosedClass("Id").variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("void")),new com.rem.lang.helpers.output.OutputExact(activityTypeName)));
			com.rem.lang.helpers.output.OutputClassStructure.getClass("ActivityTypes").variable(new com.rem.lang.helpers.output.OutputVariable().isPublic().isStatic().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")),new com.rem.lang.helpers.output.OutputExact(activityTypeName)).assign(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputQuote().set((activityTypeName).toString())).add(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")).add(new com.rem.lang.helpers.output.OutputExact().set("Id")).add(activityTypeName),new com.rem.lang.helpers.output.OutputCall())))));
			createSwitchBody.add(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("case").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityTypes")).add(activityTypeName),new com.rem.lang.helpers.output.OutputCall())))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).asCase(new com.rem.lang.helpers.output.OutputExact(activityTypeName)))));
			String variableName = activityTypeName.substring(0,1).toLowerCase()+activityTypeName.substring(1)+"Motivation";
			Entity.motivationForSwitchBody.add(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("case").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact(variableName)))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).asCase(new com.rem.lang.helpers.output.OutputExact(activityTypeName)))));
			Entity.motivationSwapSwitchBody1.add(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("case").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("false")))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact(variableName)).operator("==").right(new com.rem.lang.helpers.output.OutputExact().set("0"))))).add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputExact().set("break")))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).asCase(new com.rem.lang.helpers.output.OutputExact(activityTypeName)))));
			Entity.motivationSwapSwitchBody2.add(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("case").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("false")))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact(variableName)).operator("==").right(new com.rem.lang.helpers.output.OutputExact().set("10"))))).add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputExact().set("break")))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).asCase(new com.rem.lang.helpers.output.OutputExact(activityTypeName)))));
			Entity.motivationSwapSwitchBody3.add(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("case").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputOperator()).operator("--").right(new com.rem.lang.helpers.output.OutputExact(variableName)))).add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputExact().set("break")))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).asCase(new com.rem.lang.helpers.output.OutputExact(activityTypeName)))));
			Entity.motivationSwapSwitchBody4.add(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("case").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputOperator()).operator("++").right(new com.rem.lang.helpers.output.OutputExact(variableName)))).add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputExact().set("break")))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).asCase(new com.rem.lang.helpers.output.OutputExact(activityTypeName)))));
			com.rem.lang.helpers.output.OutputClassStructure.getClass("Entity").variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("int")),new com.rem.lang.helpers.output.OutputExact(variableName)).assign(new com.rem.lang.helpers.output.OutputExact().set("5")));
		}
	}
	public static com.rem.lang.helpers.output.Output getId(String name){
		return new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ActivityType")).add(new com.rem.lang.helpers.output.OutputExact().set("Id")).add(name),new com.rem.lang.helpers.output.OutputCall());
	}
}
