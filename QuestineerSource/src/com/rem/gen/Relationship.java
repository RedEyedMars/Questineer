package com.rem.gen;
import java.util.ArrayList;
import java.util.List;
public class Relationship {
	public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact(QuestineerSource.packageName),null).add(new com.rem.lang.helpers.output.OutputExact().set("entities"),null).add(new com.rem.lang.helpers.output.OutputExact().set("relations"),null)).name(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).extendType(null).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Entity")),new com.rem.lang.helpers.output.OutputExact().set("self"))).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Entity")),new com.rem.lang.helpers.output.OutputExact().set("other"))).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Integer")),new com.rem.lang.helpers.output.OutputExact().set("influence")).assign(new com.rem.lang.helpers.output.OutputExact().set("0"))).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("void")),new com.rem.lang.helpers.output.OutputExact().set("influence")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).add(new com.rem.lang.helpers.output.OutputExact().set("Reason")),new com.rem.lang.helpers.output.OutputExact().set("reason"))).add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Integer")),new com.rem.lang.helpers.output.OutputExact().set("amount")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("influences"),null).add(new com.rem.lang.helpers.output.OutputExact().set("add"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("reason")).add(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Int")),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("amount"))))))).add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("influence")).operator("+=").right(new com.rem.lang.helpers.output.OutputExact().set("amount")))))).encloseClass(Relationship.Predefined.OUTPUT).encloseClass(Relationship.Factory.OUTPUT).encloseClass(Relationship.Reason.OUTPUT).encloseClass(Relationship.Reasons.OUTPUT).mark();
	public static void setup(com.rem.gen.parser.Parser.Result.Pass data){
		QuestineerSource.createListMap(com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reason"),com.rem.lang.helpers.output.OutputClassStructure.getClass("Int"));
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ListMaps")).add(new com.rem.lang.helpers.output.OutputExact().set("Reasons")).add(new com.rem.lang.helpers.output.OutputExact().set("Int")),new com.rem.lang.helpers.output.OutputExact().set("influences")));
	}
	public static void declaration(com.rem.gen.parser.Token declarationToken){
		String reasonName = (declarationToken.get(com.rem.gen.parser.Token.Id._reasonName)).toString();
		String reasonClassName = reasonName.replace(" ","");
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").encloseClass(new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact(reasonClassName)).extendType(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).add(new com.rem.lang.helpers.output.OutputExact().set("Reason"))).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(reasonClassName),new com.rem.lang.helpers.output.OutputExact().set("")).parameters(new com.rem.lang.helpers.output.OutputParameters()).body(new com.rem.lang.helpers.output.OutputBody())).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("String")),new com.rem.lang.helpers.output.OutputExact().set("getDescription")).parameters(new com.rem.lang.helpers.output.OutputParameters()).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("StringBuilder")),new com.rem.lang.helpers.output.OutputExact().set("builder")).assign(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("StringBuilder")),new com.rem.lang.helpers.output.OutputArguments())))))));
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getEnclosedClass((reasonClassName).toString()).encloseClass(new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact().set("Factory")).extendType(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).add(new com.rem.lang.helpers.output.OutputExact().set("Reason")).add(new com.rem.lang.helpers.output.OutputExact().set("Factory"))).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).add(new com.rem.lang.helpers.output.OutputExact().set("Reason")),new com.rem.lang.helpers.output.OutputExact().set("create")).parameters(new com.rem.lang.helpers.output.OutputParameters()).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).add(new com.rem.lang.helpers.output.OutputExact().set("Reasons")).add(reasonClassName),new com.rem.lang.helpers.output.OutputArguments()))))));
		StringBuilder descriptionBuilder = new StringBuilder();
		List<com.rem.lang.helpers.output.OutputVariable> variables = new ArrayList<com.rem.lang.helpers.output.OutputVariable>();
		for(com.rem.gen.parser.Token element:declarationToken.getAll()){
			switch(element.getName()){
				case _variableIndex :{
					String variableName = "_"+(element).toString();
					com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getEnclosedClass((reasonClassName).toString()).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Object")),new com.rem.lang.helpers.output.OutputExact(variableName)));
					com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getEnclosedClass((reasonClassName).toString()).getMethod("getDescription()").append(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("builder"),null).add(new com.rem.lang.helpers.output.OutputExact().set("append"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact(variableName),null).add(new com.rem.lang.helpers.output.OutputExact().set("toString"),new com.rem.lang.helpers.output.OutputArguments()))))));
					variables.add((com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getEnclosedClass((reasonClassName).toString())).getVariable((variableName).toString()));
					break;
				}
				case _description :{
					com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getEnclosedClass((reasonClassName).toString()).getMethod("getDescription()").append(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("builder"),null).add(new com.rem.lang.helpers.output.OutputExact().set("append"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputQuote().set((element).toString()))))));
					break;
				}
			}
		}
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getEnclosedClass((reasonClassName).toString()).getMethod("()").prepend(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("name")).operator("=").right(new com.rem.lang.helpers.output.OutputQuote().set((reasonName).toString()))))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("name")).operator("==").right(new com.rem.lang.helpers.output.OutputExact().set("null"))))));
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getEnclosedClass((reasonClassName).toString()).getMethod("getDescription()").append(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("builder"),null).add(new com.rem.lang.helpers.output.OutputExact().set("toString"),new com.rem.lang.helpers.output.OutputArguments()))));
		(com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getEnclosedClass((reasonClassName).toString())).addDefaultConstructor(variables);
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Relationship").getEnclosedClass("Reasons").getMethod("create(String)").prepend(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).add(new com.rem.lang.helpers.output.OutputExact().set("Reasons")).add(reasonClassName),new com.rem.lang.helpers.output.OutputArguments())))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputQuote().set((reasonName).toString()),null).add(new com.rem.lang.helpers.output.OutputExact().set("equals"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("reasonName")))).operator("||").right(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputQuote().set((reasonName).toString()),null).add(new com.rem.lang.helpers.output.OutputExact().set("replace"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputQuote().set(" ")).add(new com.rem.lang.helpers.output.OutputQuote().set(""))).add(new com.rem.lang.helpers.output.OutputExact().set("equals"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputQuote().set((reasonClassName).toString()))))))));
	}
	public static class Predefined {
		public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).isEnum().name(new com.rem.lang.helpers.output.OutputExact().set("Predefined")).extendType(null).encloseClass(Predefined.Reasons.OUTPUT).mark();
		public static class Reasons {
			public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact().set("Reasons")).extendType(null).mark();
		}
	}
	public static class Factory {
		public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact().set("Factory")).extendType(null).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")),new com.rem.lang.helpers.output.OutputExact().set("create")).parameters(new com.rem.lang.helpers.output.OutputParameters()).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")),new com.rem.lang.helpers.output.OutputArguments()))))).mark();
	}
	public static class Reason {
		public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact().set("Reason")).extendType(null).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("String")),new com.rem.lang.helpers.output.OutputExact().set("name")).assign(new com.rem.lang.helpers.output.OutputExact().set("null"))).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("String")),new com.rem.lang.helpers.output.OutputExact().set("description")).assign(new com.rem.lang.helpers.output.OutputExact().set("null"))).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("boolean")),new com.rem.lang.helpers.output.OutputExact().set("equals")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Object")),new com.rem.lang.helpers.output.OutputExact().set("otherReason")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("otherReason")).operator("!=").right(new com.rem.lang.helpers.output.OutputExact().set("null"))).operator("&&").right(new com.rem.lang.helpers.output.OutputBraced().set(new com.rem.lang.helpers.output.OutputCast().type(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Reason"))).subject(new com.rem.lang.helpers.output.OutputExact().set("otherReason"))))).operator(".").right(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("name"),null).add(new com.rem.lang.helpers.output.OutputExact().set("equals"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("name")))))))).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("int")),new com.rem.lang.helpers.output.OutputExact().set("hashCode")).parameters(new com.rem.lang.helpers.output.OutputParameters()).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("name"),null).add(new com.rem.lang.helpers.output.OutputExact().set("hashCode"),new com.rem.lang.helpers.output.OutputArguments()))))).encloseClass(Reason.Factory.OUTPUT).mark();
		public static class Factory {
			public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact().set("Factory")).extendType(null).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).add(new com.rem.lang.helpers.output.OutputExact().set("Reason")),new com.rem.lang.helpers.output.OutputExact().set("create")).parameters(new com.rem.lang.helpers.output.OutputParameters()).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("null"))))).mark();
		}
	}
	public static class Reasons {
		public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact().set("Reasons")).extendType(null).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").isStatic().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Relationship")).add(new com.rem.lang.helpers.output.OutputExact().set("Reason")),new com.rem.lang.helpers.output.OutputExact().set("create")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("String")),new com.rem.lang.helpers.output.OutputExact().set("reasonName")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("null"))))).mark();
	}
}
