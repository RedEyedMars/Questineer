package com.rem.gen;
import com.rem.gen.Events;
public class Quests {
	public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact(QuestineerSource.packageName),null).add(new com.rem.lang.helpers.output.OutputExact().set("entities"),null).add(new com.rem.lang.helpers.output.OutputExact().set("behaviours"),null).add(new com.rem.lang.helpers.output.OutputExact().set("quests"),null)).name(new com.rem.lang.helpers.output.OutputExact().set("Quests")).extendType(null).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Tile")),new com.rem.lang.helpers.output.OutputExact().set("tile")).assign(new com.rem.lang.helpers.output.OutputExact().set("null"))).mark();
	public static void setup(com.rem.gen.parser.Parser.Result.Pass data){
		Events.addToEventMethod("startQuest",com.rem.lang.helpers.output.OutputClassStructure.getClass("Quest"),new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("currentActivity")).operator("=").right(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("activities"),null).add(new com.rem.lang.helpers.output.OutputExact().set("get"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("0")))))).add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("currentActivityIndex")).operator("=").right(new com.rem.lang.helpers.output.OutputExact().set("0")))).add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("status")).operator("=").right(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Quest")).add(new com.rem.lang.helpers.output.OutputExact().set("Status")),new com.rem.lang.helpers.output.OutputExact().set("IN_PROGRESS")))))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("activities"),null).add(new com.rem.lang.helpers.output.OutputExact().set("isEmpty"),new com.rem.lang.helpers.output.OutputArguments())).operator("==").right(new com.rem.lang.helpers.output.OutputExact().set("false"))))).add(new com.rem.lang.helpers.output.OutputConditional().init("else").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("status")).operator("=").right(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Quest")).add(new com.rem.lang.helpers.output.OutputExact().set("Status")),new com.rem.lang.helpers.output.OutputExact().set("FAIL"))))))));
		Events.addToEventMethod("fail",com.rem.lang.helpers.output.OutputClassStructure.getClass("Quest"),new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact().set("status")).operator("=").right(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Quest")).add(new com.rem.lang.helpers.output.OutputExact().set("Status")),new com.rem.lang.helpers.output.OutputExact().set("FAIL"))))));
	}
	public static void typeDeclaration(com.rem.gen.parser.Token declarationToken){
		String questName = (declarationToken.get(com.rem.gen.parser.Token.Id._questName)).toString();
		String description = (declarationToken.get(com.rem.gen.parser.Token.Id._DESCRIPTION)).toString();
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Quests").encloseClass(new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact(questName)).extendType(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Quest"))).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("void")),new com.rem.lang.helpers.output.OutputExact().set("generateDestinations")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Entity")),new com.rem.lang.helpers.output.OutputExact().set("quester")))).body(new com.rem.lang.helpers.output.OutputBody())).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Boolean")),new com.rem.lang.helpers.output.OutputExact().set("fulfill")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Entity")),new com.rem.lang.helpers.output.OutputExact().set("quester"))).add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Area")),new com.rem.lang.helpers.output.OutputExact().set("destinationReached")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("true"))))));
		com.rem.lang.helpers.output.OutputConditionalHeader tileClauses = new com.rem.lang.helpers.output.OutputConditionalHeader();
		tileClauses.separator("&&");
		Integer tileCount = 0;
		for(com.rem.gen.parser.Token element:declarationToken.getAllSafely(com.rem.gen.parser.Token.Id._quest_destination)){
			com.rem.lang.helpers.output.OutputOperator tileClause = new com.rem.lang.helpers.output.OutputOperator();
			tileClause.operator("||");
			com.rem.lang.helpers.output.OutputClassStructure.getClass("Quests").getEnclosedClass((questName).toString()).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Set")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Area")))),new com.rem.lang.helpers.output.OutputExact("visited"+tileCount)).assign(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("HashSet")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Area")))),new com.rem.lang.helpers.output.OutputArguments())));
			com.rem.lang.helpers.output.OutputClassStructure.getClass("Quests").getEnclosedClass((questName).toString()).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Set")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Area")))),new com.rem.lang.helpers.output.OutputExact("toVisit"+tileCount)).assign(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("HashSet")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Area")))),new com.rem.lang.helpers.output.OutputArguments())));
			for(com.rem.gen.parser.Token atom:element.getAllSafely(com.rem.gen.parser.Token.Id._quest_tile_description)){
				String tileName = (atom.get(com.rem.gen.parser.Token.Id._tileName)).toString().replace(" ","");
				String mapName = (atom.get(com.rem.gen.parser.Token.Id._mapName)).toString().replace(" ","");
				tileClause.add(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact("visited"+tileCount),null).add(new com.rem.lang.helpers.output.OutputExact().set("size"),new com.rem.lang.helpers.output.OutputArguments())).operator(QuestineerSource.negateOperator((atom.get(com.rem.gen.parser.Token.Id._ORDINAL)).toString())).right(new com.rem.lang.helpers.output.OutputExact(atom.get(com.rem.gen.parser.Token.Id._INTEGER))));
				com.rem.lang.helpers.output.OutputClassStructure.getClass("Quests").getMethod("fulfill()").prepend(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact("visited"+tileCount),null).add(new com.rem.lang.helpers.output.OutputExact().set("add"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("destinationReached")))))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact("toVisit"+tileCount),null).add(new com.rem.lang.helpers.output.OutputExact().set("contains"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("destinationReached")))))));
				com.rem.lang.helpers.output.OutputClassStructure.getClass("Quests").getMethod("generateDestinations()").prepend(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact("toVisited"+tileCount),null).add(new com.rem.lang.helpers.output.OutputExact().set("add"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("quester"),null).add(new com.rem.lang.helpers.output.OutputExact().set("getLocation"),new com.rem.lang.helpers.output.OutputArguments()).add(new com.rem.lang.helpers.output.OutputExact().set("getEnvironment"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Environments")).add(mapName),new com.rem.lang.helpers.output.OutputExact().set("id")))).add(new com.rem.lang.helpers.output.OutputExact().set("getNodeFromId"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("quester"),null).add(new com.rem.lang.helpers.output.OutputExact().set("getLocation"),new com.rem.lang.helpers.output.OutputArguments())).add(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Tiles")).add(mapName+tileName),new com.rem.lang.helpers.output.OutputExact().set("id")))))))));
			}
			tileClauses.call(new com.rem.lang.helpers.output.OutputBraced(tileClause));
			++tileCount;
		}
		if(tileClauses.hasContents()){
			com.rem.lang.helpers.output.OutputClassStructure.getClass("Quests").getMethod("fulfill()").prepend(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("false")))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(tileClauses))));
		}
		for(com.rem.gen.parser.Token element:declarationToken.getAllSafely(com.rem.gen.parser.Token.Id._event_statement)){
			com.rem.lang.helpers.output.OutputBody eventBody = new com.rem.lang.helpers.output.OutputBody();
			String eventName = (element.get(com.rem.gen.parser.Token.Id._event_names)).toString();
			if(eventName.equals("start")||eventName.equals("load")){
				eventName="startQuest";
			}
			com.rem.lang.helpers.output.OutputContext eventContext = Events.addToEventMethod(eventName,com.rem.lang.helpers.output.OutputClassStructure.getClass("Quests").getEnclosedClass((questName).toString()),new com.rem.lang.helpers.output.OutputBody());
			for(com.rem.gen.parser.Token atom:element.getAllSafely(com.rem.gen.parser.Token.Id._body_element)){
				eventBody.add(QuestineerSource.getBodyElement(atom,eventContext));
			}
			eventBody.add(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("super"),null).add(new com.rem.lang.helpers.output.OutputExact().set("on"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("event"))))));
			Events.addToEventMethod(eventName,com.rem.lang.helpers.output.OutputClassStructure.getClass("Quests").getEnclosedClass((questName).toString()),eventBody);
		}
	}
	public static com.rem.lang.helpers.output.LineableOutput getAddition(com.rem.gen.parser.Token input,com.rem.lang.helpers.output.CallableOutput subject,com.rem.lang.helpers.output.OutputContext context){
		String activityName = com.rem.lang.helpers.output.OutputHelper.camelize((input.get(com.rem.gen.parser.Token.Id._activity_names)).toString());
		com.rem.lang.helpers.output.OutputArguments arguments = new com.rem.lang.helpers.output.OutputArguments();
		for(com.rem.gen.parser.Token statement:input.getAllSafely(com.rem.gen.parser.Token.Id._statement)){
			arguments.add(QuestineerSource.getStatement(statement,context));
		}
		return new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact().set("add"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Activities")).add(activityName),new com.rem.lang.helpers.output.OutputArguments().add(arguments))))));
	}
}
