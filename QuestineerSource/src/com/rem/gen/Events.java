package com.rem.gen;
import java.util.Set;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashSet;
public class Events {
	protected static Map<String, List<com.rem.lang.helpers.output.Output>> variableDefs = new HashMap<String, List<com.rem.lang.helpers.output.Output>>();
	protected static Set<String> eventNameSet = new HashSet<String>();
	public static com.rem.lang.helpers.output.OutputClass OUTPUT = new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact(QuestineerSource.packageName),null).add(new com.rem.lang.helpers.output.OutputExact().set("events"),null)).name(new com.rem.lang.helpers.output.OutputExact().set("Events")).extendType(null).mark();
	public static void declaration(com.rem.gen.parser.Token declaration){
		String eventName = (declaration.get(com.rem.gen.parser.Token.Id._eventName)).toString();
		eventNameSet.add(eventName);
		String cev = com.rem.lang.helpers.output.OutputHelper.camelize(eventName);
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Events").encloseClass(new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact(cev)).extendType(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Event"))).variable(new com.rem.lang.helpers.output.OutputVariable().isPublic().isStatic().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Event")).add(new com.rem.lang.helpers.output.OutputExact().set("Id")),new com.rem.lang.helpers.output.OutputExact().set("id")).assign(new com.rem.lang.helpers.output.OutputStaticCall().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Event")).add(new com.rem.lang.helpers.output.OutputExact().set("Id")).add(eventName),new com.rem.lang.helpers.output.OutputCall()))));
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Events").getEnclosedClass((cev).toString()).encloseClass(new com.rem.lang.helpers.output.OutputClass()._package(new com.rem.lang.helpers.output.OutputCall()).name(new com.rem.lang.helpers.output.OutputExact().set("Listener")).extendType(null).implement(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Listenable")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(cev)))).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Boolean")),new com.rem.lang.helpers.output.OutputExact().set("listen")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(cev),new com.rem.lang.helpers.output.OutputExact().set("event")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("true"))))));
		com.rem.lang.helpers.output.OutputClassStructure.getClass("Event").getEnclosedClass("Id").variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("void")),new com.rem.lang.helpers.output.OutputExact(eventName)));
		List<com.rem.lang.helpers.output.OutputVariable> variables = new ArrayList<com.rem.lang.helpers.output.OutputVariable>();
		for(com.rem.gen.parser.Token element:declaration.getAllSafely(com.rem.gen.parser.Token.Id._parameter)){
			for(com.rem.gen.parser.Token atom:element.getAllSafely(com.rem.gen.parser.Token.Id._type_name)){
				com.rem.lang.helpers.output.OutputVariable variable = new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(QuestineerSource.getTypeName(atom)),new com.rem.lang.helpers.output.OutputExact(element.get(com.rem.gen.parser.Token.Id._NAME)));
				variables.add(variable);
				(com.rem.lang.helpers.output.OutputClassStructure.getClass("Events").getEnclosedClass((cev).toString())).addVariable(variable);
			}
		}
		(com.rem.lang.helpers.output.OutputClassStructure.getClass("Events").getEnclosedClass((cev).toString())).addDefaultConstructor(variables);
	}
	public static void addParameter(String eventName,com.rem.lang.helpers.output.OutputMethod method){
		method.parameter(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(eventName),new com.rem.lang.helpers.output.OutputExact().set("event")));
	}
	public static com.rem.lang.helpers.output.OutputContext getEventContext(String eName,com.rem.lang.helpers.output.OutputClass inputClass){
		String eventClassName = com.rem.lang.helpers.output.OutputHelper.camelize(eName);
		com.rem.lang.helpers.output.OutputMethod newMethod = new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Boolean")),new com.rem.lang.helpers.output.OutputExact().set("on")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName),new com.rem.lang.helpers.output.OutputExact().set("event")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("true"))));
		String newMethodName = newMethod.getSignature();
		if(inputClass.getMethod(newMethodName)==null){
			com.rem.lang.helpers.output.OutputClassStructure.getClass(inputClass.getFullName()).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Boolean")),new com.rem.lang.helpers.output.OutputExact().set("on")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName),new com.rem.lang.helpers.output.OutputExact().set("event")))).body(new com.rem.lang.helpers.output.OutputBody()));
			com.rem.lang.helpers.output.OutputClassStructure.getClass(inputClass.getFullName()).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Boolean")),new com.rem.lang.helpers.output.OutputExact().set("add")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName).add(new com.rem.lang.helpers.output.OutputExact().set("Listener")),new com.rem.lang.helpers.output.OutputExact().set("newListener")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact(eName+"Listeners")).operator("=").right(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ArrayList")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Listenable")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName))))),new com.rem.lang.helpers.output.OutputArguments()))))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact(eName+"Listeners")).operator("==").right(new com.rem.lang.helpers.output.OutputExact().set("null"))))).add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact(eName+"Listeners"),null).add(new com.rem.lang.helpers.output.OutputExact().set("add"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("newListener")))))));
			com.rem.lang.helpers.output.OutputClassStructure.getClass(inputClass.getFullName()).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("List")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Listenable")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName))))),new com.rem.lang.helpers.output.OutputExact(eName+"Listeners")).assign(new com.rem.lang.helpers.output.OutputExact().set("null")));
		}
		return inputClass.getMethod(newMethodName);
	}
	public static com.rem.lang.helpers.output.OutputContext addToEventMethod(String eName,com.rem.lang.helpers.output.OutputClass inputClass,com.rem.lang.helpers.output.OutputBody body){
		String eventClassName = com.rem.lang.helpers.output.OutputHelper.camelize(eName);
		com.rem.lang.helpers.output.OutputMethod newMethod = new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Boolean")),new com.rem.lang.helpers.output.OutputExact().set("on")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName),new com.rem.lang.helpers.output.OutputExact().set("event")))).body(new com.rem.lang.helpers.output.OutputBody());
		String newMethodName = newMethod.getSignature();
		if(inputClass.getMethod(newMethodName)==null){
			com.rem.lang.helpers.output.OutputClassStructure.getClass(inputClass.getFullName()).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Boolean")),new com.rem.lang.helpers.output.OutputExact().set("on")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName),new com.rem.lang.helpers.output.OutputExact().set("event")))).body(new com.rem.lang.helpers.output.OutputBody()));
			com.rem.lang.helpers.output.OutputClassStructure.getClass(inputClass.getFullName()).method(new com.rem.lang.helpers.output.OutputMethod().access("public ").set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Boolean")),new com.rem.lang.helpers.output.OutputExact().set("add")).parameters(new com.rem.lang.helpers.output.OutputParameters().add(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName).add(new com.rem.lang.helpers.output.OutputExact().set("Listener")),new com.rem.lang.helpers.output.OutputExact().set("newListener")))).body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputConditional().init("if").body(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().set(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact(eName+"Listeners")).operator("=").right(new com.rem.lang.helpers.output.OutputNewObject().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("ArrayList")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Listenable")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName))))),new com.rem.lang.helpers.output.OutputArguments()))))).header(new com.rem.lang.helpers.output.OutputConditionalHeader().declare(null).call(new com.rem.lang.helpers.output.OutputOperator().left(new com.rem.lang.helpers.output.OutputExact(eName+"Listeners")).operator("==").right(new com.rem.lang.helpers.output.OutputExact().set("null"))))).add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputCall().add(new com.rem.lang.helpers.output.OutputExact(eName+"Listeners"),null).add(new com.rem.lang.helpers.output.OutputExact().set("add"),new com.rem.lang.helpers.output.OutputArguments().add(new com.rem.lang.helpers.output.OutputExact().set("newListener")))))));
			com.rem.lang.helpers.output.OutputClassStructure.getClass(inputClass.getFullName()).variable(new com.rem.lang.helpers.output.OutputVariable().set(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("List")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Listenable")).template(new com.rem.lang.helpers.output.OutputType.Template().add(new com.rem.lang.helpers.output.OutputType().add(new com.rem.lang.helpers.output.OutputExact().set("Events")).add(eventClassName))))),new com.rem.lang.helpers.output.OutputExact(eName+"Listeners")).assign(new com.rem.lang.helpers.output.OutputExact().set("null")));
		}
		com.rem.lang.helpers.output.OutputMethod establishedMethod = inputClass.getMethod(newMethodName);
		establishedMethod.add(body);
		establishedMethod.setEndWith(new com.rem.lang.helpers.output.OutputBody().add(new com.rem.lang.helpers.output.OutputStatement().prefix("return ").set(new com.rem.lang.helpers.output.OutputExact().set("true"))));
		return establishedMethod;
	}
	public static void addEventMethods(com.rem.lang.helpers.output.OutputClass inputClass,Map<String, com.rem.lang.helpers.output.OutputBody> bodiesToAdd){
		for(String name:eventNameSet){
			if(bodiesToAdd.containsKey(name)){
				addToEventMethod(name,inputClass,bodiesToAdd.get(name));
			}
			else{
				addToEventMethod(name,inputClass,new com.rem.lang.helpers.output.OutputBody());
			}
		}
	}
	public static void addEventMethodsExclusive(com.rem.lang.helpers.output.OutputClass inputClass,Map<String, com.rem.lang.helpers.output.OutputBody> bodiesToAdd){
		for(String name:eventNameSet){
			if(bodiesToAdd.containsKey(name)){
				addToEventMethod(name,inputClass,bodiesToAdd.get(name));
			}
		}
	}
	public static enum Predefined {
	}
}
