tiles.clws>>
NEWLINE:$\n
anonymous_class:
	SEMICOLON:;
	className:
		NAME:HeroStats
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	COLON::
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:events
			className:
				variable_names:Event
			NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			SEMICOLON:;
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:events
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getEventContext
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:createList
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														exact:
															WILD:on
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Events
																	ACCESS:->
																	type_var:
																		exact:
																			variable_names:eName
																			CAMEL:^
																			BACKSLASH:\
														variableName:
															name_var:
																exact:
																	WILD:event
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														exact:
															WILD:add
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Events
																	ACCESS:->
																	type_var:
																		exact:
																			BACKSLASH:\
																			variable_names:eName
																			CAMEL:^
																	type_var:
																		class:
																			class_variable_names:Listener
														variableName:
															name_var:
																exact:
																	WILD:newListener
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:void
												body_element:
													body_line:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				exact:
																					WILD:Listeners
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																	name_var:
																		variable:
																			variable_names:add
														SEMICOLON:;
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										variable_declaration:
											EQUALS:=
											WEAK:~
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Listenable
														ACCESS:->
														type_var:
															class:
																class_variable_names:List
											variableName:
												name_var:
													concat:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
														name_var:
															exact:
																WILD:Listeners
														PLUS:+
											method_argument:
												body_statement:
													NEWLINE:$\n
													body_call:
														NEWLINE:$\n
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:List
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Listenable
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:getMethod
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
									group:
										name_var:
											variable:
												variable_names:inputClass
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:newMethod
								typeName:
									METHOD_TYPE:Method 
								EQUALS:=
								method_argument:
									method_declaration:
										methodDefinition:
											inline:
												variable_declaration:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Events
																type_var:
																	exact:
																		variable_names:eName
																		CAMEL:^
																		BACKSLASH:\
																ACCESS:->
													variableName:
														name_var:
															exact:
																WILD:event
											typeName:
												type_var:
													class:
														class_variable_names:void
											methodName:
												name_var:
													exact:
														WILD:on
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:newMethodName
											name_var:
												variable:
													variable_names:getMethod
										DOT:.
										group:
											name_var:
												variable:
													variable_names:inputClass
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:eName
						COMMA:,
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
					body_element:
						body_line:
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:newMethod
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
							SEMICOLON:;
					typeName:
						CONTEXT_TYPE:Context 
			variable_declaration:
				inner:
					IN:>
				EQUALS:=
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:List
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Entry
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
							class_variable_names:Map
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:List
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Entry
											class_variable_names:HashMap
								parameters:
				variableName:
					name_var:
						variable:
							variable_names:variableDefs
			variable_declaration:
				inner:
					IN:>
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:eventNameSet
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashSet
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
							class_variable_names:Set
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:eventName
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:String
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				exact:
																					WILD:eventName
																			name_var:
																				variable:
																					variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														CAMEL:^
														variable_names:eventName
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:cev
							SEMICOLON:;
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:declaration
							COLON::
							tokenInstance:
								COLON::
								tokenName:
									NAME:parameter
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											COLON::
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:type_name
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																exact:
																	variable_names:cev
																	BACKSLASH:\
															type_var:
																class:
																	class_variable_names:Events
													methodName:
														ADD:+=
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:getTypeName
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:element
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:name
										variableName:
											NAME:atom
										COLON::
								body_element:
									NEWLINE:$\n
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Events
									type_var:
										exact:
											BACKSLASH:\
											variable_names:cev
							methodName:
								ADD:+=
							class_declaration:
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								parentName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:Object
								DOT:.
								objectType:
									CLASS:class 
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:listen
										inline:
											variable_declaration:
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:cev
															type_var:
																class:
																	class_variable_names:Events
												variableName:
													name_var:
														variable:
															variable_names:event
										typeName:
											type_var:
												class:
													class_variable_names:void
								NEWLINE:$\n
								NEWLINE:$\n
								interfaceName:
									type_var:
										class:
											class_variable_names:Listenable
											template_parameters:
												template_parameter:
													type_var:
														access_multi:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:cev
															SPECIAL_ACCESS:\>
															type_var:
																class:
																	class_variable_names:Events
								packageName:
									name_var:
										exact:
											WILD:events
								className:
									variable_names:Listener
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
										name_var:
											variable:
												variable_names:add
									group:
										name_var:
											variable:
												variable_names:eventNameSet
									DOT:.
							SEMICOLON:;
					inner:
						IN:>
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Events
							methodName:
								ADD:+=
							class_declaration:
								objectType:
									CLASS:class 
								packageName:
									name_var:
										exact:
											WILD:events
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								className:
									variable_names:cev
								parentName:
									type_var:
										class:
											class_variable_names:Event
								DOT:.
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:declaration
							typeName:
								type_var:
									class:
										class_variable_names:IToken
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:bodiesToAdd
							typeName:
								type_var:
									class:
										template_parameters:
											COMMA:,
											template_parameter:
												BODY_TYPE:Body 
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:Map
						COMMA:,
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
					body_element:
						body_conditional:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							conditional:
								FOR:for
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							OPERATOR:: 
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
										conditional:
											IF:if
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
												DOT:.
								body_element:
									NEWLINE:$\n
					inner:
						IN:>
					methodName:
						name_var:
							variable:
								variable_names:addEventMethodsExclusive
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					typeName:
						CONTEXT_TYPE:Context 
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
											group:
												name_var:
													variable:
														variable_names:newMethod
											DOT:.
								typeName:
									type_var:
										class:
											class_variable_names:String
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
						COMMA:,
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:eName
							typeName:
								type_var:
									class:
										class_variable_names:String
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:body
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_manipulate:
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																	name_var:
																		variable:
																			variable_names:add
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
																			name_var:
																				exact:
																					WILD:Listeners
																DOT:.
												methodName:
													name_var:
														exact:
															WILD:add
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Events
																	type_var:
																		exact:
																			BACKSLASH:\
																			variable_names:eName
																			CAMEL:^
																	ACCESS:->
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Listener
														variableName:
															name_var:
																exact:
																	WILD:newListener
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
								body_element:
									body_manipulate:
										variable_declaration:
											WEAK:~
											variableName:
												name_var:
													concat:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
														name_var:
															exact:
																WILD:Listeners
														PLUS:+
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Listenable
														type_var:
															class:
																class_variable_names:List
														ACCESS:->
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Listenable
																		type_var:
																			class:
																				class_variable_names:List
														NEWLINE:$\n
													NEWLINE:$\n
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:createList
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														exact:
															WILD:on
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:event
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Events
																	type_var:
																		exact:
																			BACKSLASH:\
																			CAMEL:^
																			variable_names:eName
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:inputClass
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
										name_var:
											variable:
												variable_names:getMethod
									DOT:.
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:== 
					methodName:
						name_var:
							variable:
								variable_names:addToEventMethod
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:establishedMethod
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:newMethod
								typeName:
									METHOD_TYPE:Method 
								method_argument:
									method_declaration:
										methodDefinition:
											methodName:
												name_var:
													exact:
														WILD:on
											typeName:
												type_var:
													class:
														class_variable_names:void
											inline:
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	exact:
																		BACKSLASH:\
																		CAMEL:^
																		variable_names:eName
																type_var:
																	class:
																		class_variable_names:Events
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:appendToBody
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:body
									group:
										name_var:
											variable:
												variable_names:establishedMethod
									DOT:.
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:establishedMethod
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:inputClass
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newMethodName
								typeName:
									METHOD_TYPE:Method 
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							OPERATOR:: 
							conditional:
								FOR:for
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				DOT:.
																	COMMA:,
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
											body_element:
												NEWLINE:$\n
										conditional:
											IF:if
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										conditional:
											ELSE:else
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	COMMA:,
																	method_argument:
																		body_entries:
																	COMMA:,
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					inner:
						IN:>
					methodName:
						name_var:
							variable:
								variable_names:addEventMethods
					inline:
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:inputClass
							typeName:
								CLASS_TYPE:Class 
						variable_declaration:
							typeName:
								type_var:
									class:
										template_parameters:
											COMMA:,
											template_parameter:
												BODY_TYPE:Body 
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:Map
							variableName:
								name_var:
									variable:
										variable_names:bodiesToAdd
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
			objectType:
				CLASS:class 
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:method
							typeName:
								METHOD_TYPE:Method 
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:eventName
							typeName:
								type_var:
									class:
										class_variable_names:String
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:method
									group:
										name_var:
											variable:
												variable_names:addParameter
										parameters:
											method_argument:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															exact:
																variable_names:eventName
																BACKSLASH:\
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:addParameter
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Events
			NEWLINE:$\n
			NEWLINE:$\n
method_declaration:
	methodDefinition:
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:setup
		inner:
			IN:>
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
				variableName:
					name_var:
						variable:
							variable_names:data
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:menus
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Menu
			class_declaration:
				FORSLASH:/
				FORSLASH:/
				NEWLINE:$\n
				className:
					variable_names:Placable
				objectType:
					INTERFACE:interface 
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:place
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:area
								typeName:
									type_var:
										class:
											class_variable_names:Area
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:y
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								variableName:
									name_var:
										variable:
											variable_names:x
							COMMA:,
							COMMA:,
						typeName:
							type_var:
								class:
									class_variable_names:void
				NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:com.rem.qstnr
			inner:
				IN:>
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:packageName
		SEMICOLON:;
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			DOT:.
			SEMICOLON:;
			DOT:.
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:token
						BACKSLASH:\
			className:
				NAME:IToken
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
		anonymous_class:
			className:
				NAME:Listnames
			SEMICOLON:;
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:lists
						BACKSLASH:\
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			COLON::
			className:
				NAME:Iterator
			DOT:.
			SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:Comparable
			COLON::
			HID:<
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:lang
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		anonymous_class:
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:lists
						BACKSLASH:\
			HID:<
			className:
				NAME:Rules
			COLON::
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			className:
				NAME:ArrayList
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
			DOT:.
			HID:<
			COLON::
			className:
				NAME:Arrays
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:rules
			typeName:
				type_var:
					class:
						class_variable_names:List
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:parser
						group:
							name_var:
								variable:
									variable_names:Rules
						DOT:.
			EQUALS:=
			inner:
				IN:>
		anonymous_class:
			DOT:.
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:Runnable
			HID:<
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
			className:
				NAME:HashSet
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			SEMICOLON:;
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			DOT:.
			className:
				NAME:RegexParser
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			className:
				NAME:Comparator
			DOT:.
			HID:<
			SEMICOLON:;
		anonymous_class:
			className:
				NAME:Scanner
			COLON::
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			SEMICOLON:;
		anonymous_class:
			className:
				NAME:File
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:io
						BACKSLASH:\
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
		anonymous_class:
			className:
				NAME:Entry
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:generation
						BACKSLASH:\
			HID:<
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			DOT:.
		anonymous_class:
			className:
				NAME:ParseContext
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			DOT:.
		anonymous_class:
			SEMICOLON:;
			HID:<
			className:
				NAME:Iterable
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:lang
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			HID:<
			DOT:.
			className:
				NAME:IParser
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:Graphics
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:awt
			SEMICOLON:;
		anonymous_class:
			HID:<
			DOT:.
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:generation
			className:
				NAME:Generator
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			COLON::
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			DOT:.
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:HashMap
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			className:
				NAME:Map
			COLON::
			HID:<
		anonymous_class:
			DOT:.
			className:
				NAME:TreeSet
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			SEMICOLON:;
			HID:<
			COLON::
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			className:
				NAME:Thread
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			SEMICOLON:;
		variable_declaration:
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:rootParser
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:IParser
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:base
						group:
							name_var:
								variable:
									variable_names:Rules
						DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:Math
			SEMICOLON:;
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:lang
						BACKSLASH:\
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			className:
				NAME:List
			DOT:.
			COLON::
		anonymous_class:
			HID:<
			className:
				NAME:GeneralTokens
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lists
			COLON::
		anonymous_class:
			className:
				NAME:JFrame
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:javax
						BACKSLASH:\
			HID:<
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:swing
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:lazyNameParser
			inner:
				IN:>
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:GeneralTokens
						group:
							name_var:
								variable:
									variable_names:NAME
						DOT:.
			typeName:
				type_var:
					class:
						class_variable_names:RegexParser
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			className:
				NAME:Iterator
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			COLON::
		SEMICOLON:;
		anonymous_class:
			SEMICOLON:;
			className:
				NAME:StringBuilder
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:lang
						BACKSLASH:\
			COLON::
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			className:
				NAME:Set
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			COLON::
			SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			SEMICOLON:;
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:generation
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			DOT:.
			className:
				NAME:ListEntry
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Listnames
						group:
							name_var:
								variable:
									variable_names:parser
			variableName:
				name_var:
					variable:
						variable_names:listnames
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:List
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			HID:<
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			className:
				NAME:LinkedList
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
		NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:mods
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
					DOT:.
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:conditions
					NEWLINE:$\n
					class_declaration:
						DOT:.
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
						NEWLINE:$\n
						DOT:.
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:conditions
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						packageName:
							name_var:
								exact:
									WILD:mods
					className:
						variable_names:Condition
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Condition
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							inline:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					DOT:.
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:skillName
									typeName:
										type_var:
											class:
												class_variable_names:String
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Skill
							methodName:
								name_var:
									variable:
										variable_names:create
							static:
								STA:@
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_manipulate:
												body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								DOT:.
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																name_var:
																	exact:
																		WILD:cost
																EQUALS:=
															SEMICOLON:;
												methodName:
													ADD:+=
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														type_var:
															class:
																class_variable_names:Skills
														ACCESS:->
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:cooldown
										COLON::
									COLON::
									tokenInstance:
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		conditional:
																			ELSE:else
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													as_body:
																														body_element:
																															body_conditional:
																																conditional:
																																	ELSE:else
																																	IF:if
																																as_body:
																																	body_element:
																																		body_return:
																																			RETURN:return 
																																			SEMICOLON:;
																																			VOID:void
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																													conditional:
																														IF:if
																								name_var:
																									variable:
																										variable_names:prependToBody
																						OPERATOR:->*
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	body_line:
																		variable_declaration:
																			EQUALS:=
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_method:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														exact:
																															BACKSLASH:\
																															variable_names:getBooleanStatement
																													parameters:
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:useContext
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			access:
																																				ACCESS:->
																																				name_var:
																																					variable:
																																						variable_names:atom
																																				name_var:
																																					exact:
																																						WILD:boolean_statement
																			variableName:
																				name_var:
																					variable:
																						variable_names:bool
																			typeName:
																				STATEMENT_TYPE:Statement
																		SEMICOLON:;
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		conditional:
																			IF:if
																		as_body:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																						OPERATOR:->*
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													conditional:
																														IF:if
																													as_body:
																														body_element:
																															body_conditional:
																																as_body:
																																	body_element:
																																		body_return:
																																			VOID:void
																																			RETURN:return 
																																			SEMICOLON:;
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																																conditional:
																																	IF:if
																							group:
																								name_var:
																									exact:
																										WILD:use
																					SEMICOLON:;
																			body_element:
																				body_line:
																					variable_assignment:
																						name_var:
																							variable:
																								variable_names:isFirst
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						EQUALS:=
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:atom
																				name_var:
																					exact:
																						WILD:boolean_statement
																				ACCESS:->
																OPERATOR:!= 
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_method:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																access:
																																	name_var:
																																		variable:
																																			variable_names:atom
																																	ACCESS:->
																																	name_var:
																																		exact:
																																			WILD:has_chance
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:getChance
																variableName:
																	name_var:
																		variable:
																			variable_names:chance
																typeName:
																	STATEMENT_TYPE:Statement
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
													tokenName:
														NAME:option
													body_element:
														body_conditional:
															conditional:
																ELSE:else
															as_body:
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													as_body:
																														body_element:
																															body_return:
																																SEMICOLON:;
																																VOID:void
																																RETURN:return 
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																					SEMICOLON:;
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						EQUALS:=
																						name_var:
																							variable:
																								variable_names:isFirst
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									exact:
																										WILD:use
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														ELSE:else
																														IF:if
																													as_body:
																														body_element:
																															body_return:
																																VOID:void
																																RETURN:return 
																																SEMICOLON:;
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																						OPERATOR:->*
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																		conditional:
																			ELSE:else
																body_element:
																	NEWLINE:$\n
												name_var:
													variable:
														variable_names:element
												COLON::
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:miss
									tokenInstance:
										COLON::
										tokenName:
											NAME:range
										NEWLINE:$\n
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	exact:
																		WILD:range
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								DOT:.
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
																EQUALS:=
															SEMICOLON:;
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														ACCESS:->
														type_var:
															class:
																class_variable_names:Skills
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														ACCESS:->
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									tokenInstance:
										tokenName:
											NAME:use
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													NEWLINE:$\n
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_manipulate:
															methodName:
																ADD:+=
															body:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				as_method:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getBodyElement
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:useContext
															type_var:
																access_multi:
																	ACCESS:->
																	as_method:
																		AS_METHOD_NAME:*
																		name_var:
																			exact:
																				WILD:use
																		ACCESS:->
																	ACCESS:->
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:skillName
																	type_var:
																		class:
																			class_variable_names:Skills
												variableName:
													NAME:atom
												COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										COLON::
									tokenInstance:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:addVariableHeader
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Skills
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:variable_header
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
									variableName:
										NAME:element
									tokenInstance:
										NEWLINE:$\n
										tokenName:
											NAME:require
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												tokenInstance:
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:boolean_statement
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Skills
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:TargetCriteria
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:satisfies
																				name_var:
																					variable:
																						variable_names:getMethod
																			DOT:.
																typeName:
																	CONTEXT_TYPE:Context 
																variableName:
																	name_var:
																		variable:
																			variable_names:canUseContext
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Skills
																				name_var:
																					variable:
																						variable_names:TargetCriteria
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																				ACCESS:->
																				ACCESS:->
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:satisfies
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				as_statement:
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:canUseContext
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:false
																										SEMICOLON:;
																										RETURN:return 
																	DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
												variableName:
													NAME:atom
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_quote:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:description
														DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:description
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Skills
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:skillName
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:skillName
																				name_var:
																					variable:
																						variable_names:equals
																			DOT:.
																	conditional:
																		IF:if
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Skills
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										WEAK:~
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:isFirst
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		name_var:
																			exact:
																				WILD:targetCriteria
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						NEW:new 
																						parameters:
																						typeName:
																							type_var:
																								access_multi:
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:TargetCriteria
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:skillName
																									type_var:
																										class:
																											class_variable_names:Skills
																									ACCESS:->
																		EQUALS:=
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Skills
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														ACCESS:->
														ACCESS:->
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:+
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:description
										typeName:
											STATEMENT_TYPE:Statement
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:skillName
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:skillName
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
																ACCESS:->
										EQUALS:=
							body_element:
								body_manipulate:
									class_declaration:
										WEAK:~
										NEWLINE:$\n
										objectType:
											CLASS:class 
										FORSLASH:/
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:user
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
										NEWLINE:$\n
										parentName:
											type_var:
												exact:
													variable_names:EntityCriteria
													BACKSLASH:\
										className:
											variable_names:TargetCriteria
										FORSLASH:/
									methodName:
										ADD:+=
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Skills
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:skillName
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Skills
									class_declaration:
										SEMICOLON:;
										variable_declaration:
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Skill
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
															NEW:new 
															parameters:
											variableName:
												name_var:
													exact:
														WILD:id
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Skill
														ACCESS:->
										NEWLINE:$\n
										FORSLASH:/
										className:
											variable_names:skillName
										NEWLINE:$\n
										FORSLASH:/
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														SEMICOLON:;
												inline:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
										NEWLINE:$\n
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Skill
															type_var:
																class:
																	class_variable_names:Id
												inline:
												methodName:
													name_var:
														variable:
															variable_names:getId
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Skill
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:skillName
												methodName:
													name_var:
														variable:
															variable_names:getName
												inline:
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:user
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
													COMMA:,
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:victim
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														variable:
															variable_names:use
												body_element:
													NEWLINE:$\n
									methodName:
										ADD:+=
							body_element:
								body_line:
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										method_argument:
											body_statement:
												body_call:
													DOT:.
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getContext
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:use
														name_var:
															variable:
																variable_names:getMethod
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:skillName
																name_var:
																	variable:
																		variable_names:Skills
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:useContext
									SEMICOLON:;
					method_declaration:
						methodDefinition:
							typeName:
								STATEMENT_TYPE:Statement
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:name
									typeName:
										type_var:
											class:
												class_variable_names:String
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Skills
																ACCESS:->
																name_var:
																	variable:
																		variable_names:name
													group:
														name_var:
															variable:
																variable_names:id
									SEMICOLON:;
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					objectType:
						CLASS:class 
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:skills
					className:
						variable_names:Skills
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					DOT:.
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										exact:
											variable_names:EntityCriteria
											BACKSLASH:\
									class_declaration:
										objectType:
											CLASS:class 
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Environment
														ACCESS:->
														type_var:
															class:
																class_variable_names:Position
											variableName:
												name_var:
													variable:
														variable_names:to
											EQUALS:=
										variable_declaration:
											EQUALS:=
											typeName:
												type_var:
													class:
														class_variable_names:Double
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
											variableName:
												name_var:
													variable:
														variable_names:angleLeft
										SEMICOLON:;
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Double
											EQUALS:=
											variableName:
												name_var:
													variable:
														variable_names:angleRight
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
										parentName:
											type_var:
												exact:
													variable_names:EntityCriteria
													BACKSLASH:\
										NEWLINE:$\n
										SEMICOLON:;
										method_declaration:
											methodDefinition:
												body_element:
													body_line:
														SEMICOLON:;
														variable_declaration:
															typeName:
																type_var:
																	class:
																		class_variable_names:Double
															variableName:
																name_var:
																	variable:
																		variable_names:direction
															EQUALS:=
															method_argument:
																body_statement:
																	body_call:
																		DOT:.
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:getLocation
																			parameters:
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:to
																			name_var:
																				variable:
																					variable_names:getDirectionTo
																		group:
																			name_var:
																				variable:
																					variable_names:candidate
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:candidate
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																OPERATOR:<= 
																OPERATOR:& 
																OPERATOR:>= 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleLeft
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleRight
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:satisfies
										SEMICOLON:;
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										className:
											variable_names:AngleTo
										FORSLASH:/
										FORSLASH:/
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
												name_var:
													exact:
														variable_names:createList
														BACKSLASH:\
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:data
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										FORSLASH:/
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:candidate
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
										className:
											variable_names:Free
										NEWLINE:$\n
										FORSLASH:/
										objectType:
											CLASS:class 
										NEWLINE:$\n
										parentName:
											type_var:
												exact:
													variable_names:EntityCriteria
													BACKSLASH:\
									type_var:
										exact:
											variable_names:EntityCriteria
											BACKSLASH:\
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
				class_declaration:
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getName
							inline:
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
															DOT:.
															group:
																name_var:
																	exact:
																		WILD:otherSkill
														OPERATOR:- 
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:compareTo
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:otherSkill
									typeName:
										type_var:
											class:
												class_variable_names:Skill
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:otherSkill
											DOT:.
											group:
												name_var:
													exact:
														WILD:cooldown
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										OPERATOR:== 
									conditional:
										IF:if
									as_body:
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															SEMICOLON:;
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	OPERATOR:- 
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:hasEntityFocus
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_return:
															SEMICOLON:;
															method_argument:
																body_statement:
																	OPERATOR:- 
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		DOT:.
															RETURN:return 
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:newFocus
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
										name_var:
											exact:
												WILD:hasEntityFocus
										EQUALS:=
									SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:range
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Modifier
									type_var:
										class:
											class_variable_names:Entity
									ACCESS:->
					variable_declaration:
						WEAK:~
						variableName:
							name_var:
								exact:
									WILD:hasEntityFocus
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								exact:
									variable_names:EntityCriteria
									BACKSLASH:\
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:targetCriteria
						EQUALS:=
					NEWLINE:$\n
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							methodName:
								name_var:
									variable:
										variable_names:getRange
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
												group:
													name_var:
														exact:
															WILD:range
												DOT:.
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:entity
							body_element:
								NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
												DOT:.
												group:
													name_var:
														exact:
															WILD:(int)(float)cost
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:entity
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:getCost
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							inline:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							inline:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Skill
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:newFocus
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
										name_var:
											exact:
												WILD:hasEntityFocus
										EQUALS:=
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:setFocus
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:behaviours
					class_declaration:
						FORSLASH:/
						NEWLINE:$\n
						objectType:
							CLASS:class 
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Usable
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
						FORSLASH:/
						className:
							variable_names:Id
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:> 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
													BACKSLASH:\
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Events
												type_var:
													exact:
														BACKSLASH:\
														variable_names:Tick
									variableName:
										name_var:
											exact:
												WILD:event
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Entity
									type_var:
										class:
											class_variable_names:Modifier
									ACCESS:->
						variableName:
							name_var:
								exact:
									WILD:cost
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						variableName:
							name_var:
								exact:
									WILD:cooldown
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					className:
						variable_names:Skill
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:use
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:user
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:victim
					DOT:.
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:activity
											group:
												name_var:
													variable:
														variable_names:hasTarget
												parameters:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_return:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															SEMICOLON:;
															RETURN:return 
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activity
																						group:
																							parameters:
																							name_var:
																								variable:
																									variable_names:getTargetEntity
																						DOT:.
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:targetCriteria
														group:
															name_var:
																variable:
																	variable_names:satisfies
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:activity
																			group:
																				name_var:
																					variable:
																						variable_names:getTargetEntity
																				parameters:
																			DOT:.
												conditional:
													IF:if
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:isOffCooldown
														BACKSLASH:\
												parameters:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:user
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:activity
									typeName:
										type_var:
											class:
												class_variable_names:Activity
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												OPERATOR:: 
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:potential
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												conditional:
													FOR:for
												body_statement:
													body_call:
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getLocation
															parameters:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:targetCriteria
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:getRange
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																COMMA:,
															name_var:
																variable:
																	variable_names:getEntitiesWithin
														group:
															name_var:
																variable:
																	variable_names:user
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				variable_names:use
																				BACKSLASH:\
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:potential
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
													body_element:
														body_return:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															RETURN:return 
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:experience
						EQUALS:=
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:canChase
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:true
									SEMICOLON:;
									RETURN:return 
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							inline:
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:cooldown
											OPERATOR:== 
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:isOffCooldown
							inline:
							body_element:
								NEWLINE:$\n
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getName
							inline:
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:skills
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Entities
							methodName:
								ADD:+=
							class_declaration:
								packageName:
									name_var:
										exact:
											WILD:entities
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								NEWLINE:$\n
								DOT:.
								className:
									variable_names:entityName
								parentName:
									type_var:
										class:
											class_variable_names:Entity
								objectType:
									CLASS:class 
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												access:
													ACCESS:->
													name_var:
														variable:
															variable_names:Factory
													ACCESS:->
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:entityName
													name_var:
														variable:
															variable_names:Entities
							RETURN:return 
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:entityNameBuilder
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												typeName:
													type_var:
														class:
															class_variable_names:StringBuilder
												NEW:new 
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:StringBuilder
							SEMICOLON:;
					typeName:
						CLASS_TYPE:Class 
					body_element:
						body_manipulate:
							methodName:
								ADD:+=
							class_declaration:
								interfaceName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Factory
											type_var:
												class:
													class_variable_names:Entity
											ACCESS:->
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								NEWLINE:$\n
								DOT:.
								packageName:
									name_var:
										exact:
											WILD:entities
								method_declaration:
									methodDefinition:
										inline:
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																typeName:
																	type_var:
																		access_multi:
																			type_var:
																				class:
																					class_variable_names:Entities
																			ACCESS:->
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:entityName
																parameters:
																NEW:new 
												SEMICOLON:;
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:create
										body_element:
											NEWLINE:$\n
								objectType:
									CLASS:class 
								className:
									variable_names:Factory
								parentName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:Object
								NEWLINE:$\n
							type_var:
								access_multi:
									type_var:
										exact:
											variable_names:entityName
											BACKSLASH:\
									type_var:
										class:
											class_variable_names:Entities
									ACCESS:->
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:toString
											group:
												name_var:
													variable:
														variable_names:entityNameBuilder
											DOT:.
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:entityName
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:declarationToken
							typeName:
								type_var:
									class:
										class_variable_names:IToken
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										tokenInstance:
											COLON::
											tokenName:
												NAME:affinity_names
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
														OPERATOR:->*.
														body_call:
															group:
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													NEW:new 
																													parameters:
																													typeName:
																														type_var:
																															access_multi:
																																ACCESS:->
																																type_var:
																																	class:
																																		class_variable_names:Affinities
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:atom
																																							CAMEL:^
																									COMMA:,
																					SEMICOLON:;
																name_var:
																	variable:
																		variable_names:appendToBody
											body_element:
												NEWLINE:$\n
										COLON::
										variableName:
											NAME:atom
										name_var:
											variable:
												variable_names:element
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:entity_definition
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:rightBound
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:heroStatName
																							DOT:.
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:getIntegerBetween
																													parameters:
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:leftBound
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:rightBound
																												group:
																													name_var:
																														variable:
																															variable_names:Range
																												DOT:.
																								name_var:
																									variable:
																										variable_names:setValue
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_conditional:
													as_body:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																SEMICOLON:;
																variable_assignment:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:leftBound
																	EQUALS:=
																	name_var:
																		variable:
																			variable_names:rightBound
													conditional:
														ELSE:else
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														EQUALS:=
														typeName:
															type_var:
																class:
																	class_variable_names:String
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									ACCESS:->
																									name_var:
																										exact:
																											WILD:left
																									name_var:
																										variable:
																											variable_names:atom
														variableName:
															name_var:
																variable:
																	variable_names:leftBound
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_conditional:
													conditional:
														IF:if
													as_body:
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																variable_assignment:
																	EQUALS:=
																	name_var:
																		variable:
																			variable_names:rightBound
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												ACCESS:->
																												name_var:
																													variable:
																														variable_names:atom
																												name_var:
																													exact:
																														WILD:left
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:atom
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:right
														OPERATOR:!= 
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:atom
																									ACCESS:->
																									name_var:
																										exact:
																											WILD:hero_stats
																	DOT:.
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:toLowerCase
														variableName:
															name_var:
																variable:
																	variable_names:heroStatName
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											COLON::
											tokenName:
												NAME:statRange
										COLON::
										variableName:
											NAME:atom
								body_element:
									body_manipulate:
										variableName:
											NAME:atom
										name_var:
											variable:
												variable_names:element
										COLON::
										tokenInstance:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:skill
											body_element:
												body_line:
													variable_declaration:
														EQUALS:=
														variableName:
															name_var:
																variable:
																	variable_names:arguments
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			STATEMENT_TYPE:Statement
																		parameters:
																		NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
													SEMICOLON:;
											COLON::
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													COLON::
													tokenInstance:
														tokenName:
															NAME:statement
														body_element:
															NEWLINE:$\n
														COLON::
														body_element:
															body_line:
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:arguments
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:bodyContext
																									COMMA:,
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getStatement
																			name_var:
																				variable:
																					variable_names:add
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
													name_var:
														variable:
															variable_names:atom
													variableName:
														NAME:quark
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:arguments
															group:
																name_var:
																	variable:
																		variable_names:set
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:,
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															CONTEXT_TYPE:Context 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Entity
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getContext
																	DOT:.
														EQUALS:=
														variableName:
															name_var:
																variable:
																	variable_names:bodyContext
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_method:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:arguments
																													typeName:
																														type_var:
																															access_multi:
																																ACCESS:->
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						access:
																																							name_var:
																																								exact:
																																									WILD:skill_names
																																							CAMEL:^
																																							ACCESS:->
																																							name_var:
																																								variable:
																																									variable_names:atom
																																type_var:
																																	class:
																																		class_variable_names:Skills
																													NEW:new 
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																								name_var:
																									variable:
																										variable_names:gain
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							DOT:.
																					SEMICOLON:;
								body_element:
									body_manipulate:
										tokenInstance:
											tokenName:
												NAME:event
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														EQUALS:=
														variableName:
															name_var:
																variable:
																	variable_names:eventBody
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		typeName:
																			BODY_TYPE:Body 
																		parameters:
														typeName:
															BODY_TYPE:Body 
													SEMICOLON:;
											body_element:
												body_line:
													variable_declaration:
														typeName:
															CONTEXT_TYPE:Context 
														method_argument:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	group:
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									ACCESS:->
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:entityName
																									name_var:
																										variable:
																											variable_names:Entities
																			method_argument:
																				body_entries:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:atom
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:event_names
																			COMMA:,
																		name_var:
																			variable:
																				variable_names:addToEventMethod
														EQUALS:=
														variableName:
															name_var:
																variable:
																	variable_names:eventContext
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													tokenInstance:
														COLON::
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:eventBody
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:eventContext
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getBodyElement
																			name_var:
																				variable:
																					variable_names:add
																SEMICOLON:;
														tokenName:
															NAME:body_element
													variableName:
														NAME:quark
													name_var:
														variable:
															variable_names:atom
													COLON::
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:addToEventMethod
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													variable:
																														variable_names:atom
																												name_var:
																													exact:
																														WILD:event_names
																												ACCESS:->
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							ACCESS:->
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:entityName
																							name_var:
																								variable:
																									variable_names:Entities
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:eventBody
																	COMMA:,
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:Events
											body_element:
												NEWLINE:$\n
										name_var:
											variable:
												variable_names:element
										variableName:
											NAME:atom
										COLON::
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:declarationToken
							variableName:
								NAME:element
							COLON::
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:declarationToken
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:entityNameBuilder
												DOT:.
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:element
								tokenName:
									NAME:entityName
								body_element:
									NEWLINE:$\n
							COLON::
					body_element:
						NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:entities
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:createEntity
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
					static:
						STA:@
					typeName:
						type_var:
							class:
								class_variable_names:Entity
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:entityName
							typeName:
								type_var:
									class:
										class_variable_names:String
			className:
				variable_names:Entities
			objectType:
				CLASS:class 
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:newValue
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					body_element:
						body_line:
							variable_assignment:
								name_var:
									variable:
										variable_names:value
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newValue
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:setValue
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0
				typeName:
					type_var:
						class:
							class_variable_names:Integer
				variableName:
					name_var:
						variable:
							variable_names:value
				EQUALS:=
			NEWLINE:$\n
			DOT:.
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								BACKSLASH:\
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								OPERATOR:+= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:amount
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:amount
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Int
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:event
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Entity
												type_var:
													class:
														class_variable_names:Event
												ACCESS:->
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								COMMA:,
							methodName:
								name_var:
									variable:
										variable_names:listen
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:getId
												parameters:
											group:
												name_var:
													variable:
														variable_names:event
											DOT:.
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:FailedToMove
														name_var:
															variable:
																variable_names:Entity
														name_var:
															variable:
																variable_names:Event
														ACCESS:->
											group:
												name_var:
													variable:
														variable_names:id
											DOT:.
									conditional:
										IF:if
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:explore
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newArea
									typeName:
										type_var:
											class:
												class_variable_names:Area
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:exploredAreas
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newArea
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							inline:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
										type_var:
											class:
												class_variable_names:Activity
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:hasSucceeded
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
									RETURN:return 
					DOT:.
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								class:
									class_variable_names:Entity
						WEAK:~
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:targetEntity
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:Tile
							methodName:
								name_var:
									variable:
										variable_names:getDestination
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:rememberEntryPoint
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:point
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Tiles
												type_var:
													class:
														class_variable_names:EntryPoint
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:point
											group:
												name_var:
													variable:
														variable_names:exploredPoints
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:behaviours
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:failed
									RETURN:return 
							methodName:
								name_var:
									variable:
										variable_names:hasFailed
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:step
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													FOR:for
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
															parameters:
												OPERATOR:: 
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															body_statement:
																OPERATOR:!=
																OPERATOR:&& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	group:
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:this
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																		name_var:
																			variable:
																				variable_names:use
																	DOT:.
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:getFocusSkill
																		parameters:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:host
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
															conditional:
																IF:if
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_return:
																		SEMICOLON:;
																		RETURN:return 
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:true
																body_element:
																	NEWLINE:$\n
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
											group:
												name_var:
													variable:
														variable_names:contains
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
																group:
																	name_var:
																		variable:
																			variable_names:getFocusSkill
																	parameters:
																DOT:.
											DOT:.
										OPERATOR:|| 
										OPERATOR:|| 
										body_call:
											group:
												name_var:
													variable:
														variable_names:host
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getFocusSkill
												parameters:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:use
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:this
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												name_var:
													variable:
														variable_names:host
											group:
												parameters:
												name_var:
													variable:
														variable_names:getFocusSkill
											DOT:.
										OPERATOR:==
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:== 
									conditional:
										IF:if
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getUsables
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Usable
										type_var:
											class:
												class_variable_names:List
										ACCESS:->
							inline:
					NEWLINE:$\n
					DOT:.
					variable_declaration:
						EQUALS:=
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:String
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								variable:
									variable_names:name
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Set
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:Area
						variableName:
							name_var:
								variable:
									variable_names:exploredAreas
						EQUALS:=
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										NEW:new 
										parameters:
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Area
													class_variable_names:HashSet
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:failed
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:true
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							inline:
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
											group:
												name_var:
													variable:
														variable_names:isEmpty
												parameters:
										OPERATOR:== 
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															DOT:.
															group:
																parameters:
																	method_argument:
																		body_statement:
																			OPERATOR:* 
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:size
																					parameters:
																				group:
																					parameters:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getUsables
																				DOT:.
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:((int)(double)randomIndex)
																			BACKSLASH:\
																name_var:
																	variable:
																		variable_names:get
															group:
																parameters:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:getUsables
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:Math
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:random
																	parameters:
													typeName:
														type_var:
															class:
																class_variable_names:Double
													variableName:
														name_var:
															variable:
																variable_names:randomIndex
													EQUALS:=
							methodName:
								name_var:
									variable:
										variable_names:pick
							typeName:
								type_var:
									class:
										class_variable_names:Usable
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:add
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Usable
									variableName:
										name_var:
											variable:
												variable_names:newUsable
					class_declaration:
						objectType:
							CLASS:class 
						FORSLASH:/
						className:
							variable_names:Listeners
						NEWLINE:$\n
						class_declaration:
							SEMICOLON:;
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											exact:
												BACKSLASH:\
												variable_names:Fail
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:on
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:event
													group:
														name_var:
															variable:
																variable_names:host
													DOT:.
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:listen
									inline:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															exact:
																variable_names:Fail
																BACKSLASH:\
														type_var:
															class:
																class_variable_names:Events
														ACCESS:->
											variableName:
												name_var:
													variable:
														variable_names:event
							objectType:
								CLASS:class 
							variable_declaration:
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								variableName:
									name_var:
										variable:
											variable_names:host
							FORSLASH:/
							className:
								variable_names:Fail
							FORSLASH:/
						NEWLINE:$\n
						FORSLASH:/
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:failed
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						WEAK:~
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:remove
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Usable
									variableName:
										name_var:
											variable:
												variable_names:newUsable
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:activities
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
								variable_declaration:
									typeName:
										type_var:
											exact:
												variable_names:EntityCriteria
												BACKSLASH:\
									variableName:
										name_var:
											variable:
												variable_names:targetCriteria
								COMMA:,
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:getClosestEntity
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:targetCriteria
												DOT:.
												group:
													name_var:
														variable:
															variable_names:getLocation
													parameters:
												group:
													name_var:
														variable:
															variable_names:host
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:getTarget
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:hasSucceeded
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:host
														group:
															name_var:
																variable:
																	variable_names:stop
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								exact:
																									variable_names:Success
																									BACKSLASH:\
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Events
																				NEW:new 
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
									conditional:
										IF:if
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:event
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
										variableName:
											name_var:
												variable:
													variable_names:host
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:hasFailed
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
									conditional:
										ELSE:else
										IF:if
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:host
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
															name_var:
																variable:
																	variable_names:stop
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								exact:
																									variable_names:Fail
																									BACKSLASH:\
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
										ELSE:else
									body_statement:
										OPERATOR:==
										body_call:
											group:
												name_var:
													exact:
														variable_names:step
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					COMMA:,
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:Idle
																									BACKSLASH:\
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												type_var:
													exact:
														BACKSLASH:\
														variable_names:Tick
												ACCESS:->
												type_var:
													class:
														class_variable_names:Events
									variableName:
										name_var:
											variable:
												variable_names:event
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													exact:
														BACKSLASH:\
														variable_names:Idle
												type_var:
													class:
														class_variable_names:Events
									variableName:
										name_var:
											variable:
												variable_names:event
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											variable:
												variable_names:failed
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
										EQUALS:=
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:entitiesToTarget
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:20f
														name_var:
															variable:
																variable_names:getEntitiesWithin
													DOT:.
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getLocation
													group:
														parameters:
														name_var:
															variable:
																variable_names:getHost
													DOT:.
													group:
														name_var:
															variable:
																variable_names:event
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:List
													ACCESS:->
													type_var:
														class:
															class_variable_names:Entity
									SEMICOLON:;
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		body_statement:
																			body_call:
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:getHost
																					parameters:
																				group:
																					name_var:
																						variable:
																							variable_names:event
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											COMMA:,
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:candidate
																											COMMA:,
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:usable
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:getRange
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:event
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:getHost
																																				parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	NAME:
																																		NUMBER:25
																										typeName:
																											type_var:
																												access_multi:
																													ACCESS:->
																													type_var:
																														class:
																															class_variable_names:Activities
																													type_var:
																														exact:
																															BACKSLASH:\
																															variable_names:ChasingEntity
																										NEW:new 
																					name_var:
																						variable:
																							variable_names:start
																				DOT:.
																		SEMICOLON:;
																body_element:
																	body_return:
																		VOID:void
																		SEMICOLON:;
																		RETURN:return 
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getTargetCriteria
																		parameters:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:candidate
																		name_var:
																			variable:
																				variable_names:satisfies
															conditional:
																IF:if
												conditional:
													FOR:for
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
															parameters:
												OPERATOR:: 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									OPERATOR:: 
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:entitiesToTarget
									conditional:
										FOR:for
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:candidate
										typeName:
											type_var:
												class:
													class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:on
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Activity
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:description
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:String
					class_declaration:
						FORSLASH:/
						objectType:
							INTERFACE:interface 
						NEWLINE:$\n
						NEWLINE:$\n
						className:
							variable_names:Factory
						FORSLASH:/
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:create
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								inline:
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:exploredAreas
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:area
													name_var:
														variable:
															variable_names:contains
							methodName:
								name_var:
									variable:
										variable_names:hasExplored
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:area
									typeName:
										type_var:
											class:
												class_variable_names:Area
					objectType:
						CLASS:class 
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:exploredPoints
						typeName:
							type_var:
								class:
									class_variable_names:Set
									template_parameters:
										template_parameter:
											type_var:
												access_multi:
													SPECIAL_ACCESS:\>
													type_var:
														class:
															class_variable_names:Tiles
													type_var:
														class:
															class_variable_names:EntryPoint
						method_argument:
							body_statement:
								body_call:
									group:
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Tiles
																	type_var:
																		class:
																			class_variable_names:EntryPoint
																	SPECIAL_ACCESS:\>
													class_variable_names:HashSet
										parameters:
										NEW:new 
						WEAK:~
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							inline:
							methodName:
								name_var:
									variable:
										variable_names:hasTarget
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:targetEntity
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											OPERATOR:!= 
									SEMICOLON:;
									RETURN:return 
					NEWLINE:$\n
					class_declaration:
						NEWLINE:$\n
						className:
							variable_names:Id
						FORSLASH:/
						objectType:
							CLASS:class 
						FORSLASH:/
					NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:variable_declaration
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													OPERATOR:!= 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		variable:
																			variable_names:element
																	name_var:
																		exact:
																			WILD:statement
																	ACCESS:->
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:variable
																	group:
																		name_var:
																			variable:
																				variable_names:setAssignment
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:Activities
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:activityName
																														ACCESS:->
																											DOT:.
																											group:
																												parameters:
																												name_var:
																													variable:
																														variable_names:getContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:element
																														name_var:
																															exact:
																																WILD:statement
																														ACCESS:->
																								COMMA:,
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getStatement
																	DOT:.
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:variable
													typeName:
														VARIABLE_TYPE:Variable 
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:variable_header
																								name_var:
																									variable:
																										variable_names:element
																								ACCESS:->
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																								name_var:
																									variable:
																										variable_names:Activities
																	name_var:
																		exact:
																			variable_names:addVariableHeader
																			BACKSLASH:\
										COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
															name_var:
																variable:
																	variable_names:setIsWeak
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:variable
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:getTarget
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															OPERATOR:->*
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Activities
																			ACCESS:->
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:getTarget[Entity,EntityCriteria]
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getContext
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														inline:
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
																variableName:
																	name_var:
																		variable:
																			variable_names:host
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:targetCriteria
																typeName:
																	type_var:
																		exact:
																			BACKSLASH:\
																			variable_names:EntityCriteria
															COMMA:,
														methodName:
															name_var:
																variable:
																	variable_names:getTarget
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														type_var:
															class:
																class_variable_names:Activities
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								COMMA:,
																		name_var:
																			variable:
																				variable_names:appendToBody
																	group:
																		name_var:
																			exact:
																				WILD:getTarget[Entity,EntityCriteria]
																	DOT:.
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																				ACCESS:->
																OPERATOR:->*
															SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									tokenInstance:
										tokenName:
											NAME:endState
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:successContext
																EQUALS:=
																typeName:
																	CONTEXT_TYPE:Context 
																method_argument:
																	body_statement:
																		OPERATOR:->*
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:getContext
																				parameters:
																			group:
																				name_var:
																					exact:
																						WILD:hasSucceeded[Entity]
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:successContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:element
																																						ACCESS:->
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																COMMA:,
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																							as_body:
																								body_element:
																									body_return:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																										SEMICOLON:;
																										RETURN:return 
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																	group:
																		name_var:
																			exact:
																				WILD:hasSucceeded[Entity]
																	DOT:.
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		variable:
																			variable_names:element
																	ACCESS:->
																	name_var:
																		exact:
																			WILD:SUCCEED
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															variable_declaration:
																typeName:
																	CONTEXT_TYPE:Context 
																variableName:
																	name_var:
																		variable:
																			variable_names:failContext
																EQUALS:=
																method_argument:
																	body_statement:
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:hasFailed[Entity]
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																OPERATOR:->*
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										RETURN:return 
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																										SEMICOLON:;
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:failContext
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:element
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																		name_var:
																			variable:
																				variable_names:appendToBody
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:hasFailed[Entity]
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
									variableName:
										NAME:element
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										tokenName:
											NAME:className
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:methodName
													typeName:
														type_var:
															class:
																class_variable_names:String
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				exact:
																					WILD:,Source]
																			PLUS:+
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:element
																			name_var:
																				exact:
																					WILD:gain[
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:toLowerCase
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
													variableName:
														name_var:
															variable:
																variable_names:variableName
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													OPERATOR:->*
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Entity
													body_call:
														group:
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:allUsables
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:Activities
																									ACCESS:->
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:add
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													as_string:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:variableName
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
															name_var:
																variable:
																	variable_names:appendToBody
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
														DOT:.
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:description
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
										variableName:
											name_var:
												variable:
													variable_names:description
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:activityName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:activityName
																ACCESS:->
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Events
																group:
																	name_var:
																		variable:
																			variable_names:getEventContext
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:Activities
																								ACCESS:->
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													name_var:
																														exact:
																															WILD:event_names
																													ACCESS:->
																													name_var:
																														variable:
																															variable_names:element
																		COMMA:,
																DOT:.
													EQUALS:=
													typeName:
														CONTEXT_TYPE:Context 
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:event_names
																											name_var:
																												variable:
																													variable_names:element
																											ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventContext
																					COMMA:,
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBodyElements
												SEMICOLON:;
										COLON::
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				RETURN:return 
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:activityName
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Activities
																								parameters:
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:activityName
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																				name_var:
																					variable:
																						variable_names:equals
																	conditional:
																		IF:if
												name_var:
													variable:
														variable_names:prependToBody
											group:
												name_var:
													exact:
														WILD:create
										OPERATOR:->*
										body_call:
											group:
												name_var:
													variable:
														variable_names:Activities
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:variable_header
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:addVariableHeader
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Activities
									class_declaration:
										parentName:
											type_var:
												class:
													class_variable_names:Activity
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:host
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:hasFailed
										SEMICOLON:;
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											variableName:
												name_var:
													variable:
														variable_names:host
											WEAK:~
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
										NEWLINE:$\n
										SEMICOLON:;
										FORSLASH:/
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Usable
															ACCESS:->
															type_var:
																class:
																	class_variable_names:List
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getUsables
												inline:
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:allUsables
										FORSLASH:/
										className:
											variable_names:activityName
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												inline:
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														RETURN:return 
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Activity
															type_var:
																class:
																	class_variable_names:Id
															ACCESS:->
												methodName:
													name_var:
														variable:
															variable_names:getId
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activityName
														SEMICOLON:;
														RETURN:return 
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getName
										NEWLINE:$\n
										SEMICOLON:;
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:host
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												methodName:
													name_var:
														variable:
															variable_names:hasSucceeded
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
										NEWLINE:$\n
										variable_declaration:
											static:
												STA:@
											EQUALS:=
											variableName:
												name_var:
													variable:
														variable_names:allUsables
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:List
														ACCESS:->
														type_var:
															class:
																class_variable_names:Usable
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Usable
																		type_var:
																			class:
																				class_variable_names:List
															parameters:
															NEW:new 
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										variable_declaration:
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Activity
															parameters:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Activity
											static:
												STA:@
											variableName:
												name_var:
													variable:
														variable_names:id
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												inline:
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	RETURN:return 
																	SEMICOLON:;
											group:
												name_var:
													exact:
														WILD:hasFailed[Entity]
											DOT:.
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
														name_var:
															variable:
																variable_names:Activities
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:on
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									typeName:
																										type_var:
																											access_multi:
																												ACCESS:->
																												type_var:
																													exact:
																														variable_names:Load
																														BACKSLASH:\
																												type_var:
																													class:
																														class_variable_names:Events
																									NEW:new 
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:host
																	SEMICOLON:;
										OPERATOR:->*.
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
														name_var:
															variable:
																variable_names:Activities
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:hasSucceeded[Entity]
											DOT:.
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	RETURN:return 
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												COLON::
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																body_call:
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:getDestination[Entity]
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								COMMA:,
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																OPERATOR:->*
													COLON::
													tokenName:
														NAME:body_element
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Activities
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
												methodName:
													ADD:+=
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														methodName:
															name_var:
																variable:
																	variable_names:getDestination
														inline:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:host
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:getDestination
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
																			name_var:
																				variable:
																					variable_names:Activities
																			ACCESS:->
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:getDestination[Entity]
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getContext
																DOT:.
															OPERATOR:->*
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													typeName:
														CONTEXT_TYPE:Context 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									COLON::
					NEWLINE:$\n
					objectType:
						CLASS:class 
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					className:
						variable_names:Activities
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:activities
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:activityName
									typeName:
										type_var:
											class:
												class_variable_names:String
							typeName:
								type_var:
									class:
										class_variable_names:Activity
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							static:
								STA:@
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													method_argument:
														body_entries:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:idle
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
											DOT:.
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							inner:
								IN:>
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:success
													COMMA:,
													COMMA:,
													method_argument:
														body_entries:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
												name_var:
													variable:
														variable_names:addToEventMethod
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													method_argument:
														body_entries:
													COMMA:,
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:load
												name_var:
													variable:
														variable_names:addToEventMethod
											DOT:.
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_entries:
													COMMA:,
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
											DOT:.
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:strengths
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:affinityName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:affinityName
																					name_var:
																						variable:
																							variable_names:declarationToken
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:weaknesses
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
														typeName:
															STATEMENT_TYPE:Statement
														NEW:new 
										typeName:
											STATEMENT_TYPE:Statement
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:strength_name
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:hasAffinity
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											CAMEL:^
																											variable_names:element
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:strengths
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											DOT:.
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			body_return:
																				SEMICOLON:;
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Affinities
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:affinityClassName
																								parameters:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:affinityName
																				name_var:
																					variable:
																						variable_names:equals
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:affinityClassName
																			DOT:.
												name_var:
													variable:
														variable_names:prependToBody
											group:
												name_var:
													variable:
														variable_names:Affinities
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
									SEMICOLON:;
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Affinities
									class_declaration:
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										packageName:
											name_var:
												exact:
													WILD:mods
										method_declaration:
											methodDefinition:
												inline:
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:affinityName
										DOT:.
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:entities
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:defender
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
													COMMA:,
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Double
														variableName:
															name_var:
																exact:
																	WILD:damage
												methodName:
													name_var:
														variable:
															variable_names:modify
												body_element:
													NEWLINE:$\n
												body_element:
													body_conditional:
														conditional:
															IF:if
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:weaknesses
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
																		OPERATOR:/= 
															body_element:
																NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Double
												body_element:
													body_conditional:
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	body_statement:
																		OPERATOR:*= 
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
														conditional:
															IF:if
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:strengths
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:damage
										objectType:
											CLASS:class 
										parentName:
											type_var:
												class:
													class_variable_names:Affinity
										className:
											variable_names:affinityClassName
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:affinities
										SEMICOLON:;
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:id
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Affinity
															parameters:
											EQUALS:=
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Affinity
														ACCESS:->
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																											CAMEL:^
																				name_var:
																					exact:
																						variable_names:hasAffinity
																						BACKSLASH:\
														group:
															name_var:
																variable:
																	variable_names:weaknesses
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:weakness_name
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:affinityClassName
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																CAMEL:^
																variable_names:affinityName
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					className:
						variable_names:Affinities
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:Affinities
																name_var:
																	variable:
																		variable_names:name
													DOT:.
													group:
														name_var:
															variable:
																variable_names:id
							methodName:
								name_var:
									variable:
										variable_names:getId
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:affinityName
									typeName:
										type_var:
											class:
												class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							static:
								STA:@
							typeName:
								type_var:
									class:
										class_variable_names:Affinity
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:affinities
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:hasAffinity
							typeName:
								STATEMENT_TYPE:Statement
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:affinityName
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															exact:
																WILD:defender
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:id
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:Affinities
																					ACCESS:->
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:affinityName
																		DOT:.
														name_var:
															variable:
																variable_names:has
									RETURN:return 
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Double
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0.0
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							inline:
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Double
									variableName:
										name_var:
											exact:
												WILD:damage
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:defender
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:modify
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					packageName:
						name_var:
							exact:
								WILD:mods
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
										type_var:
											class:
												class_variable_names:Affinity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
					DOT:.
					className:
						variable_names:Affinity
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:name
						typeName:
							type_var:
								class:
									class_variable_names:String
					DOT:.
					class_declaration:
						packageName:
							name_var:
								exact:
									WILD:affinities
						objectType:
							CLASS:class 
						DOT:.
						className:
							variable_names:Id
						NEWLINE:$\n
						packageName:
							name_var:
								exact:
									WILD:entities
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						packageName:
							name_var:
								exact:
									WILD:mods
						DOT:.
						DOT:.
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:affinities
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					objectType:
						CLASS:class 
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							inline:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Quest
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:currentActivityIndex
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						WEAK:~
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						NEWLINE:$\n
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Id
									ACCESS:->
									type_var:
										class:
											class_variable_names:Usable
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						FORSLASH:/
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:status
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:UNSTARTED
						WEAK:~
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getTargetCriteria
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Quest
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:TargetCriteria
													parameters:
													NEW:new 
									RETURN:return 
									SEMICOLON:;
							inline:
							typeName:
								type_var:
									exact:
										variable_names:EntityCriteria
										BACKSLASH:\
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					className:
						variable_names:Quest
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						static:
							STA:@
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:IN_PROGRESS
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
					class_declaration:
						FORSLASH:/
						class_declaration:
							NEWLINE:$\n
							FORSLASH:/
							SEMICOLON:;
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Success
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Listener
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Quest
								variableName:
									name_var:
										variable:
											variable_names:host
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								EQUALS:=
							className:
								variable_names:Success
							NEWLINE:$\n
							objectType:
								CLASS:class 
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:void
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:advanceTo
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:nextIndex
													DOT:.
													group:
														name_var:
															variable:
																variable_names:host
											SEMICOLON:;
									inline:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Events
														ACCESS:->
														type_var:
															exact:
																BACKSLASH:\
																variable_names:Success
											variableName:
												name_var:
													variable:
														variable_names:event
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							FORSLASH:/
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:-1
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:nextIndex
							NEWLINE:$\n
						class_declaration:
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Quest
							objectType:
								CLASS:class 
							SEMICOLON:;
							NEWLINE:$\n
							FORSLASH:/
							FORSLASH:/
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Fail
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									inline:
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:event
											typeName:
												type_var:
													access_multi:
														type_var:
															exact:
																variable_names:Fail
																BACKSLASH:\
														ACCESS:->
														type_var:
															class:
																class_variable_names:Events
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:host
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:(Events.Fail)event
														name_var:
															variable:
																variable_names:on
													DOT:.
											SEMICOLON:;
									methodName:
										name_var:
											variable:
												variable_names:listen
							className:
								variable_names:Fail
							NEWLINE:$\n
						FORSLASH:/
						NEWLINE:$\n
						NEWLINE:$\n
						objectType:
							CLASS:class 
						className:
							variable_names:Listeners
						NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:currentActivity
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
												RETURN:return 
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:currentActivity
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:Tick
																							type_var:
																								class:
																									class_variable_names:Events
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
															name_var:
																variable:
																	variable_names:on
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												RETURN:return 
										body_element:
											NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Activity
									variableName:
										name_var:
											variable:
												variable_names:activity
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:user
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							type_var:
																								exact:
																									variable_names:StartQuest
																									BACKSLASH:\
																							ACCESS:->
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
										body_element:
											NEWLINE:$\n
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:UNSTARTED
										body_call:
											group:
												name_var:
													variable:
														variable_names:status
							body_element:
								NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:FAIL
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:2
						static:
							STA:@
					parentName:
						type_var:
							class:
								class_variable_names:Object
					SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:quests
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:advanceTo
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									variableName:
										name_var:
											variable:
												variable_names:newIndex
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:currentActivity
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:get
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:newIndex
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:activities
													EQUALS:=
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													name_var:
														variable:
															variable_names:currentActivityIndex
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newIndex
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
									body_statement:
										OPERATOR:< 
										body_call:
											group:
												name_var:
													variable:
														variable_names:newIndex
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:size
											group:
												name_var:
													variable:
														variable_names:activities
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:status
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:SUCCESS
												SEMICOLON:;
					SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Activity
									variableName:
										name_var:
											variable:
												variable_names:newActivity
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newActivity
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Listeners
																				ACCESS:->
																				type_var:
																					exact:
																						variable_names:Success
																						BACKSLASH:\
																				type_var:
																					class:
																						class_variable_names:Quest
																	NEW:new 
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:activities
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:size
																						parameters:
																		COMMA:,
											DOT:.
											group:
												name_var:
													variable:
														variable_names:newActivity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Listeners
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Quest
																				type_var:
																					exact:
																						variable_names:Fail
																						BACKSLASH:\
																				ACCESS:->
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:newActivity
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:add
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					objectType:
						CLASS:class 
					NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:List
									type_var:
										class:
											class_variable_names:Activity
						variableName:
							name_var:
								variable:
									variable_names:activities
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
										NEW:new 
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:List
													ACCESS:->
													type_var:
														class:
															class_variable_names:Activity
						WEAK:~
						EQUALS:=
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:UNSTARTED
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						static:
							STA:@
						EQUALS:=
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:canChase
							inline:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					class_declaration:
						method_declaration:
							methodDefinition:
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								body_element:
									NEWLINE:$\n
								inline:
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:user
										typeName:
											type_var:
												class:
													class_variable_names:Entity
								methodName:
									name_var:
										variable:
											variable_names:satisfies
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
										SEMICOLON:;
						FORSLASH:/
						NEWLINE:$\n
						FORSLASH:/
						WEAK:~
						parentName:
							type_var:
								exact:
									BACKSLASH:\
									variable_names:EntityCriteria
						className:
							variable_names:TargetCriteria
						objectType:
							CLASS:class 
						NEWLINE:$\n
					SEMICOLON:;
					DOT:.
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:SUCCESS
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1
						static:
							STA:@
						EQUALS:=
					DOT:.
					NEWLINE:$\n
					DOT:.
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:currentActivity
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								class:
									class_variable_names:Activity
						EQUALS:=
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getRange
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:user
					NEWLINE:$\n
				class_declaration:
					DOT:.
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:quests
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:tileClauses
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Integer
										EQUALS:=
										WEAK:~
										variableName:
											name_var:
												variable:
													variable_names:tileCount
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:description
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:description
																					name_var:
																						variable:
																							variable_names:declarationToken
									SEMICOLON:;
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:element
																								ACCESS:->
																								name_var:
																									exact:
																										WILD:event_names
													variableName:
														name_var:
															variable:
																variable_names:eventName
													WEAK:~
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:questName
																								name_var:
																									variable:
																										variable_names:Quests
																								ACCESS:->
																		COMMA:,
																		COMMA:,
																		method_argument:
																			body_entries:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:eventName
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																group:
																	name_var:
																		variable:
																			variable_names:Events
																DOT:.
													typeName:
														CONTEXT_TYPE:Context 
													EQUALS:=
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	variable:
																		variable_names:eventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:startQuest
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
												body_statement:
													OPERATOR:== 
													body_call:
														group:
															name_var:
																exact:
																	WILD:load
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													body_call:
														group:
															name_var:
																exact:
																	WILD:start
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													OPERATOR:== 
													OPERATOR:|| 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													COLON::
													tokenName:
														NAME:body_element
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventContext
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:eventBody
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventBody
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:super
																						group:
																							name_var:
																								variable:
																									variable_names:on
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:event
																				SEMICOLON:;
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:eventBody
													typeName:
														BODY_TYPE:Body 
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	typeName:
																		BODY_TYPE:Body 
																	NEW:new 
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Quests
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:questName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventBody
															name_var:
																variable:
																	variable_names:addToEventMethod
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:event
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Quests
									class_declaration:
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														variable:
															variable_names:generateDestinations
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:quester
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
										NEWLINE:$\n
										FORSLASH:/
										parentName:
											type_var:
												class:
													class_variable_names:Quest
										className:
											variable_names:questName
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:fulfill
												inline:
													COMMA:,
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:destinationReached
														typeName:
															type_var:
																class:
																	class_variable_names:Area
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:quester
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
										FORSLASH:/
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:> 
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:tileClauses
											group:
												parameters:
												name_var:
													variable:
														variable_names:size
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Quests
													OPERATOR:->*
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:tileClauses
																				as_body:
																					body_element:
																						body_return:
																							SEMICOLON:;
																							RETURN:return 
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
														group:
															name_var:
																exact:
																	WILD:fulfill
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_return:
																	RETURN:return 
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:true
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
											group:
												name_var:
													exact:
														WILD:fulfill
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														name_var:
															variable:
																variable_names:Quests
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:typeDeclaration
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:questName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:questName
																					name_var:
																						variable:
																							variable_names:declarationToken
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:tileClauses
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:&&
												name_var:
													variable:
														variable_names:set
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_manipulate:
												COLON::
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													tokenName:
														NAME:quest_tile_description
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:tileClause
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:tileNameClause
																		name_var:
																			variable:
																				variable_names:add
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:generateDestinations
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_line:
																							SEMICOLON:;
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																																	name_var:
																																		exact:
																																			WILD:toVisited
																																	PLUS:+
																									DOT:.
																									group:
																										name_var:
																											variable:
																												variable_names:add
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:getEnvironment
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:Environments
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:mapName
																																						ACCESS:->
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																														group:
																															name_var:
																																exact:
																																	WILD:quester
																														DOT:.
																														DOT:.
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:getLocation
																															parameters:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												concat:
																																													PLUS:+
																																													name_var:
																																														variable:
																																															variable_names:tileName
																																													name_var:
																																														variable:
																																															variable_names:mapName
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:Tiles
																																			DOT:.
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					exact:
																																						WILD:quester
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:getLocation
																																				parameters:
																																COMMA:,
																															name_var:
																																variable:
																																	variable_names:getNodeFromId
																					body_element:
																						NEWLINE:$\n
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
																OPERATOR:->*
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:negateOperator
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																name_var:
																																	variable:
																																		variable_names:atom
																																name_var:
																																	exact:
																																		WILD:ORDINAL
																																ACCESS:->
																variableName:
																	name_var:
																		variable:
																			variable_names:negatedOperator
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																EQUALS:=
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:negatedOperator
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														concat:
																															name_var:
																																variable:
																																	variable_names:tileCount
																															PLUS:+
																															name_var:
																																exact:
																																	WILD:visited
																							group:
																								parameters:
																								name_var:
																									variable:
																										variable_names:size
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					STATEMENT_TYPE:Statement
																				parameters:
																				NEW:new 
																variableName:
																	name_var:
																		variable:
																			variable_names:tileNameClause
																typeName:
																	STATEMENT_TYPE:Statement
																EQUALS:=
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												variable:
																													variable_names:atom
																											name_var:
																												exact:
																													WILD:tileName
																											ACCESS:->
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																				name_var:
																					variable:
																						variable_names:replace
																			DOT:.
																variableName:
																	name_var:
																		variable:
																			variable_names:tileName
																EQUALS:=
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:mapName
																											name_var:
																												variable:
																													variable_names:atom
																											ACCESS:->
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:replace
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																variableName:
																	name_var:
																		variable:
																			variable_names:mapName
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														access:
																															name_var:
																																exact:
																																	WILD:INTEGER
																															ACCESS:->
																															name_var:
																																variable:
																																	variable_names:atom
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:fulfill
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	WILD:destinationReached
																										name_var:
																											variable:
																												variable_names:contains
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	PLUS:+
																																	name_var:
																																		exact:
																																			WILD:toVisit
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																									DOT:.
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_line:
																										SEMICOLON:;
																										body_statement:
																											body_call:
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				WILD:destinationReached
																													name_var:
																														variable:
																															variable_names:add
																												group:
																													name_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			concat:
																																				name_var:
																																					variable:
																																						variable_names:tileCount
																																				PLUS:+
																																				name_var:
																																					exact:
																																						WILD:visited
																												DOT:.
															SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:tileClause
													typeName:
														STATEMENT_TYPE:Statement
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	NEW:new 
																	typeName:
																		STATEMENT_TYPE:Statement
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileCount
													BACKSLASH:\
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variable_declaration:
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					name_var:
																						exact:
																							WILD:visited
																					name_var:
																						variable:
																							variable_names:tileCount
																					PLUS:+
													WEAK:~
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:HashSet
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Area
																	NEW:new 
																	parameters:
																NEWLINE:$\n
															NEWLINE:$\n
													typeName:
														type_var:
															class:
																class_variable_names:Set
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Area
													EQUALS:=
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Quests
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Quests
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
												methodName:
													ADD:+=
												variable_declaration:
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					name_var:
																						exact:
																							WILD:toVisit
																					PLUS:+
																					name_var:
																						variable:
																							variable_names:tileCount
													typeName:
														type_var:
															class:
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Area
																class_variable_names:Set
													WEAK:~
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	parameters:
																	typeName:
																		type_var:
																			class:
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Area
																				class_variable_names:HashSet
																NEWLINE:$\n
															NEWLINE:$\n
													EQUALS:=
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileClause
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:brace
															parameters:
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:||
															name_var:
																variable:
																	variable_names:set
														group:
															name_var:
																variable:
																	variable_names:tileClause
												SEMICOLON:;
										tokenName:
											NAME:quest_destination
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:tileClauses
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:tileClause
												SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
					packageName:
						name_var:
							exact:
								WILD:entities
					className:
						variable_names:Quests
					DOT:.
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:data
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	variable_assignment:
																		name_var:
																			variable:
																				variable_names:status
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:FAIL
																		EQUALS:=
																	SEMICOLON:;
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													COMMA:,
													COMMA:,
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:startQuest
													method_argument:
														body_entries:
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:FAIL
																					EQUALS:=
																					name_var:
																						variable:
																							variable_names:status
																				SEMICOLON:;
																	conditional:
																		ELSE:else
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:isEmpty
																				parameters:
																			group:
																				name_var:
																					exact:
																						WILD:activities
																			DOT:.
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:false
																		OPERATOR:==
																	as_body:
																		body_element:
																			body_line:
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:currentActivity
																					method_argument:
																						body_statement:
																							body_call:
																								DOT:.
																								group:
																									name_var:
																										variable:
																											variable_names:activities
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															exact:
																																NAME:
																																	NUMBER:0
																									name_var:
																										variable:
																											variable_names:get
																					EQUALS:=
																				SEMICOLON:;
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:currentActivityIndex
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:0
																					EQUALS:=
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:status
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:IN_PROGRESS
																					EQUALS:=
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	conditional:
																		IF:if
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													COMMA:,
													COMMA:,
					DOT:.
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					method_declaration:
						methodDefinition:
							static:
								STA:@
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											exact:
												WILD:traitName
							typeName:
								type_var:
									class:
										class_variable_names:Trait
							body_element:
								NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:requirement
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:getMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasRequirements
														DOT:.
														group:
															name_var:
																access:
																	name_var:
																		variable:
																			variable_names:Traits
																	ACCESS:->
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:traitName
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_conditional:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:candidate
																													COMMA:,
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:false
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:element
																													COMMA:,
																												name_var:
																													exact:
																														variable_names:getRequirement
																														BACKSLASH:\
																				conditional:
																					IF:if
																				as_body:
																					body_element:
																						body_return:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																							RETURN:return 
																							SEMICOLON:;
												SEMICOLON:;
									COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:gain
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:gainBody
													COMMA:,
												name_var:
													variable:
														variable_names:put
											group:
												name_var:
													variable:
														variable_names:eventBodies
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Traits
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:traitName
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Traits
																				RETURN:return 
																				SEMICOLON:;
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:traitName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:traitName
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
												name_var:
													variable:
														variable_names:getMethod
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:eventHost
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											as_statement:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getHost
															parameters:
														group:
															name_var:
																exact:
																	WILD:event
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:candidate
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:candidate
										typeName:
											STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:requirementsBody
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
														parameters:
										typeName:
											BODY_TYPE:Body 
										EQUALS:=
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addEventMethodsExclusive
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:traitName
																			name_var:
																				variable:
																					variable_names:Traits
																			ACCESS:->
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:eventBodies
													COMMA:,
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:lossBody
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																				name_var:
																					variable:
																						variable_names:getImposition
																			DOT:.
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:impose
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:gainBody
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:getImposition
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					COMMA:,
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:true
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									class_declaration:
										variable_declaration:
											static:
												STA:@
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Trait
															NEW:new 
											EQUALS:=
											variableName:
												name_var:
													exact:
														WILD:id
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Trait
														type_var:
															class:
																class_variable_names:Id
														ACCESS:->
										className:
											variable_names:traitName
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:traits
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:mods
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:traitName
														SEMICOLON:;
												inline:
												typeName:
													type_var:
														class:
															class_variable_names:String
										DOT:.
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
														SEMICOLON:;
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:candidate
												methodName:
													name_var:
														variable:
															variable_names:hasRequirements
										NEWLINE:$\n
										NEWLINE:$\n
										objectType:
											CLASS:class 
										packageName:
											name_var:
												exact:
													WILD:entities
										NEWLINE:$\n
										SEMICOLON:;
										parentName:
											type_var:
												class:
													class_variable_names:Trait
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Traits
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:eventBodies
										EQUALS:=
										typeName:
											type_var:
												class:
													template_parameters:
														COMMA:,
														template_parameter:
															BODY_TYPE:Body 
														template_parameter:
															type_var:
																class:
																	class_variable_names:String
													class_variable_names:Map
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															type_var:
																class:
																	class_variable_names:HashMap
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:String
																		COMMA:,
																		template_parameter:
																			BODY_TYPE:Body 
														NEW:new 
														parameters:
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:lossBody
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															BODY_TYPE:Body 
										variableName:
											name_var:
												variable:
													variable_names:gainBody
										EQUALS:=
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:traitName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:traitName
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
																ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:eventBodies
											group:
												name_var:
													variable:
														variable_names:put
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:loss
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:lossBody
													COMMA:,
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					className:
						variable_names:Traits
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Traits
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																ACCESS:->
													group:
														name_var:
															variable:
																variable_names:id
													DOT:.
									RETURN:return 
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:getId
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
					packageName:
						name_var:
							exact:
								WILD:mods
					packageName:
						name_var:
							exact:
								WILD:traits
				class_declaration:
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					class_declaration:
						DOT:.
						DOT:.
						NEWLINE:$\n
						packageName:
							name_var:
								exact:
									WILD:entities
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:traits
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:mods
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					DOT:.
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:candidate
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:hasRequirements
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					objectType:
						CLASS:class 
					className:
						variable_names:Trait
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:traits
					SEMICOLON:;
					SEMICOLON:;
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:name
						typeName:
							type_var:
								class:
									class_variable_names:String
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Trait
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
							inline:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		SEMICOLON:;
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:mainStringArgs
			EQUALS:=
			typeName:
				type_var:
					class:
						class_variable_names:String
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:String[]
		class_declaration:
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										type_var:
											class:
												class_variable_names:Press
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:KeyboardEvent
							variableName:
								name_var:
									variable:
										variable_names:event
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:event
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getKeyInt
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:true
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			interfaceName:
				type_var:
					access_multi:
						type_var:
							class:
								class_variable_names:Listener
						ACCESS:->
						type_var:
							class:
								class_variable_names:InputHandler
						type_var:
							class:
								class_variable_names:Events
						type_var:
							class:
								class_variable_names:MouseEvent
						ACCESS:->
						ACCESS:->
			packageName:
				name_var:
					exact:
						WILD:game
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:listen
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:MouseEvent
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Move
										ACCESS:->
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								array_parameters:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:128
								typeName:
									type_var:
										class:
											class_variable_names:boolean
				ARRAY_TYPE:[]
				variableName:
					name_var:
						variable:
							variable_names:pressedKeys
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:boolean
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			parentName:
				type_var:
					exact:
						BACKSLASH:\
						variable_names:Object
			NEWLINE:$\n
			interfaceName:
				type_var:
					access_multi:
						type_var:
							class:
								class_variable_names:InputHandler
						type_var:
							class:
								class_variable_names:Listener
						type_var:
							class:
								class_variable_names:KeyboardEvent
						ACCESS:->
						ACCESS:->
						type_var:
							class:
								class_variable_names:Events
						ACCESS:->
			NEWLINE:$\n
			DOT:.
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:environments
				method_argument:
					body_statement:
						body_call:
							group:
								parameters:
								NEW:new 
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Environment
											class_variable_names:ArrayList
				WEAK:~
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:Environment
							class_variable_names:List
				EQUALS:=
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Drag
							variableName:
								name_var:
									variable:
										variable_names:event
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								name_var:
									variable:
										variable_names:lastTick
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:thisTick
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.01f
														COMMA:,
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:renderer
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:30
					inline:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:31
										name_var:
											variable:
												variable_names:pressedKeys
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Gui
												group:
													name_var:
														variable:
															variable_names:renderer
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.01f
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
													name_var:
														variable:
															variable_names:moveView
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								body_call:
									group:
										name_var:
											variable:
												variable_names:focusArea
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										variable_assignment:
											name_var:
												variable:
													variable_names:focusArea
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:getAreas
															parameters:
														group:
															name_var:
																variable:
																	variable_names:environments
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:-0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
														COMMA:,
												group:
													name_var:
														variable:
															variable_names:renderer
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
												DOT:.
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:32
										name_var:
											variable:
												variable_names:pressedKeys
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:currentTimeMillis
												parameters:
											group:
												name_var:
													exact:
														variable_names:System
														BACKSLASH:\
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1000.0
										OPERATOR:/
								EQUALS:=
								name_var:
									variable:
										variable_names:thisTick
							SEMICOLON:;
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:17
										name_var:
											variable:
												variable_names:pressedKeys
							conditional:
								IF:if
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:-0.01f
														COMMA:,
													name_var:
														variable:
															variable_names:moveView
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Gui
												group:
													name_var:
														variable:
															variable_names:renderer
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:update
					body_element:
						body_conditional:
							OPERATOR::
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Environment
								variableName:
									name_var:
										variable:
											variable_names:environment
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:environment
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:thisTick
																OPERATOR:-
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:lastTick
													name_var:
														variable:
															variable_names:tick
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								FOR:for
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:focusArea
									group:
										parameters:
										name_var:
											variable:
												variable_names:display
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				WEAK:~
				variableName:
					name_var:
						variable:
							variable_names:focusArea
				typeName:
					type_var:
						class:
							class_variable_names:Area
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
										type_var:
											class:
												class_variable_names:Press
							variableName:
								name_var:
									variable:
										variable_names:event
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
			className:
				variable_names:Game
			NEWLINE:$\n
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:lastTick
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:1000.0
						OPERATOR:/
						body_call:
							DOT:.
							group:
								parameters:
								name_var:
									variable:
										variable_names:currentTimeMillis
							group:
								name_var:
									exact:
										variable_names:System
										BACKSLASH:\
				typeName:
					type_var:
						class:
							class_variable_names:Double
				WEAK:~
				EQUALS:=
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										type_var:
											class:
												class_variable_names:KeyboardEvent
										ACCESS:->
										type_var:
											class:
												class_variable_names:Release
					body_element:
						body_line:
							body_statement:
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getKeyInt
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:event
										name_var:
											variable:
												variable_names:pressedKeys
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
			SEMICOLON:;
			NEWLINE:$\n
			variable_declaration:
				WEAK:~
				typeName:
					type_var:
						class:
							class_variable_names:Double
				variableName:
					name_var:
						variable:
							variable_names:thisTick
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:lastTick
				EQUALS:=
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
				variableName:
					name_var:
						variable:
							variable_names:mosiac
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:Tile
				WEAK:~
			NEWLINE:$\n
			objectType:
				CLASS:class 
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					inline:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:InputHandler
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
										name_var:
											variable:
												variable_names:addMouseListener
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Environments
																		type_var:
																			exact:
																				variable_names:Forest
																				BACKSLASH:\
															parameters:
										name_var:
											variable:
												variable_names:add
					methodName:
						name_var:
							variable:
								variable_names:load
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
									group:
										name_var:
											variable:
												variable_names:add
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Environments
																		type_var:
																			exact:
																				variable_names:Town
																				BACKSLASH:\
																		ACCESS:->
															parameters:
									DOT:.
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							OPERATOR::
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:load
													parameters:
												group:
													name_var:
														variable:
															variable_names:environment
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								FOR:for
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Environment
								variableName:
									name_var:
										variable:
											variable_names:environment
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:InputHandler
									DOT:.
									group:
										name_var:
											variable:
												variable_names:addKeyboardListener
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										NEW:new 
										typeName:
											type_var:
												class:
													class_variable_names:Gui
										parameters:
							SEMICOLON:;
					static:
						STA:@
					methodName:
						name_var:
							variable:
								variable_names:main
					inline:
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:mainStringArgs
							variableName:
								name_var:
									variable:
										variable_names:args
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
										type_var:
											class:
												class_variable_names:Release
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
							variableName:
								name_var:
									variable:
										variable_names:event
		NEWLINE:$\n
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
		class_declaration:
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:event
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:TypeName
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:interfaces
			packageName:
				name_var:
					exact:
						WILD:misc
			objectType:
				INTERFACE:interface 
			DOT:.
			templateTypeName:
				NAME:TypeName
			DOT:.
			className:
				variable_names:Listenable
			NEWLINE:$\n
			HID:<
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			IN:>
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:type
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:context
										group:
											name_var:
												variable:
													variable_names:getClassContext
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
							typeName:
								CONTEXT_TYPE:Context 
				body_element:
					body_conditional:
						conditional:
							IF:if
						body_statement:
							OPERATOR:!= 
							body_call:
								group:
									name_var:
										access:
											name_var:
												exact:
													WILD:statement
											ACCESS:->
											name_var:
												variable:
													variable_names:variableDeclarationToken
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
						as_body:
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													variable_declaration:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:variableDeclarationToken
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:statement
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
																								COMMA:,
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getStatement
														EQUALS:=
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variable_header
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
													SEMICOLON:;
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getVariableDeclaration
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:typeName
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:getTypeName
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:type_name
																		name_var:
																			exact:
																				WILD:variable_header
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableDeclarationToken
																		ACCESS:->
							typeName:
								type_var:
									class:
										class_variable_names:String
						SEMICOLON:;
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
						conditional:
							IF:if
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									SEMICOLON:;
									body_statement:
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableDeclarationToken
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Generator
											DOT:.
										body_call:
											group:
												name_var:
													concat:
														name_var:
															variable:
																variable_names:typeName
														name_var:
															exact:
																WILD:!
														PLUS:+
														name_var:
															exact:
																WILD:Could not find type:
														PLUS:+
									THROW:throw 
							body_element:
								NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								WILD:variable_header
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						ACCESS:->
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						conditional:
							ELSE:else
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:variableDeclarationToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
		NEWLINE:$\n
		class_declaration:
			className:
				variable_names:Source
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			objectType:
				INTERFACE:interface 
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			IN:>
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:candidate
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:TypeName
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:false
							RETURN:return 
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:satisfies
			NEWLINE:$\n
			className:
				variable_names:Criteria
			HID:<
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			templateTypeName:
				NAME:TypeName
		method_declaration:
			methodDefinition:
				body_element:
					body_return:
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getBodyElement
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:elementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					COMMA:,
				body_element:
					body_manipulate:
						variableName:
							NAME:element
						tokenInstance:
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:doom
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										EQUALS:=
										method_argument:
											body_statement:
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	exact:
																		WILD:imposition
																name_var:
																	variable:
																		variable_names:element
																ACCESS:->
																name_var:
																	exact:
																		WILD:PLUS
												OPERATOR:|| 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:element
																name_var:
																	exact:
																		WILD:imposition
																name_var:
																	exact:
																		WILD:IMPOSE
																ACCESS:->
																ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							tokenName:
								NAME:imposition
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:getImposition
													parameters:
														COMMA:,
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:element
																				name_var:
																					exact:
																						WILD:imposition
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:doom
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
												group:
													name_var:
														variable:
															variable_names:Entity
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:subject
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:element
																					name_var:
																						exact:
																							WILD:variable_call
															COMMA:,
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:for_statement
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:getForStatement
															BACKSLASH:\
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
									SEMICOLON:;
							NEWLINE:$\n
							COLON::
						tokenInstance:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:getIfStatement
															BACKSLASH:\
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
									SEMICOLON:;
							NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:if_statement
							body_element:
								NEWLINE:$\n
						COLON::
						tokenInstance:
							COLON::
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_return:
													RETURN:return 
													SEMICOLON:;
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:getStatement
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:context
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:return_statement
						tokenInstance:
							NEWLINE:$\n
							tokenName:
								NAME:variable_declaration
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:getVariableDeclaration
															BACKSLASH:\
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
									SEMICOLON:;
									RETURN:return 
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						tokenInstance:
							tokenName:
								NAME:statement
							NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							variable_names:getStatement
																							BACKSLASH:\
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:context
																						COMMA:,
													SEMICOLON:;
									SEMICOLON:;
									RETURN:return 
						tokenInstance:
							COLON::
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:subject
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:variable_call
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:element
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															COMMA:,
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
									SEMICOLON:;
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:getAcquisition
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:element
																				name_var:
																					exact:
																						WILD:acquisition
														COMMA:,
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:acquisition
							body_element:
								NEWLINE:$\n
						name_var:
							variable:
								variable_names:elementToken
				inner:
					IN:>
		NEWLINE:$\n
		SEMICOLON:;
		method_declaration:
			methodDefinition:
				inner:
					IN:>
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						COLON::
						tokenInstance:
							NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:NOT
														ACCESS:->
														name_var:
															variable:
																variable_names:element
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:hasCall
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							tokenName:
								NAME:has_statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:operator
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:hasCall
												name_var:
													variable:
														variable_names:add
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																variable_names:getRequirement
																BACKSLASH:\
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:negate
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:variableCall
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:requirement
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
															COMMA:,
										variableName:
											name_var:
												variable:
													variable_names:hasCall
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:variableCall
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
															COMMA:,
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						tokenInstance:
							tokenName:
								NAME:statement
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							COLON::
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getStatement
																			BACKSLASH:\
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:negate
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		COMMA:,
											DOT:.
											group:
												name_var:
													variable:
														variable_names:operator
						tokenInstance:
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:has_chance
							COLON::
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																	name_var:
																		exact:
																			variable_names:getChance
																			BACKSLASH:\
												name_var:
													variable:
														variable_names:add
											DOT:.
											group:
												name_var:
													variable:
														variable_names:operator
									SEMICOLON:;
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:element
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:&
									as_body:
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:||
																		name_var:
																			variable:
																				variable_names:set
																	group:
																		name_var:
																			variable:
																				variable_names:operator
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													ELSE:else
												as_body:
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:&&
																		name_var:
																			variable:
																				variable_names:set
																	group:
																		name_var:
																			variable:
																				variable_names:operator
																	DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:element
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:|
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:&&
																		name_var:
																			variable:
																				variable_names:set
																	group:
																		name_var:
																			variable:
																				variable_names:operator
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:||
																	group:
																		name_var:
																			variable:
																				variable_names:operator
																	DOT:.
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
										IF:if
							tokenName:
								NAME:operator
							NEWLINE:$\n
						name_var:
							variable:
								variable_names:booleanStatement
						variableName:
							NAME:element
						tokenInstance:
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:operator
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:element
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:environmentName
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:equals
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:getParent
																							parameters:
																						DOT:.
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:getName
																							parameters:
																						group:
																							name_var:
																								exact:
																									WILD:spawn
									SEMICOLON:;
							COLON::
							tokenName:
								NAME:spawn_statement
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:booleanStatement
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					COMMA:,
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:negate
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							typeName:
								STATEMENT_TYPE:Statement
							variableName:
								name_var:
									variable:
										variable_names:operator
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
											NEW:new 
							EQUALS:=
						SEMICOLON:;
				methodName:
					name_var:
						variable:
							variable_names:getBooleanStatement
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:operator
						SEMICOLON:;
						RETURN:return 
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:HashSet
							NEW:new 
							parameters:
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:declaredCritSet
			inner:
				IN:>
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
		NEWLINE:$\n
		class_declaration:
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							access_multi:
								ACCESS:->
								type_var:
									class:
										class_variable_names:Id
								type_var:
									class:
										class_variable_names:Usable
					methodName:
						name_var:
							variable:
								variable_names:getId
					inline:
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			objectType:
				INTERFACE:interface 
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:EntityCriteria
					inline:
					methodName:
						name_var:
							variable:
								variable_names:getTargetCriteria
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
					methodName:
						name_var:
							variable:
								variable_names:canChase
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:use
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:activity
							typeName:
								type_var:
									class:
										class_variable_names:Activity
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:user
							typeName:
								type_var:
									class:
										class_variable_names:Entity
						COMMA:,
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Float
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									variable:
										variable_names:user
					methodName:
						name_var:
							variable:
								variable_names:getRange
			className:
				variable_names:Usable
			class_declaration:
				className:
					variable_names:Id
				FORSLASH:/
				FORSLASH:/
				NEWLINE:$\n
				objectType:
					CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
		class_declaration:
			DOT:.
			className:
				variable_names:ListMaps
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					body_line:
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												BODY_TYPE:Body 
											parameters:
											NEW:new 
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:body
						SEMICOLON:;
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								STATEMENT_TYPE:Statement
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											NEW:new 
											typeName:
												STATEMENT_TYPE:Statement
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:elseHeader
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getIfStatement
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:header
							typeName:
								STATEMENT_TYPE:Statement
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
							EQUALS:=
						SEMICOLON:;
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													conditional:
														IF:if
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
											body_element:
												body_conditional:
													conditional:
														ELSE:else
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
									SEMICOLON:;
						conditional:
							IF:if
							ELSE:else
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:1 
				body_element:
					body_conditional:
						conditional:
							IF:if
							ELSE:else
						as_body:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													conditional:
														IF:if
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
													conditional:
														ELSE:else
														IF:if
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:elseHeader
									SEMICOLON:;
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:2 
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												BODY_TYPE:Body 
											parameters:
											NEW:new 
							typeName:
								BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:elseBody
				body_element:
					NEWLINE:$\n
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:ifStatementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
				body_element:
					NEWLINE:$\n
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0 
						as_body:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													conditional:
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
						conditional:
							IF:if
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						conditional:
							ELSE:else
						as_body:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							EQUALS:=
							WEAK:~
							variableName:
								name_var:
									variable:
										variable_names:mode
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													NAME:
														NUMBER:0
				body_element:
					body_manipulate:
						tokenInstance:
							tokenName:
								NAME:else_statement
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											variable:
												variable_names:mode
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
							NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:element
									tokenInstance:
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:2
													name_var:
														variable:
															variable_names:mode
													EQUALS:=
												SEMICOLON:;
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:boolean_statement
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:elseHeader
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:context
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBooleanStatement
														DOT:.
									COLON::
									tokenInstance:
										NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBodyElement
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:context
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
														group:
															name_var:
																variable:
																	variable_names:elseBody
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:body_element
									variableName:
										NAME:atom
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
						variableName:
							NAME:element
						tokenInstance:
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getBooleanStatement
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
											group:
												name_var:
													variable:
														variable_names:header
											DOT:.
									SEMICOLON:;
							tokenName:
								NAME:boolean_statement
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							COLON::
						tokenInstance:
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:body_element
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getBodyElement
																			BACKSLASH:\
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:body
											DOT:.
						name_var:
							variable:
								variable_names:ifStatementToken
						COLON::
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							WEAK:~
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							variableName:
								name_var:
									variable:
										variable_names:negate
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:initialNegate
							EQUALS:=
						SEMICOLON:;
				body_element:
					body_manipulate:
						COLON::
						variableName:
							NAME:element
						tokenInstance:
							NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:variableCall
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:ret
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableCall
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:variable_call
						tokenInstance:
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:ret
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:subStatement
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:subStatement
											DOT:.
											group:
												name_var:
													variable:
														variable_names:brace
												parameters:
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:subStatement
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getStatement
									SEMICOLON:;
							tokenName:
								NAME:braced
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:ret
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
															name_var:
																variable:
																	variable_names:set
														DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							COLON::
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:negateOperator
															name_var:
																variable:
																	variable_names:set
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:ret
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:operator
							NEWLINE:$\n
						name_var:
							variable:
								variable_names:statementToken
						tokenInstance:
							NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:ret
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:subStatement
							tokenName:
								NAME:statement
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getStatement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
															COMMA:,
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:subStatement
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:=! 
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
							COLON::
							NEWLINE:$\n
							tokenName:
								NAME:NOT
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					body_conditional:
						conditional:
							IF:if
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:ret
											DOT:.
											group:
												name_var:
													variable:
														variable_names:negate
												parameters:
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:1 
							body_call:
								group:
									name_var:
										variable:
											variable_names:negate
							body_call:
								group:
									name_var:
										variable:
											variable_names:ret
								group:
									parameters:
									name_var:
										variable:
											variable_names:getSize
								DOT:.
							OPERATOR:&& 
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:ret
							typeName:
								STATEMENT_TYPE:Statement
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												STATEMENT_TYPE:Statement
											NEW:new 
											parameters:
						SEMICOLON:;
				inline:
					COMMA:,
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:initialNegate
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:statementToken
				methodName:
					name_var:
						variable:
							variable_names:getStatement
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:ret
						SEMICOLON:;
						RETURN:return 
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:<T>T
			inner:
				IN:>
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:TT
			typeName:
				type_var:
					class:
						class_variable_names:String
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				typeName:
					VARIABLE_TYPE:Variable 
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:variableHeaderToken
					variable_declaration:
						typeName:
							CLASS_TYPE:Class 
						variableName:
							name_var:
								variable:
									variable_names:inputClass
					COMMA:,
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
						as_body:
							body_element:
								body_throw:
									THROW:throw 
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													concat:
														name_var:
															variable:
																variable_names:typeName
														PLUS:+
														PLUS:+
														name_var:
															exact:
																WILD:!
														name_var:
															exact:
																WILD:Could not find type:
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableHeaderToken
											DOT:.
											group:
												name_var:
													exact:
														variable_names:Generator
														BACKSLASH:\
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
				methodName:
					name_var:
						variable:
							variable_names:addVariableHeader
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:typeName
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:String
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:type_name
																		name_var:
																			variable:
																				variable_names:variableHeaderToken
																		ACCESS:->
											name_var:
												exact:
													variable_names:getTypeName
													BACKSLASH:\
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:inputClass
									group:
										name_var:
											variable:
												variable_names:getVariable
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							variable:
																								variable_names:variableHeaderToken
						RETURN:return 
				body_element:
					body_manipulate:
						type_var:
							class:
								class_variable_names:inputClass
						methodName:
							ADD:+=
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:typeName
							variableName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														access:
															name_var:
																exact:
																	WILD:variableName
															name_var:
																variable:
																	variable_names:variableHeaderToken
															ACCESS:->
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:type
							typeName:
								CONTEXT_TYPE:Context 
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											name_var:
												variable:
													variable_names:getContext
										group:
											name_var:
												variable:
													variable_names:inputClass
										DOT:.
										DOT:.
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
											name_var:
												variable:
													variable_names:getClassContext
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
		method_declaration:
			methodDefinition:
				inner:
					IN:>
				inline:
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:booleanStatement
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					COMMA:,
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:context
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:booleanStatement
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
										name_var:
											exact:
												variable_names:getBooleanStatement
												BACKSLASH:\
						SEMICOLON:;
						RETURN:return 
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getBooleanStatement
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		class_declaration:
			method_declaration:
				methodDefinition:
					inline:
					static:
						STA:@
					methodName:
						name_var:
							variable:
								variable_names:getRandomFloat
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:(float)Math.random()
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Float
			variable_declaration:
				EQUALS:=
				inner:
					IN:>
				variableName:
					name_var:
						variable:
							variable_names:floatCast
				typeName:
					type_var:
						class:
							class_variable_names:String
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:(float)(int)
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
																			name_var:
																				exact:
																					WILD:initialLeft
								EQUALS:=
								name_var:
									exact:
										WILD:left
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:initialLeft
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							variableName:
								name_var:
									exact:
										WILD:initialRight
					body_element:
						body_line:
							variable_assignment:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialRight
								name_var:
									exact:
										WILD:right
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:Range
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											parameters:
											name_var:
												variable:
													variable_names:random
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:Math
									body_call:
										group:
											name_var:
												exact:
													WILD:difference
									OPERATOR:+ 
									body_call:
										group:
											name_var:
												exact:
													WILD:left
									OPERATOR:* 
							SEMICOLON:;
					body_element:
						body_line:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Float
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:right
										OPERATOR:- 
										body_call:
											group:
												name_var:
													exact:
														WILD:left
								EQUALS:=
								variableName:
									name_var:
										exact:
											WILD:difference
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Double
					inline:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getRandom
			NEWLINE:$\n
			objectType:
				CLASS:class 
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:left
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialLeft
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:floatCast
																			name_var:
																				exact:
																					WILD:initialRight
																			PLUS:+
								name_var:
									exact:
										WILD:right
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:initialLeft
							typeName:
								type_var:
									class:
										class_variable_names:Float
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:initialRight
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					body_element:
						NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Range
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:-1
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								ELSE:else
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								OPERATOR:< 
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-0.001 
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
							conditional:
								ELSE:else
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:value
							typeName:
								type_var:
									class:
										class_variable_names:Double
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0.001 
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								OPERATOR:> 
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
							conditional:
								IF:if
					methodName:
						name_var:
							variable:
								variable_names:normalize
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					static:
						STA:@
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:Float
				variableName:
					name_var:
						exact:
							WILD:left
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:result
								typeName:
									type_var:
										class:
											class_variable_names:Double
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:bottom
										body_call:
											DOT:.
											group:
												name_var:
													exact:
														variable_names:Math
														BACKSLASH:\
											group:
												parameters:
												name_var:
													variable:
														variable_names:random
										OPERATOR:* 
										body_call:
											group:
												name_var:
													exact:
														WILD:difference
										OPERATOR:+ 
								EQUALS:=
					static:
						STA:@
					methodName:
						name_var:
							variable:
								variable_names:getIntegerBetween
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:(int)(double)result
							SEMICOLON:;
							RETURN:return 
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:top
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									exact:
										WILD:bottom
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:top
										OPERATOR:- 
										body_call:
											group:
												name_var:
													exact:
														WILD:bottom
								variableName:
									name_var:
										exact:
											WILD:difference
								EQUALS:=
			class_declaration:
				DOT:.
				variable_declaration:
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0.0
					typeName:
						type_var:
							class:
								class_variable_names:Double
					variableName:
						name_var:
							exact:
								WILD:value
					EQUALS:=
				NEWLINE:$\n
				NEWLINE:$\n
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				className:
					variable_names:Modifier
				interfaceName:
					type_var:
						access_multi:
							type_var:
								class:
									class_variable_names:Modifier
							type_var:
								class:
									class_variable_names:Entity
							ACCESS:->
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:doubleCast
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											WILD:(float)(double)
					typeName:
						type_var:
							class:
								class_variable_names:String
					inner:
						IN:>
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:value
																			name_var:
																				variable:
																					variable_names:doubleCast
																			PLUS:+
								SEMICOLON:;
						typeName:
							type_var:
								class:
									class_variable_names:Float
						inline:
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:inputEntity
								typeName:
									type_var:
										class:
											class_variable_names:Entity
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:use
				SEMICOLON:;
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:void
						methodName:
							name_var:
								variable:
									variable_names:decrease
						body_element:
							NEWLINE:$\n
						inline:
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:amount
								typeName:
									type_var:
										class:
											class_variable_names:Float
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:inputEntity
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							COMMA:,
						body_element:
							body_line:
								variable_assignment:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:value
											body_call:
												group:
													name_var:
														exact:
															WILD:amount
											OPERATOR:- 
									name_var:
										exact:
											WILD:value
									EQUALS:=
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:misc
				SEMICOLON:;
				NEWLINE:$\n
				parentName:
					type_var:
						exact:
							variable_names:Object
							BACKSLASH:\
				objectType:
					CLASS:class 
				NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getModifier
					inline:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Entity
								ACCESS:->
								type_var:
									class:
										class_variable_names:Modifier
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Range
														type_var:
															class:
																class_variable_names:Modifier
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:getRandom
																parameters:
											NEW:new 
			variable_declaration:
				variableName:
					name_var:
						exact:
							WILD:right
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
				typeName:
					type_var:
						class:
							class_variable_names:Float
				EQUALS:=
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									exact:
										WILD:initialRight
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									exact:
										WILD:initialLeft
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				variable:
																					variable_names:floatCast
																			name_var:
																				exact:
																					WILD:initialLeft
								name_var:
									exact:
										WILD:left
								EQUALS:=
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								EQUALS:=
								name_var:
									exact:
										WILD:right
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:initialRight
																			PLUS:+
																			name_var:
																				variable:
																					variable_names:floatCast
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:upperBound
								body_call:
									group:
										name_var:
											variable:
												variable_names:lowerBound
								OPERATOR:>= 
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:lowerBound
										SEMICOLON:;
										RETURN:return 
							conditional:
								IF:if
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:lowerBound
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:upperBound
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_return:
										SEMICOLON:;
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:(int)((upperBound-lowerBound)*Math.random())+lowerBound
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								ELSE:else
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													exact:
														BACKSLASH:\
														variable_names:T
										class_variable_names:List
							variableName:
								name_var:
									variable:
										variable_names:collection
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:collection.get((int)(collection.size()*Math.random()))
							SEMICOLON:;
							RETURN:return 
					typeName:
						type_var:
							ISTYPENAME:$
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:TT
					static:
						STA:@
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										parameters:
										name_var:
											variable:
												variable_names:isEmpty
									group:
										name_var:
											variable:
												variable_names:collection
									DOT:.
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										RETURN:return 
										SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:select
					body_element:
						NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:declaredListSet
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
			EQUALS:=
		method_declaration:
			methodDefinition:
				typeName:
					STATEMENT_TYPE:Statement
				inner:
					IN:>
				methodName:
					name_var:
						variable:
							variable_names:getStatement
				inline:
					COMMA:,
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:statementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
				body_element:
					body_return:
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												variable_names:getStatement
												BACKSLASH:\
										parameters:
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:statementToken
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:context
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:declaredMapSet
			method_argument:
				body_statement:
					body_call:
						group:
							parameters:
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							NEW:new 
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			inner:
				IN:>
		SEMICOLON:;
		class_declaration:
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:tick
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Double
							variableName:
								name_var:
									exact:
										WILD:millisSinceLastFrame
			className:
				variable_names:Tickable
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						SEMICOLON:;
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:result
								DOT:.
								group:
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
									name_var:
										variable:
											variable_names:setParentContext
				body_element:
					NEWLINE:$\n
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:elementsToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getBodyElements
				body_element:
					body_return:
						SEMICOLON:;
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:result
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:result
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											typeName:
												BODY_TYPE:Body 
											parameters:
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						COLON::
						tokenInstance:
							tokenName:
								NAME:body_element
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:result
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getBodyElement
																			BACKSLASH:\
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:result
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:getContext
																						parameters:
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						name_var:
							variable:
								variable_names:elementsToken
						variableName:
							NAME:element
				typeName:
					BODY_TYPE:Body 
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:!= 
							body_call:
								group:
									name_var:
										access:
											name_var:
												variable:
													variable_names:forStatementToken
											name_var:
												exact:
													WILD:fromList
											ACCESS:->
						as_body:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													conditional:
														FOR:for
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:right
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													OPERATOR:: 
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							variable:
																								variable_names:variableHeaderToken
																						ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:variable_header
																ACCESS:->
																name_var:
																	variable:
																		variable_names:forStatementToken
																name_var:
																	exact:
																		WILD:fromList
																ACCESS:->
										typeName:
											type_var:
												class:
													class_variable_names:IToken
										variableName:
											name_var:
												variable:
													variable_names:variableHeaderToken
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getBodyElements
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:forStatementToken
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
										variableName:
											name_var:
												variable:
													variable_names:body
										typeName:
											BODY_TYPE:Body 
										EQUALS:=
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:context
													group:
														name_var:
															variable:
																variable_names:getClassContext
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:typeName
										variableName:
											name_var:
												variable:
													variable_names:type
										EQUALS:=
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getStatement
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:forStatementToken
																					name_var:
																						exact:
																							WILD:fromList
																					name_var:
																						exact:
																							WILD:statement
																					ACCESS:->
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:right
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																variable_names:getTypeName
																BACKSLASH:\
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:variableHeaderToken
																					name_var:
																						exact:
																							WILD:type_name
																					ACCESS:->
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:typeName
									SEMICOLON:;
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:type
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:== 
									as_body:
										body_element:
											body_throw:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:Generator
														group:
															name_var:
																variable:
																	variable_names:completeTokenErrorMessage
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:variableHeaderToken
														DOT:.
													body_call:
														group:
															name_var:
																concat:
																	name_var:
																		variable:
																			variable_names:typeName
																	name_var:
																		exact:
																			WILD:!
																	name_var:
																		exact:
																			WILD:Could not find type:
																	PLUS:+
																	PLUS:+
													OPERATOR:+ 
												SEMICOLON:;
												THROW:throw 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														variable_declaration:
															variableName:
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							name_var:
																								exact:
																									WILD:variableName
																							name_var:
																								variable:
																									variable_names:variableHeaderToken
																							ACCESS:->
															typeName:
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:typeName
														SEMICOLON:;
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:context
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
				body_element:
					NEWLINE:$\n
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:forStatementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
				inner:
					IN:>
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						RETURN:return 
						SEMICOLON:;
				methodName:
					name_var:
						variable:
							variable_names:getForStatement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						variableName:
							NAME:quanta
						tokenInstance:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:innerHead
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:operator
												name_var:
													variable:
														variable_names:set
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:statName
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:toLowerCase
														parameters:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:quanta
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:hero_stats
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:negateOperator
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:operator
													EQUALS:=
													name_var:
														variable:
															variable_names:operator
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										OPERATOR:&&! 
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										OPERATOR:&& 
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:quanta
														name_var:
															exact:
																WILD:NOT
														ACCESS:->
										OPERATOR:== 
										OPERATOR:|| 
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:quanta
														ACCESS:->
														name_var:
															exact:
																WILD:NOT
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:innerHead
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:quanta
																									name_var:
																										exact:
																											WILD:INTEGER
											DOT:.
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											group:
												name_var:
													variable:
														variable_names:requireHeader
											DOT:.
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:methodName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															concat:
																name_var:
																	variable:
																		variable_names:statName
																		CAMEL:^
																PLUS:+
																name_var:
																	exact:
																		WILD:get
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:require_stat
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
															parameters:
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														DOT:.
														group:
															name_var:
																exact:
																	WILD:getValue
															parameters:
														DOT:.
										variableName:
											name_var:
												variable:
													variable_names:innerHead
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:operator
										WEAK:~
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:quanta
																					name_var:
																						exact:
																							WILD:ORDINAL
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
						name_var:
							variable:
								variable_names:requirementToken
						COLON::
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:requireHeader
								DOT:.
								group:
									name_var:
										variable:
											variable_names:set
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:delimiter
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						COLON::
						tokenInstance:
							tokenName:
								NAME:require_attack
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:quanta
																					name_var:
																						exact:
																							WILD:attack_names
																					ACCESS:->
																					CAMEL:^
														name_var:
															variable:
																variable_names:getId
													DOT:.
													group:
														name_var:
															variable:
																variable_names:Attacks
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:id
										EQUALS:=
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:NOT
														name_var:
															variable:
																variable_names:quanta
														ACCESS:->
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:innerHead
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:== 
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:innerHead
												SEMICOLON:;
									conditional:
										IF:if
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											DOT:.
											group:
												name_var:
													variable:
														variable_names:requireHeader
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:innerHead
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
															name_var:
																exact:
																	WILD:has
										typeName:
											STATEMENT_TYPE:Statement
									SEMICOLON:;
						variableName:
							NAME:quanta
						name_var:
							variable:
								variable_names:requirementToken
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						variableName:
							NAME:quanta
						name_var:
							variable:
								variable_names:requirementToken
						tokenInstance:
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														group:
															name_var:
																variable:
																	variable_names:innerHead
														DOT:.
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:has
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
														DOT:.
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:innerHead
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:idValue
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:id
										EQUALS:=
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											group:
												name_var:
													variable:
														variable_names:requireHeader
									SEMICOLON:;
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:innerHead
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
														DOT:.
									conditional:
										IF:if
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:quanta
														name_var:
															exact:
																WILD:NOT
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:require_association
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:quanta
														ACCESS:->
														name_var:
															exact:
																WILD:association_names
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:Associations
																group:
																	name_var:
																		variable:
																			variable_names:getId
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:association_names
																								name_var:
																									variable:
																										variable_names:quanta
																								ACCESS:->
																								CAMEL:^
													EQUALS:=
													name_var:
														variable:
															variable_names:idValue
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										WEAK:~
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:idValue
									SEMICOLON:;
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													EQUALS:=
													name_var:
														variable:
															variable_names:idValue
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:variableName
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getId
																	DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:variableName
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:quanta
													variableName:
														name_var:
															variable:
																variable_names:variableName
													typeName:
														type_var:
															class:
																class_variable_names:String
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						COLON::
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:requireHeader
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											DOT:.
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getId
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:trait_names
																					name_var:
																						variable:
																							variable_names:quanta
																					CAMEL:^
																					ACCESS:->
													DOT:.
													group:
														name_var:
															variable:
																variable_names:Traits
										variableName:
											name_var:
												variable:
													variable_names:id
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
															name_var:
																exact:
																	WILD:has
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:innerHead
							tokenName:
								NAME:require_trait
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:innerHead
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
														DOT:.
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:quanta
														name_var:
															exact:
																WILD:NOT
														ACCESS:->
										OPERATOR:!= 
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:innerHead
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						variableName:
							NAME:quanta
						name_var:
							variable:
								variable_names:requirementToken
						COLON::
				methodName:
					name_var:
						variable:
							variable_names:getRequirement
				body_element:
					body_conditional:
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										name_var:
											variable:
												variable_names:delimiter
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:||
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:showAsTrue
						conditional:
							IF:if
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				typeName:
					STATEMENT_TYPE:Statement
				inline:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:requirementToken
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:candidate
						typeName:
							STATEMENT_TYPE:Statement
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:showAsTrue
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
					COMMA:,
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:requireHeader
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:&&
							WEAK:~
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:delimiter
							EQUALS:=
				body_element:
					body_line:
						variable_declaration:
							EQUALS:=
							typeName:
								STATEMENT_TYPE:Statement
							variableName:
								name_var:
									variable:
										variable_names:requireHeader
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											NEW:new 
											typeName:
												STATEMENT_TYPE:Statement
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			className:
				variable_names:Loaddable
			NEWLINE:$\n
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			method_declaration:
				methodDefinition:
					inline:
					methodName:
						name_var:
							variable:
								variable_names:load
					typeName:
						type_var:
							class:
								class_variable_names:void
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		SEMICOLON:;
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:imageio
			className:
				NAME:ImageIO
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:javax
						BACKSLASH:\
			HID:<
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
			SEMICOLON:;
			className:
				NAME:GL11
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			HID:<
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
			className:
				NAME:Display
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			className:
				NAME:GLU
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:glu
			DOT:.
			SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			HID:<
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:ByteBuffer
		anonymous_class:
			SEMICOLON:;
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
			className:
				NAME:GL12
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			DOT:.
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			HID:<
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			DOT:.
			SEMICOLON:;
			className:
				NAME:PixelFormat
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			SEMICOLON:;
			className:
				NAME:DisplayMode
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			DOT:.
		variable_declaration:
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									NAME:
										NUMBER:4
			typeName:
				type_var:
					class:
						class_variable_names:Integer
			variableName:
				name_var:
					variable:
						variable_names:INT_SIZE
			inner:
				IN:>
		NEWLINE:$\n
		anonymous_class:
			HID:<
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:image
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:awt
			DOT:.
			DOT:.
			className:
				NAME:BufferedImage
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:input
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			className:
				NAME:Keyboard
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
			HID:<
			className:
				NAME:ByteOrder
			COLON::
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		anonymous_class:
			SEMICOLON:;
			className:
				NAME:PixelGrabber
			COLON::
			HID:<
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:awt
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						variable_names:image
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:images
			className:
				variable_names:Colours
			packageName:
				name_var:
					exact:
						WILD:gui
			DOT:.
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		imports:
			IMPORT_CLASS:
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:gui
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:images
			DOT:.
			className:
				variable_names:Drawables
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:FloatBuffer
			HID:<
			DOT:.
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			className:
				NAME:Sys
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			className:
				NAME:Cursor
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:input
						BACKSLASH:\
			SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:IntBuffer
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
			HID:<
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			COLON::
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:gui
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			className:
				variable_names:Images
			DOT:.
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:images
		anonymous_class:
			HID:<
			className:
				NAME:Mouse
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:input
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
		NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		methodName:
			name_var:
				variable:
					variable_names:assignListElementNames
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:context
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												parameters:
												typeName:
													type_var:
														class:
															class_variable_names:HeroStats
							name_var:
								variable:
									variable_names:retainList
				SEMICOLON:;
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:root
				typeName:
					type_var:
						class:
							class_variable_names:IToken
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:context
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
			COMMA:,
		body_element:
			NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:void
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		class_declaration:
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:longForm
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:shortForm
																				CAMEL:^
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				CAMEL:^
																				name_var:
																					variable:
																						variable_names:typeToken
																				name_var:
																					exact:
																						WILD:longForm
																				ACCESS:->
													name_var:
														exact:
															variable_names:paymentTypeDec
															BACKSLASH:\
							conditional:
								ELSE:else
					typeName:
						type_var:
							class:
								class_variable_names:void
					inner:
						IN:>
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:IToken
							variableName:
								name_var:
									variable:
										variable_names:typeToken
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:paymentTypeDec
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				CAMEL:^
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
																				name_var:
																					exact:
																						WILD:typeName
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
																				name_var:
																					exact:
																						WILD:shortForm
																				CAMEL:^
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:longForm
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
														COMMA:,
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												ACCESS:->
												name_var:
													variable:
														variable_names:typeToken
												name_var:
													exact:
														WILD:typeName
							conditional:
								IF:if
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:typeName
							typeName:
								type_var:
									class:
										class_variable_names:String
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:shortForm
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:longForm
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:put
										parameters:
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:shortForm
									group:
										name_var:
											variable:
												variable_names:shortForms
									DOT:.
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:longForms
									group:
										parameters:
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:longForm
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
										name_var:
											variable:
												variable_names:put
									DOT:.
							SEMICOLON:;
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:PaymentTypes
									ACCESS:->
									type_var:
										class:
											class_variable_names:Treasury
							methodName:
								ADD:+=
							class_declaration:
								FORSLASH:/
								SEMICOLON:;
								NEWLINE:$\n
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:getLongForm
										body_element:
											NEWLINE:$\n
										inline:
										typeName:
											type_var:
												class:
													class_variable_names:String
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:longForm
										body_element:
											NEWLINE:$\n
								className:
									variable_names:typeName
								FORSLASH:/
								objectType:
									CLASS:class 
								variable_declaration:
									static:
										STA:@
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:PaymentType
												type_var:
													class:
														class_variable_names:Id
												ACCESS:->
												type_var:
													class:
														class_variable_names:Treasury
												ACCESS:->
									variableName:
										name_var:
											variable:
												variable_names:id
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													NEW:new 
													parameters:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Treasury
																ACCESS:->
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:PaymentType
																type_var:
																	class:
																		class_variable_names:Id
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:getShortForm
										inline:
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:shortForm
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										typeName:
											type_var:
												class:
													class_variable_names:String
								NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:longForms
				inner:
					IN:>
				typeName:
					type_var:
						class:
							class_variable_names:Map
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
				method_argument:
					body_statement:
						body_call:
							group:
								typeName:
									type_var:
										class:
											template_parameters:
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashMap
								parameters:
								NEW:new 
				EQUALS:=
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					methodName:
						name_var:
							variable:
								variable_names:get
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											name_var:
												variable:
													variable_names:getValue
										group:
											name_var:
												exact:
													WILD:idMap
										DOT:.
										DOT:.
										group:
											name_var:
												variable:
													variable_names:get
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:id
							RETURN:return 
							SEMICOLON:;
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Treasury
										type_var:
											class:
												class_variable_names:PaymentType
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
							variableName:
								name_var:
									variable:
										variable_names:id
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								OPERATOR:== 
								body_call:
									DOT:.
									group:
										name_var:
											exact:
												WILD:idMap
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												DOT:.
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		NEW:new 
					body_element:
						NEWLINE:$\n
			className:
				variable_names:Treasury
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				className:
					variable_names:Reward
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getPlacable
						body_element:
							body_return:
								SEMICOLON:;
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Menu
									type_var:
										class:
											class_variable_names:Placable
									ACCESS:->
						body_element:
							NEWLINE:$\n
						inline:
				packageName:
					name_var:
						exact:
							WILD:treasuries
				NEWLINE:$\n
				objectType:
					CLASS:class 
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				NEWLINE:$\n
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:overview
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:isPlacable
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
								RETURN:return 
								SEMICOLON:;
						inline:
						body_element:
							NEWLINE:$\n
				DOT:.
				DOT:.
			class_declaration:
				class_declaration:
					NEWLINE:$\n
					FORSLASH:/
					objectType:
						CLASS:class 
					className:
						variable_names:Id
					FORSLASH:/
				FORSLASH:/
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:shortForm
					typeName:
						type_var:
							class:
								class_variable_names:String
				SEMICOLON:;
				NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				SEMICOLON:;
				objectType:
					CLASS:class 
				FORSLASH:/
				NEWLINE:$\n
				className:
					variable_names:PaymentType
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:String
					variableName:
						name_var:
							variable:
								variable_names:longForm
			NEWLINE:$\n
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashMap
				inner:
					IN:>
				variableName:
					name_var:
						variable:
							variable_names:shortForms
				EQUALS:=
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
							class_variable_names:Map
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:item_names
																name_var:
																	variable:
																		variable_names:typeNameToken
																CAMEL:^
																ACCESS:->
										RETURN:return 
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												ACCESS:->
												name_var:
													variable:
														variable_names:typeNameToken
												name_var:
													exact:
														WILD:item_names
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					CAMEL:^
																					name_var:
																						variable:
																							variable_names:typeNameToken
																					name_var:
																						exact:
																							WILD:payment_long_type_names
														name_var:
															variable:
																variable_names:get
													group:
														name_var:
															variable:
																variable_names:longForms
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								ELSE:else
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											access:
												name_var:
													exact:
														WILD:payment_long_type_names
												name_var:
													variable:
														variable_names:typeNameToken
												ACCESS:->
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										SEMICOLON:;
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:payment_short_type_names
																					CAMEL:^
																					name_var:
																						variable:
																							variable_names:typeNameToken
														name_var:
															variable:
																variable_names:get
													DOT:.
													group:
														name_var:
															variable:
																variable_names:shortForms
										SEMICOLON:;
										RETURN:return 
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								ELSE:else
								IF:if
							body_statement:
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeNameToken
												ACCESS:->
												name_var:
													exact:
														WILD:payment_short_type_names
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:IToken
							variableName:
								name_var:
									variable:
										variable_names:typeNameToken
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getTypeName
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:String
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			DOT:.
			SEMICOLON:;
			NEWLINE:$\n
			class_declaration:
				FORSLASH:/
				className:
					variable_names:PaymentTypes
				NEWLINE:$\n
				FORSLASH:/
				objectType:
					CLASS:class 
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:increase
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:id
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Treasury
										ACCESS:->
										type_var:
											class:
												class_variable_names:PaymentType
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:amount
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:setValue
										parameters:
											method_argument:
												body_statement:
													OPERATOR:+ 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:amount
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
															name_var:
																variable:
																	variable_names:get
														group:
															name_var:
																exact:
																	WILD:idMap
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getValue
													BACKSLASH:\
									group:
										name_var:
											exact:
												WILD:idMap
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
										name_var:
											variable:
												variable_names:get
									DOT:.
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
								OPERATOR:== 
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		NEW:new 
												DOT:.
										SEMICOLON:;
			packageName:
				name_var:
					exact:
						WILD:treasuries
			packageName:
				name_var:
					exact:
						WILD:overview
			class_declaration:
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:overview
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:getAmount
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1
								RETURN:return 
								SEMICOLON:;
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						body_element:
							NEWLINE:$\n
						inline:
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						body_element:
							body_conditional:
								conditional:
									ELSE:else
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:treasury
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getType
													OPERATOR:>= 
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:getAmount
											SEMICOLON:;
											RETURN:return 
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Treasury
								variableName:
									name_var:
										variable:
											variable_names:treasury
						body_element:
							body_conditional:
								conditional:
									IF:if
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:isFree
											parameters:
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:true
									body_element:
										NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:canPay
				DOT:.
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:getReward
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Reward
									type_var:
										class:
											class_variable_names:Treasury
									ACCESS:->
						body_element:
							body_return:
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
						inline:
				NEWLINE:$\n
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				packageName:
					name_var:
						exact:
							WILD:treasuries
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:PaymentType
									type_var:
										class:
											class_variable_names:Treasury
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
									ACCESS:->
						methodName:
							name_var:
								variable:
									variable_names:getType
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
						inline:
				NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				className:
					variable_names:Cost
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:isFree
						body_element:
							body_return:
								RETURN:return 
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						inline:
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
				objectType:
					CLASS:class 
				DOT:.
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Treasury
														name_var:
															variable:
																variable_names:PaymentType
														ACCESS:->
														ACCESS:->
														name_var:
															variable:
																variable_names:Id
								typeName:
									CLASS_TYPE:Class 
								variableName:
									name_var:
										variable:
											variable_names:idClass
								EQUALS:=
							SEMICOLON:;
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Treasury
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:idMap
								method_argument:
									body_statement:
										body_call:
											NEWLINE:$\n
											group:
												parameters:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:HashMap
															template_parameters:
																COMMA:,
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:idClass
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Int
											NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
								WEAK:~
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:idClass
												template_parameter:
													type_var:
														class:
															class_variable_names:Int
												COMMA:,
											class_variable_names:Map
								EQUALS:=
							methodName:
								ADD:+=
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:setup
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:ParseContext
							variableName:
								name_var:
									variable:
										variable_names:data
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													BACKSLASH:\
													body_call:
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
														group:
															name_var:
																exact:
																	WILD:idMap
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getValue
															parameters:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													OPERATOR:+ 
										name_var:
											variable:
												variable_names:setValue
									group:
										name_var:
											variable:
												variable_names:get
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
									group:
										name_var:
											exact:
												WILD:idMap
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														exact:
															WILD:idMap
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		NEW:new 
														COMMA:,
													name_var:
														variable:
															variable_names:put
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									DOT:.
									group:
										name_var:
											exact:
												WILD:idMap
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
										name_var:
											variable:
												variable_names:containsKey
							conditional:
								IF:if
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Treasury
										type_var:
											class:
												class_variable_names:PaymentType
										type_var:
											class:
												class_variable_names:Id
							variableName:
								name_var:
									variable:
										variable_names:id
					body_element:
						NEWLINE:$\n
			DOT:.
			SEMICOLON:;
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								exact:
									BACKSLASH:\
									variable_names:output
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						group:
							name_var:
								variable:
									variable_names:Tile
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Items
						DOT:.
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:setupGui
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Entity
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
				SEMICOLON:;
		body_element:
			body_line:
				variable_declaration:
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:data
								group:
									parameters:
									name_var:
										variable:
											variable_names:getRoot
								DOT:.
					variableName:
						name_var:
							variable:
								variable_names:root
					typeName:
						type_var:
							class:
								class_variable_names:IToken
				SEMICOLON:;
		body_element:
			body_manipulate:
				variableName:
					NAME:imports
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:Gui
									group:
										name_var:
											variable:
												variable_names:importAny
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
					COLON::
					tokenName:
						NAME:import_any
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												variable_names:importAny
												BACKSLASH:\
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:root
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Quests
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									variable_names:setup
									BACKSLASH:\
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:../Questineer/src
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						group:
							name_var:
								variable:
									variable_names:Environment
						DOT:.
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
				variableName:
					name_var:
						variable:
							variable_names:data
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:IMPORT_EVENT
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_manipulate:
										variableName:
											NAME:element
										name_var:
											variable:
												variable_names:import_events
										COLON::
										tokenInstance:
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:event_declaration
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:Events
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:declaration
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:element
											COLON::
							COLON::
							name_var:
								variable:
									variable_names:imports
							variableName:
								NAME:import_events
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:import_any
					body_element:
						NEWLINE:$\n
					COLON::
				name_var:
					variable:
						variable_names:root
				variableName:
					NAME:imports
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Activities
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Aspects
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Skills
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						DOT:.
				SEMICOLON:;
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:generate
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Relationship
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Conditions
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Treasury
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_reason
							tokenInstance:
								COLON::
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Relationship
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:reason_declaration
					tokenName:
						NAME:IMPORT_REASON
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
				COLON::
				variableName:
					NAME:import_reason
				name_var:
					variable:
						variable_names:import_any
		methodName:
			name_var:
				variable:
					variable_names:importAny
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:event_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Events
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_events
					tokenName:
						NAME:IMPORT_EVENT
					COLON::
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_events
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_supports
							COLON::
							tokenInstance:
								tokenName:
									NAME:support_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Supports
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
							variableName:
								NAME:element
					tokenName:
						NAME:IMPORT_SUPPORT
					body_element:
						NEWLINE:$\n
					COLON::
				variableName:
					NAME:import_supports
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_association
							tokenInstance:
								tokenName:
									NAME:association_declaration
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Associations
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								body_element:
									NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_ASSOCIATION
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_association
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_quests
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:quest_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Quests
												DOT:.
												group:
													name_var:
														variable:
															variable_names:typeDeclaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
							name_var:
								variable:
									variable_names:import_quests
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_QUEST
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_SKILL
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_skills
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Skills
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:skill_declaration
							variableName:
								NAME:element
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_skills
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_MAP
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:import_map
										name_var:
											variable:
												variable_names:declaration
									group:
										name_var:
											variable:
												variable_names:Environment
									DOT:.
				COLON::
				variableName:
					NAME:import_map
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_traits
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_TRAIT
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_traits
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:trait_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Traits
												DOT:.
										SEMICOLON:;
								COLON::
								body_element:
									NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_items
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_items
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Items
										SEMICOLON:;
								tokenName:
									NAME:item_declaration
							COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ITEM
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_items
							tokenInstance:
								COLON::
								tokenName:
									NAME:import_any
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														exact:
															variable_names:importAny
															BACKSLASH:\
								body_element:
									NEWLINE:$\n
							COLON::
							variableName:
								NAME:element
					COLON::
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
		body_element:
			body_manipulate:
				variableName:
					NAME:import_payment_types
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_PAYMENT_TYPE
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_payment_types
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:payment_type_declaration
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:paymentTypeDec
												group:
													name_var:
														variable:
															variable_names:Treasury
		body_element:
			body_manipulate:
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_ACTIVITY
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Activities
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
										SEMICOLON:;
								COLON::
								tokenName:
									NAME:activity_declaration
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_activities
							variableName:
								NAME:element
							COLON::
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_activities
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:attack_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Attacks
												DOT:.
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_attacks
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ATTACK
					body_element:
						NEWLINE:$\n
					COLON::
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_attacks
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				variableName:
					NAME:import_aspects
				COLON::
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Aspects
												DOT:.
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:aspect_declaration
							name_var:
								variable:
									variable_names:import_aspects
							COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ASPECT
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:IToken
				variableName:
					name_var:
						variable:
							variable_names:import_any
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_affinities
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_affinities
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:affinity_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Affinities
										SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_AFFINITY
				name_var:
					variable:
						variable_names:import_any
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:condition_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Conditions
										SEMICOLON:;
							COLON::
							name_var:
								variable:
									variable_names:import_conditions
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_CONDITION
					body_element:
						NEWLINE:$\n
					COLON::
				COLON::
				variableName:
					NAME:import_conditions
				name_var:
					variable:
						variable_names:import_any
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			body_line:
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:isFirst
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:true
					WEAK:~
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:StringBuilder
					variableName:
						name_var:
							variable:
								variable_names:nameBuilder
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									NEW:new 
									typeName:
										type_var:
											class:
												class_variable_names:StringBuilder
									parameters:
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:getTypeName
		body_element:
			body_return:
				SEMICOLON:;
				RETURN:return 
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:IToken
				variableName:
					name_var:
						variable:
							variable_names:nameToken
		typeName:
			type_var:
				class:
					class_variable_names:String
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:append
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	CAMEL:^
																	variable_names:element
									DOT:.
									group:
										name_var:
											variable:
												variable_names:nameBuilder
							SEMICOLON:;
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:nameBuilder
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								OPERATOR:==
								body_call:
									group:
										name_var:
											variable:
												variable_names:isFirst
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										variable_assignment:
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											name_var:
												variable:
													variable_names:isFirst
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:typeName
					body_element:
						NEWLINE:$\n
				COLON::
				variableName:
					NAME:element
				name_var:
					variable:
						variable_names:nameToken
comment:
	WILD:import images/image.clws
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:environments
					objectType:
						CLASS:class 
					DOT:.
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					className:
						variable_names:EntryPoints
					NEWLINE:$\n
				NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					NEWLINE:$\n
					DOT:.
					className:
						variable_names:Areas
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:environments
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
method_declaration:
	methodDefinition:
		body_element:
			body_return:
				SEMICOLON:;
				RETURN:return 
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:../Resource/
				inner:
					IN:>
		typeName:
			type_var:
				class:
					class_variable_names:String
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:fileName
			COMMA:,
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:knownDirectory
				typeName:
					type_var:
						class:
							class_variable_names:String
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:getDirectory<<