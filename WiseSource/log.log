environments.clws>>
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_return:
				RETURN:return 
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:../Resource/
				inner:
					IN:>
				SEMICOLON:;
		methodName:
			name_var:
				variable:
					variable_names:getDirectory
		inner:
			IN:>
		COMMA:,
		typeName:
			type_var:
				class:
					class_variable_names:String
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:knownDirectory
			typeName:
				type_var:
					class:
						class_variable_names:String
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:fileName
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
						NEWLINE:$\n
						class_declaration:
							className:
								variable_names:Attack
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_conditional:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0 
												OPERATOR:>
												body_call:
													group:
														name_var:
															exact:
																WILD:cooldown
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:cooldown
															OPERATOR:-= 
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
												body_element:
													NEWLINE:$\n
											conditional:
												IF:if
									methodName:
										name_var:
											variable:
												variable_names:on
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:event
										typeName:
											type_var:
												access_multi:
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Tick
													ACCESS:->
													type_var:
														class:
															class_variable_names:Events
							DOT:.
							DOT:.
							NEWLINE:$\n
							DOT:.
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									methodName:
										name_var:
											variable:
												variable_names:getCooldown
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:getDamage
									COMMA:,
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
											SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:defender
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:attacker
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Damage
												type_var:
													class:
														class_variable_names:Attack
												ACCESS:->
									body_element:
										NEWLINE:$\n
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:getRange
									body_element:
										NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:entity
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:use
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:entity
														group:
															name_var:
																exact:
																	WILD:range
														DOT:.
									typeName:
										type_var:
											class:
												class_variable_names:Float
							parentName:
								type_var:
									class:
										class_variable_names:Skill
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
									methodName:
										name_var:
											variable:
												variable_names:getAttackId
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Attack
												type_var:
													class:
														class_variable_names:Id
												ACCESS:->
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:isOffCooldown
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
													OPERATOR:== 
											SEMICOLON:;
											RETURN:return 
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:attacks
							class_declaration:
								FORSLASH:/
								objectType:
									CLASS:class 
								FORSLASH:/
								NEWLINE:$\n
								className:
									variable_names:Id
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:entities
							NEWLINE:$\n
							class_declaration:
								objectType:
									CLASS:class 
								NEWLINE:$\n
								SEMICOLON:;
								variable_declaration:
									EQUALS:=
									variableName:
										name_var:
											exact:
												WILD:modifier
									typeName:
										type_var:
											class:
												class_variable_names:Float
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:getTotal
										typeName:
											type_var:
												class:
													class_variable_names:Float
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														OPERATOR:* 
														body_call:
															group:
																name_var:
																	exact:
																		WILD:value
														body_call:
															group:
																name_var:
																	exact:
																		WILD:modifier
												SEMICOLON:;
												RETURN:return 
										body_element:
											NEWLINE:$\n
								SEMICOLON:;
								NEWLINE:$\n
								NEWLINE:$\n
								FORSLASH:/
								NEWLINE:$\n
								NEWLINE:$\n
								FORSLASH:/
								variable_declaration:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									EQUALS:=
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									variableName:
										name_var:
											exact:
												WILD:hit
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:setValue
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Float
											variableName:
												name_var:
													exact:
														WILD:newValue
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newValue
													name_var:
														exact:
															WILD:value
													EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:void
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Float
									variableName:
										name_var:
											exact:
												WILD:value
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:void
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													name_var:
														exact:
															WILD:modifier
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newModifier
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:setModifier
										body_element:
											NEWLINE:$\n
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:newModifier
											typeName:
												type_var:
													class:
														class_variable_names:Float
								SEMICOLON:;
								NEWLINE:$\n
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:void
										body_element:
											NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Boolean
											variableName:
												name_var:
													exact:
														WILD:newHit
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newHit
													name_var:
														exact:
															WILD:hit
												SEMICOLON:;
										methodName:
											name_var:
												variable:
													variable_names:setHit
								NEWLINE:$\n
								className:
									variable_names:Damage
							NEWLINE:$\n
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:behaviours
							packageName:
								name_var:
									exact:
										WILD:skills
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:(int)(float)cost
														group:
															name_var:
																variable:
																	variable_names:use
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:entity
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									methodName:
										name_var:
											variable:
												variable_names:getCost
									body_element:
										NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:entity
							NEWLINE:$\n
							DOT:.
							NEWLINE:$\n
							objectType:
								CLASS:class 
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:attack
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:defender
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									body_element:
										body_conditional:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:damage
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getHit
											as_body:
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:experience
															BACKSLASH:\
															OPERATOR:+= 
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:3
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:on
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						NEW:new 
																						parameters:
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:damage
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attacker
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:defender
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										exact:
																											variable_names:Hit
																											BACKSLASH:\
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Events
																group:
																	name_var:
																		exact:
																			WILD:defender
																DOT:.
											conditional:
												IF:if
									body_element:
										body_conditional:
											conditional:
												ELSE:else
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															BACKSLASH:\
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:experience
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
															OPERATOR:+= 
														SEMICOLON:;
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:defender
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attacker
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:damage
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:defender
																							COMMA:,
																							COMMA:,
																						NEW:new 
																						typeName:
																							type_var:
																								access_multi:
																									ACCESS:->
																									type_var:
																										exact:
																											variable_names:Miss
																											BACKSLASH:\
																									type_var:
																										class:
																											class_variable_names:Events
																	name_var:
																		variable:
																			variable_names:on
																DOT:.
														SEMICOLON:;
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_line:
											variable_declaration:
												EQUALS:=
												variableName:
													name_var:
														exact:
															WILD:damage
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Damage
															type_var:
																class:
																	class_variable_names:Attack
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:getDamage
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:attacker
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:defender
											SEMICOLON:;
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:attacker
													DOT:.
													group:
														name_var:
															variable:
																variable_names:on
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							exact:
																								variable_names:PreAttack
																								BACKSLASH:\
																						ACCESS:->
																						type_var:
																							class:
																								class_variable_names:Events
																			parameters:
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:attacker
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:defender
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:damage
																			NEW:new 
											SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:attacker
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:attacker
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			parameters:
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:damage
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:attacker
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:defender
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							exact:
																								BACKSLASH:\
																								variable_names:PostAttack
																						type_var:
																							class:
																								class_variable_names:Events
																						ACCESS:->
																			NEW:new 
														name_var:
															variable:
																variable_names:on
													DOT:.
									COMMA:,
									body_element:
										body_line:
											variable_assignment:
												EQUALS:=
												name_var:
													exact:
														WILD:cooldown
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:getCost
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:attacker
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
				imports:
					IMPORT_CLASS:
				class_declaration:
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Skill
								variableName:
									name_var:
										exact:
											WILD:otherSkill
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										body_call:
											group:
												name_var:
													exact:
														WILD:otherSkill
											DOT:.
											group:
												name_var:
													exact:
														WILD:cooldown
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_return:
															method_argument:
																body_statement:
																	OPERATOR:- 
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		DOT:.
															RETURN:return 
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_return:
															SEMICOLON:;
															method_argument:
																body_statement:
																	OPERATOR:- 
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
															RETURN:return 
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:hasEntityFocus
									conditional:
										IF:if
							methodName:
								name_var:
									variable:
										variable_names:compareTo
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														OPERATOR:- 
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
														body_call:
															group:
																name_var:
																	exact:
																		WILD:otherSkill
															group:
																name_var:
																	exact:
																		WILD:cooldown
															DOT:.
												RETURN:return 
												SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:skills
					NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						objectType:
							CLASS:class 
						className:
							variable_names:Id
						FORSLASH:/
						NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:hasEntityFocus
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						WEAK:~
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getName
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:isOffCooldown
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:cooldown
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0
											OPERATOR:== 
									RETURN:return 
									SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Skill
										ACCESS:->
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:user
							COMMA:,
							methodName:
								name_var:
									variable:
										variable_names:use
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:victim
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:entity
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:getCost
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														exact:
															WILD:(int)(float)cost
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
									SEMICOLON:;
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					className:
						variable_names:Skill
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
									type_var:
										class:
											class_variable_names:Entity
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:cost
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
									SEMICOLON:;
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:cooldown
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						EQUALS:=
					NEWLINE:$\n
					SEMICOLON:;
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:user
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								body_conditional:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:potential
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:getLocation
												parameters:
											group:
												name_var:
													exact:
														WILD:user
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getRange
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:user
												name_var:
													variable:
														variable_names:getEntitiesWithin
											DOT:.
											DOT:.
									conditional:
										FOR:for
									OPERATOR:: 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:user
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:potential
															SEMICOLON:;
												conditional:
													IF:if
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:targetCriteria
														group:
															name_var:
																variable:
																	variable_names:satisfies
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:potential
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
									RETURN:return 
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
												RETURN:return 
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														variable_names:isOffCooldown
														BACKSLASH:\
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												exact:
													variable_names:EntityList
													BACKSLASH:\
										variableName:
											name_var:
												exact:
													WILD:potentialTargets
									SEMICOLON:;
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:experience
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:targetCriteria
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
						typeName:
							type_var:
								exact:
									BACKSLASH:\
									variable_names:EntityCriteria
					NEWLINE:$\n
					DOT:.
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:getDescription
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
												group:
													name_var:
														exact:
															WILD:range
												DOT:.
									RETURN:return 
									SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:entity
							methodName:
								name_var:
									variable:
										variable_names:getRange
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
									type_var:
										class:
											class_variable_names:Modifier
						variableName:
							name_var:
								exact:
									WILD:range
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:newFocus
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
							body_element:
								body_line:
									variable_assignment:
										name_var:
											exact:
												WILD:hasEntityFocus
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getName
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
									SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													BACKSLASH:\
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										OPERATOR:> 
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:event
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Events
											type_var:
												exact:
													variable_names:Tick
													BACKSLASH:\
											ACCESS:->
							methodName:
								name_var:
									variable:
										variable_names:on
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:newFocus
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											exact:
												WILD:hasEntityFocus
										method_argument:
											body_ment:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
										EQUALS:=
				NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:host
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:isChasing
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																body_call:
																	DOT:.
																	DOT:.
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getLocation
																	group:
																		name_var:
																			variable:
																				variable_names:host
																	group:
																		name_var:
																			variable:
																				variable_names:getDistanceTo
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																							name_var:
																								variable:
																									variable_names:getLocation
																						group:
																							name_var:
																								variable:
																									variable_names:towardEntity
																						DOT:.
																OPERATOR:< 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:distanceToTarget
															as_body:
																body_element:
																	body_line:
																		variable_assignment:
																			name_var:
																				variable:
																					variable_names:towardEntity
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:null
																			EQUALS:=
																		SEMICOLON:;
																body_element:
																	body_line:
																		SEMICOLON:;
																		variable_assignment:
																			name_var:
																				variable:
																					variable_names:isChasing
																			EQUALS:=
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:false
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:host
																	group:
																		name_var:
																			variable:
																				variable_names:step
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							parameters:
																							name_var:
																								variable:
																									variable_names:getWalkingSpeed
																						group:
																							name_var:
																								variable:
																									variable_names:host
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:getLocation
																							parameters:
																						group:
																							name_var:
																								variable:
																									variable_names:towardEntity
																			COMMA:,
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getLocation
																	DOT:.
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:towardEntity
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		variable_assignment:
																			name_var:
																				variable:
																					variable_names:towardTile
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:null
																			EQUALS:=
																		SEMICOLON:;
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		SEMICOLON:;
																		variable_assignment:
																			EQUALS:=
																			name_var:
																				variable:
																					variable_names:isChasing
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:false
															body_statement:
																OPERATOR:< 
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getDistanceTo
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:towardTile
																						group:
																							name_var:
																								variable:
																									variable_names:getLocation
																							parameters:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:host
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getLocation
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:distanceToTarget
															conditional:
																IF:if
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:host
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getLocation
																		parameters:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:getWalkingSpeed
																							parameters:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:host
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:getLocation
																							parameters:
																						group:
																							name_var:
																								variable:
																									variable_names:towardTile
																			COMMA:,
																		name_var:
																			variable:
																				variable_names:step
																	DOT:.
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:towardTile
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
												conditional:
													ELSE:else
													IF:if
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
													OPERATOR:|| 
													OPERATOR:|| 
													OPERATOR:== 
													body_call:
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getFocusSkill
														group:
															name_var:
																variable:
																	variable_names:use
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:host
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:host
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:containsKey
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getId
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getFocusSkill
																			group:
																				name_var:
																					variable:
																						variable_names:host
																			DOT:.
														group:
															name_var:
																exact:
																	WILD:usables
													OPERATOR:==
													body_call:
														group:
															name_var:
																variable:
																	variable_names:host
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getFocusSkill
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:usables
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:usable
																			body_call:
																				group:
																					parameters:
																					name_var:
																						variable:
																							variable_names:getFocusSkill
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:host
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:usable
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:host
																					name_var:
																						variable:
																							variable_names:use
																				DOT:.
																			OPERATOR:&& 
																			OPERATOR:!=
																		conditional:
																			IF:if
																		as_body:
																			body_element:
																				body_return:
																					RETURN:return 
																					VOID:void
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:usable
																typeName:
																	type_var:
																		class:
																			class_variable_names:Usable
															OPERATOR:: 
															conditional:
																FOR:for
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																ELSE:else
															as_body:
																body_element:
																	body_line:
																		SEMICOLON:;
																		body_statement:
																			body_call:
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:this
																					name_var:
																						variable:
																							variablriable_names:stepNextActivity
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:host
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																OPERATOR:!= 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:targetCriteria
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																						COMMA:,
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:targetEntity
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:distance
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:setTarget
																		SEMICOLON:;
													body_element:
														body_conditional:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:usable
																typeName:
																	type_var:
																		class:
																			class_variable_names:Usable
															OPERATOR:: 
															conditional:
																FOR:for
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		SEMICOLON:;
																		variable_declaration:
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Entity
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																						group:
																							name_var:
																								variable:
																									variable_names:getLocation
																							parameters:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:getClosestEntity
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetCriteria
																												parameters:
																											group:
																												name_var:
																													variable:
																														variable_names:usable
																											DOT:.
																						DOT:.
																			variableName:
																				name_var:
																					variable:
																						variable_names:potentialEntity
																			EQUALS:=
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:potentialEntity
																						name_var:
																							variable:
																								variable_names:targetEntity
																						EQUALS:=
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						name_var:
																							variable:
																								variable_names:distance
																						EQUALS:=
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:range
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:distance
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:potentialEntity
																				group:
																					name_var:
																						variable:
																							variable_names:getDistanceTo
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:host
																									DOT:.
																									group:
																										name_var:
																											variable:
																												variable_names:getLocation
																										parameters:
																				group:
																					name_var:
																						variable:
																							variable_names:getLocation
																					parameters:
																				DOT:.
																				DOT:.
																			OPERATOR:< 
																		conditional:
																			IF:if
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		SEMICOLON:;
																		variable_declaration:
																			EQUALS:=
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:getRange
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:host
																						group:
																							name_var:
																								variable:
																									variable_names:usable
																						DOT:.
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Float
																			variableName:
																				name_var:
																					variable:
																						variable_names:range
																body_element:
																	NEWLINE:$\n
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:usables
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																typeName:
																	type_var:
																		class:
																			class_variable_names:Float
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Float
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:MAX_VALUE
																variableName:
																	name_var:
																		variable:
																			variable_names:distance
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
																name_var:
																	variable:
																		variable_names:isChasing
																EQUALS:=
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:targetEntity
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																EQUALS:=
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
															SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							methodName:
								name_var:
									variable:
										variable_names:step
							typeName:
								type_var:
									class:
										class_variable_names:void
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:target
										name_var:
											variable:
												variable_names:towardEntity
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:target
							COMMA:,
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:distance
										name_var:
											variable:
												variable_names:distanceToTarget
										EQUALS:=
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:setTarget
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:distance
								typeName:
									type_var:
										class:
											class_variable_names:Float
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
					parentName:
						type_var:
							class:
								class_variable_names:Object
					NEWLINE:$\n
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:name
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:String
					NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						FORSLASH:/
						objectType:
							INTERFACE:interface 
						className:
							variable_names:Factory
						NEWLINE:$\n
						NEWLINE:$\n
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:create
								typeName:
									type_var:
										class:
											class_variable_names:Activity
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:towardEntity
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Entity
					variable_declaration:
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:distanceToTarget
						typeName:
							type_var:
								class:
									class_variable_names:Float
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0.0
						EQUALS:=
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						variableName:
							name_var:
								variable:
									variable_names:isChasing
						WEAK:~
						EQUALS:=
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:towardTile
						typeName:
							type_var:
								class:
									class_variable_names:Tile
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:activities
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:description
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					objectType:
						CLASS:class 
					class_declaration:
						objectType:
							CLASS:class 
						className:
							variable_names:Id
						FORSLASH:/
						NEWLINE:$\n
						FORSLASH:/
					SEMICOLON:;
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Activity
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Activity
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					DOT:.
					method_declaration:
						methodDefinition:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Float
								variableName:
									name_var:
										variable:
											variable_names:distance
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											variable:
												variable_names:distanceToTarget
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:distance
							COMMA:,
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:setTarget
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Tile
								variableName:
									name_var:
										variable:
											variable_names:target
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:target
										name_var:
											variable:
												variable_names:towardTile
										EQUALS:=
									SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:entities
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					SEMICOLON:;
		class_declaration:
			className:
				variable_names:Int
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:setValue
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newValue
								EQUALS:=
								name_var:
									variable:
										variable_names:value
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:newValue
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					body_element:
						NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Integer
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0
				variableName:
					name_var:
						variable:
							variable_names:value
				EQUALS:=
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:amount
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:amount
								BACKSLASH:\
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								OPERATOR:+= 
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		class_declaration:
			objectType:
				CLASS:class 
			NEWLINE:$\n
			DOT:.
			className:
				variable_names:Entities
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					methodName:
						name_var:
							variable:
								variable_names:createEntity
					typeName:
						type_var:
							class:
								class_variable_names:Entity
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							RETURN:return 
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:entityName
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												typeName:
													type_var:
														class:
															class_variable_names:StringBuilder
												parameters:
												NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:StringBuilder
								variableName:
									name_var:
										variable:
											variable_names:entityNameBuilder
							SEMICOLON:;
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												access:
													ACCESS:->
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:entityName
													ACCESS:->
													name_var:
														variable:
															variable_names:Entities
													name_var:
														variable:
															variable_names:Factory
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							methodName:
								ADD:+=
							class_declaration:
								objectType:
									CLASS:class 
								className:
									variable_names:entityName
								NEWLINE:$\n
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								parentName:
									type_var:
										class:
											class_variable_names:Entity
								DOT:.
								packageName:
									name_var:
										exact:
											WILD:entities
							type_var:
								class:
									class_variable_names:Entities
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:declarationToken
							COLON::
							tokenInstance:
								tokenName:
									NAME:entityName
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:element
												group:
													name_var:
														variable:
															variable_names:entityNameBuilder
												DOT:.
										SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:toString
												parameters:
											group:
												name_var:
													variable:
														variable_names:entityNameBuilder
											DOT:.
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:entityName
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							class_declaration:
								objectType:
									CLASS:class 
								NEWLINE:$\n
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								NEWLINE:$\n
								DOT:.
								className:
									variable_names:Factory
								parentName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:Object
								interfaceName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Factory
											ACCESS:->
											type_var:
												class:
													class_variable_names:Entity
								method_declaration:
									methodDefinition:
										body_element:
											body_return:
												SEMICOLON:;
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																NEW:new 
																typeName:
																	type_var:
																		access_multi:
																			type_var:
																				class:
																					class_variable_names:Entities
																			ACCESS:->
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:entityName
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:create
								packageName:
									name_var:
										exact:
											WILD:entities
							type_var:
								access_multi:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:entityName
									type_var:
										class:
											class_variable_names:Entities
									ACCESS:->
							methodName:
								ADD:+=
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							name_var:
								variable:
									variable_names:declarationToken
							variableName:
								NAME:element
							tokenInstance:
								tokenName:
									NAME:entity_definition
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_manipulate:
										COLON::
										name_var:
											variable:
												variable_names:element
										variableName:
											NAME:atom
										tokenInstance:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														typeName:
															CONTEXT_TYPE:Context 
														EQUALS:=
														variableName:
															name_var:
																variable:
																	variable_names:eventContext
														method_argument:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	group:
																		parameters:
																			COMMA:,
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:Entities
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:entityName
																									ACCESS:->
																			method_argument:
																				body_entries:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:atom
																														name_var:
																															exact:
																																WILD:event_names
																														ACCESS:->
																		name_var:
																			variable:
																				variable_names:addToEventMethod
													SEMICOLON:;
											body_element:
												body_manipulate:
													tokenInstance:
														tokenName:
															NAME:body_element
														body_element:
															NEWLINE:$\n
														COLON::
														body_element:
															body_line:
																body_statement:
																	body_call:
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										variable_names:getBodyElement
																										BACKSLASH:\
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:eventContext
																									COMMA:,
																			name_var:
																				variable:
																					variable_names:add
																		group:
																			name_var:
																				variable:
																					variable_names:eventBody
																		DOT:.
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
													variableName:
														NAME:quark
													name_var:
														variable:
															variable_names:atom
													COLON::
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:addToEventMethod
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							ACCESS:->
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:entityName
																							name_var:
																								variable:
																									variable_names:Entities
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:eventBody
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													exact:
																														WILD:event_names
																												ACCESS:->
																												name_var:
																													variable:
																														variable_names:atom
																	COMMA:,
															group:
																name_var:
																	variable:
																		variable_names:Events
															DOT:.
													SEMICOLON:;
											tokenName:
												NAME:event
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:eventBody
														EQUALS:=
														typeName:
															BODY_TYPE:Body 
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																		typeName:
																			BODY_TYPE:Body 
																		NEW:new 
													SEMICOLON:;
								body_element:
									body_manipulate:
										tokenInstance:
											tokenName:
												NAME:affinity_names
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													NEW:new 
																													parameters:
																													typeName:
																														type_var:
																															access_multi:
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							CAMEL:^
																																							variable_names:atom
																																type_var:
																																	class:
																																		class_variable_names:Affinities
																																ACCESS:->
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
														OPERATOR:->*.
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											COLON::
										COLON::
										variableName:
											NAME:atom
										name_var:
											variable:
												variable_names:element
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										tokenInstance:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														typeName:
															CONTEXT_TYPE:Context 
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Entity
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getContext
																		parameters:
														variableName:
															name_var:
																variable:
																	variable_names:bodyContext
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:skill
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													COLON::
													name_var:
														variable:
															variable_names:atom
													variableName:
														NAME:quark
													tokenInstance:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														tokenName:
															NAME:statement
														COLON::
														body_element:
															body_line:
																body_statement:
																	body_call:
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:bodyContext
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getStatement
																			name_var:
																				variable:
																					variable_names:add
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:arguments
																SEMICOLON:;
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:,
																name_var:
																	variable:
																		variable_names:set
															group:
																name_var:
																	variable:
																		variable_names:arguments
															DOT:.
											body_element:
												body_line:
													body_statement:
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_method:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:arguments
																													NEW:new 
																													typeName:
																														type_var:
																															access_multi:
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						access:
																																							ACCESS:->
																																							name_var:
																																								variable:
																																									variable_names:atom
																																							name_var:
																																								exact:
																																									WILD:skill_names
																																							CAMEL:^
																																type_var:
																																	class:
																																		class_variable_names:Skills
																																ACCESS:->
																									COMMA:,
																								name_var:
																									variable:
																										variable_names:gain
																							DOT:.
																					SEMICOLON:;
													SEMICOLON:;
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:arguments
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		typeName:
																			STATEMENT_TYPE:Statement
																		parameters:
														EQUALS:=
														typeName:
															STATEMENT_TYPE:Statement
											COLON::
										COLON::
										variableName:
											NAME:atom
										name_var:
											variable:
												variable_names:element
								body_element:
									body_manipulate:
										COLON::
										tokenInstance:
											tokenName:
												NAME:statRange
											body_element:
												body_line:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:heroStatName
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:atom
																									ACCESS:->
																									name_var:
																										exact:
																											WILD:hero_stats
																	group:
																		name_var:
																			variable:
																				variable_names:toLowerCase
																		parameters:
																	DOT:.
													SEMICOLON:;
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										exact:
																											WILD:left
																									name_var:
																										variable:
																											variable_names:atom
																									ACCESS:->
														variableName:
															name_var:
																variable:
																	variable_names:leftBound
														typeName:
															type_var:
																class:
																	class_variable_names:String
											body_element:
												body_conditional:
													as_body:
														body_element:
															body_line:
																SEMICOLON:;
																variable_assignment:
																	name_var:
																		variable:
																			variable_names:rightBound
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:leftBound
																	EQUALS:=
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
													conditional:
														ELSE:else
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:rightBound
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
														body_call:
															group:
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:getIntegerBetween
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:rightBound
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:leftBound
																												DOT:.
																												group:
																													name_var:
																														variable:
																															variable_names:Range
																								name_var:
																									variable:
																										variable_names:setValue
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:heroStatName
																							DOT:.
																							DOT:.
																name_var:
																	variable:
																		variable_names:appendToBody
														OPERATOR:->*.
											COLON::
											body_element:
												body_conditional:
													body_statement:
														OPERATOR:!= 
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:atom
																		name_var:
																			exact:
																				WILD:right
																		ACCESS:->
													conditional:
														IF:if
													as_body:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																SEMICOLON:;
																variable_assignment:
																	name_var:
																		variable:
																			variable_names:rightBound
																	EQUALS:=
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													exact:
																														WILD:left
																												name_var:
																													variable:
																														variable_names:atom
																												ACCESS:->
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										variableName:
											NAME:atom
										name_var:
											variable:
												variable_names:element
								body_element:
									NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:declarationToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					typeName:
						CLASS_TYPE:Class 
					methodName:
						name_var:
							variable:
								variable_names:declaration
					inner:
						IN:>
			packageName:
				name_var:
					exact:
						WILD:entities
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
NEWLINE:$\n
SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	className:
		NAME:Generator
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	COLON::
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:generation
				BACKSLASH:\
	HID:<
	DOT:.
NEWLINE:$\n
anonymous_class:
	HID:<
	DOT:.
	className:
		NAME:HashMap
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	SEMICOLON:;
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
NEWLINE:$\n
anonymous_class:
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	COLON::
	HID:<
	className:
		NAME:IParser
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	SEMICOLON:;
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	DOT:.
SEMICOLON:;
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Conditions
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			body_line:
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:root
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								DOT:.
								group:
									parameters:
									name_var:
										variable:
											variable_names:getRoot
								group:
									name_var:
										variable:
											variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						group:
							name_var:
								variable:
									variable_names:Relationship
						DOT:.
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Entity
						DOT:.
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						group:
							name_var:
								variable:
									variable_names:Items
						DOT:.
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Tile
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
			variableName:
				name_var:
					variable:
						variable_names:data
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:../Questineer/src
				SEMICOLON:;
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Skills
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:output
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			body_manipulate:
				variableName:
					NAME:imports
				COLON::
				tokenInstance:
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												variable_names:importAny
												BACKSLASH:\
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
							SEMICOLON:;
					tokenName:
						NAME:import_any
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:root
		methodName:
			name_var:
				variable:
					variable_names:generate
		inner:
			IN:>
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Aspects
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Environment
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:root
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								tokenName:
									NAME:IMPORT_EVENT
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_manipulate:
										COLON::
										variableName:
											NAME:element
										name_var:
											variable:
												variable_names:import_events
										tokenInstance:
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:event_declaration
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:declaration
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:element
															group:
																name_var:
																	variable:
																		variable_names:Events
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:imports
							COLON::
							variableName:
								NAME:import_events
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:import_any
				COLON::
				variableName:
					NAME:imports
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	className:
		NAME:GeneralTokens
	HID:<
	SEMICOLON:;
SEMICOLON:;
SEMICOLON:;
anonymous_class:
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	HID:<
	className:
		NAME:Map
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	SEMICOLON:;
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			body_manipulate:
				variableName:
					NAME:import_association
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ASSOCIATION
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							name_var:
								variable:
									variable_names:import_association
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Associations
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:association_declaration
								body_element:
									NEWLINE:$\n
				COLON::
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_map
				tokenInstance:
					tokenName:
						NAME:IMPORT_MAP
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:import_map
										name_var:
											variable:
												variable_names:declaration
									group:
										name_var:
											variable:
												variable_names:Environment
									DOT:.
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:skill_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Skills
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
							name_var:
								variable:
									variable_names:import_skills
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_SKILL
					body_element:
						NEWLINE:$\n
					COLON::
				variableName:
					NAME:import_skills
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_aspects
				tokenInstance:
					tokenName:
						NAME:IMPORT_ASPECT
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_aspects
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Aspects
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:aspect_declaration
								body_element:
									NEWLINE:$\n
					COLON::
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_supports
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_SUPPORT
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Supports
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
								tokenName:
									NAME:support_declaration
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_supports
							COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:importAny
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			body_manipulate:
				tokenInstance:
					tokenName:
						NAME:IMPORT_EVENT
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_events
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Events
										SEMICOLON:;
								COLON::
								tokenName:
									NAME:event_declaration
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_events
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			body_manipulate:
				variableName:
					NAME:import_conditions
				COLON::
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					tokenName:
						NAME:IMPORT_CONDITION
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:condition_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Conditions
							name_var:
								variable:
									variable_names:import_conditions
							COLON::
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					tokenName:
						NAME:IMPORT_ITEM
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_items
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:importAny
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								tokenName:
									NAME:import_any
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_items
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Items
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								tokenName:
									NAME:item_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
					body_element:
						NEWLINE:$\n
					COLON::
				variableName:
					NAME:import_items
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				variableName:
					NAME:import_traits
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_TRAIT
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								tokenName:
									NAME:trait_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Traits
												DOT:.
							COLON::
							name_var:
								variable:
									variable_names:import_traits
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_REASON
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Relationship
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:reason_declaration
								body_element:
									NEWLINE:$\n
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_reason
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_reason
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ACTIVITY
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_activities
							COLON::
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:activity_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Activities
												DOT:.
				variableName:
					NAME:import_activities
				name_var:
					variable:
						variable_names:import_any
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_attacks
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							name_var:
								variable:
									variable_names:import_attacks
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:attack_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Attacks
										SEMICOLON:;
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ATTACK
					body_element:
						NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_AFFINITY
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:affinity_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Affinities
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_affinities
							COLON::
				variableName:
					NAME:import_affinities
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_quests
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							name_var:
								variable:
									variable_names:import_quests
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:quest_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									comment:
										WILD:Quests.declaration(element);
								COLON::
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_QUEST
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:lists
				BACKSLASH:\
	HID:<
	className:
		NAME:Rules
	COLON::
	SEMICOLON:;
method_declaration:
	methodDefinition:
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:HeroStats
							name_var:
								variable:
									variable_names:retainList
						group:
							name_var:
								variable:
									variable_names:context
						DOT:.
		body_element:
			NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:void
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:context
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
		inner:
			IN:>
		COMMA:,
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:root
		methodName:
			name_var:
				variable:
					variable_names:assignListElementNames
		body_element:
			NEWLINE:$\n
variable_declaration:
	EQUALS:=
	variableName:
		name_var:
			variable:
				variable_names:lazyNameParser
	typeName:
		type_var:
			class:
				class_variable_names:RegexParser
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:NAME
				DOT:.
				group:
					name_var:
						variable:
							variable_names:GeneralTokens
	inner:
		IN:>
NEWLINE:$\n
variable_declaration:
	inner:
		IN:>
	variableName:
		name_var:
			variable:
				variable_names:rootParser
	EQUALS:=
	typeName:
		type_var:
			class:
				class_variable_names:IParser
	method_argument:
		body_statement:
			body_call:
				DOT:.
				group:
					name_var:
						variable:
							variable_names:base
				group:
					name_var:
						variable:
							variable_names:Rules
NEWLINE:$\n
anonymous_class:
	DOT:.
	className:
		NAME:LinkedList
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	SEMICOLON:;
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	HID:<
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	SEMICOLON:;
	HID:<
	className:
		NAME:HeroStats
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
comment:
	WILD:import images/image.clws
SEMICOLON:;
anonymous_class:
	DOT:.
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	className:
		NAME:Entry
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	COLON::
	SEMICOLON:;
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
variable_declaration:
	typeName:
		type_var:
			class:
				class_variable_names:List
	inner:
		IN:>
	method_argument:
		body_statement:
			body_call:
				DOT:.
				group:
					name_var:
						variable:
							variable_names:parser
				group:
					name_var:
						variable:
							variable_names:Rules
	EQUALS:=
	variableName:
		name_var:
			variable:
				variable_names:rules
anonymous_class:
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	HID:<
	className:
		NAME:ArrayList
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	DOT:.
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	DOT:.
	className:
		NAME:HashSet
	SEMICOLON:;
	HID:<
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
anonymous_class:
	DOT:.
	className:
		NAME:IToken
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:token
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	HID:<
	DOT:.
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				class_declaration:
					DOT:.
					className:
						variable_names:Tiles
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:environments
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:tileName
								typeName:
									type_var:
										class:
											class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:create
							typeName:
								type_var:
									class:
										class_variable_names:Tile
							body_element:
								NEWLINE:$\n
							static:
								STA:@
					objectType:
						CLASS:class 
					NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					interfaceName:
						type_var:
							class:
								class_variable_names:Tickable
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:super
												DOT:.
												group:
													name_var:
														variable:
															variable_names:isWithin
													parameters:
														method_argument:
															body_statement:
																BACKSLASH:\
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:height
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:4f
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:4f 
																OPERATOR:/
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:width
																OPERATOR:+ 
																OPERATOR:/
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:2.0
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:Math
																	group:
																		name_var:
																			variable:
																				variable_names:PI
																	DOT:.
																OPERATOR:* 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:otherPosition
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0
														COMMA:,
														COMMA:,
														COMMA:,
									RETURN:return 
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:isWithin
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Environment
											ACCESS:->
											type_var:
												class:
													class_variable_names:Position
								variableName:
									name_var:
										exact:
											WILD:otherPosition
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Loaddable
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:numberOfAliveGeneratedEntities
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						WEAK:~
						EQUALS:=
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:5
						variableName:
							name_var:
								exact:
									WILD:limit
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:environments
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:millisSinceLastFrame
								typeName:
									type_var:
										class:
											class_variable_names:Double
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:tick
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													exact:
														variable_names:Math
														BACKSLASH:\
											group:
												parameters:
												name_var:
													variable:
														variable_names:random
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0.05 
										OPERATOR:> 
										body_call:
											group:
												name_var:
													exact:
														WILD:numberOfAliveGeneratedEntities
										OPERATOR:< 
										body_call:
											group:
												name_var:
													exact:
														WILD:limit
										OPERATOR:&& 
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:numberOfAliveGeneratedEntities
													BACKSLASH:\
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													OPERATOR:+= 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Double
													variableName:
														name_var:
															variable:
																variable_names:randomIndex
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:onTickEntityFactories
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:size
																	parameters:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:Math
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:random
															OPERATOR:* 
													EQUALS:=
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:newEntity
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:create
																	parameters:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:(int)(double)randomIndex
																	name_var:
																		variable:
																			variable_names:get
																DOT:.
																group:
																	name_var:
																		exact:
																			WILD:onTickEntityFactories
																DOT:.
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newEntity
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Listener
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Die
																							type_var:
																								class:
																									class_variable_names:Tile
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																				NEW:new 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:setSpawn
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														group:
															name_var:
																variable:
																	variable_names:newEntity
														DOT:.
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:getLocation
															parameters:
														group:
															name_var:
																variable:
																	variable_names:moveTo
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														group:
															name_var:
																variable:
																	variable_names:newEntity
														DOT:.
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
					class_declaration:
						NEWLINE:$\n
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						NEWLINE:$\n
						className:
							variable_names:Listener
						DOT:.
						class_declaration:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Tile
								variableName:
									name_var:
										exact:
											WILD:host
							packageName:
								name_var:
									exact:
										WILD:environments
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									variable_declaration:
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Die
													type_var:
														class:
															class_variable_names:Events
													ACCESS:->
										variableName:
											name_var:
												exact:
													WILD:event
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:listen
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														parameters:
														name_var:
															variable:
																variable_names:decreaseAliveGeneratedEntities
													group:
														name_var:
															exact:
																WILD:host
													DOT:.
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							SEMICOLON:;
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Die
										ACCESS:->
							DOT:.
							objectType:
								CLASS:class 
							NEWLINE:$\n
							className:
								variable_names:Die
						packageName:
							name_var:
								exact:
									WILD:environments
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:decreaseAliveGeneratedEntities
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										BACKSLASH:\
										body_call:
											group:
												name_var:
													exact:
														WILD:numberOfAliveGeneratedEntities
										OPERATOR:-= 
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1
					DOT:.
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:get
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														exact:
															WILD:associations
												group:
													name_var:
														variable:
															variable_names:get
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:factory
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
									SEMICOLON:;
									RETURN:return 
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Association
											ACCESS:->
											type_var:
												class:
													class_variable_names:Id
								variableName:
									name_var:
										variable:
											variable_names:id
							COMMA:,
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Factory
											type_var:
												class:
													class_variable_names:Association
								variableName:
									name_var:
										variable:
											variable_names:factory
							typeName:
								type_var:
									class:
										class_variable_names:Association
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:load
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					variable_declaration:
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1f
						variableName:
							name_var:
								exact:
									WILD:height
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Float
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:createMap
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:Association
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Id
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Association
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Factory
																ACCESS:->
																name_var:
																	variable:
																		variable_names:Entity
										variableName:
											name_var:
												variable:
													variable_names:entityFactory
										EQUALS:=
										typeName:
											CLASS_TYPE:Class 
									SEMICOLON:;
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Tile
									methodName:
										ADD:+=
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:onTickEntityFactories
										WEAK:~
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:entityFactory
													class_variable_names:List
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															type_var:
																class:
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:entityFactory
																	class_variable_names:ArrayList
														parameters:
													NEWLINE:$\n
												NEWLINE:$\n
										EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
								variableName:
									name_var:
										variable:
											variable_names:data
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												exact:
													WILD:onLoadEntityFactories
										WEAK:~
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:entityFactory
													class_variable_names:List
										method_argument:
											body_statement:
												NEWLINE:$\n
												BACKSLASH:\
												body_call:
													NEWLINE:$\n
													group:
														NEW:new 
														parameters:
														typeName:
															type_var:
																class:
																	class_variable_names:ArrayList
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:entityFactory
									type_var:
										class:
											class_variable_names:Tile
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Tile
									methodName:
										ADD:+=
									variable_declaration:
										WEAK:~
										typeName:
											type_var:
												access_multi:
													type_var:
														exact:
															variable_names:IdMap
															BACKSLASH:\
													type_var:
														exact:
															BACKSLASH:\
															variable_names:_Association
													ACCESS:->
										variableName:
											name_var:
												exact:
													WILD:associations
					NEWLINE:$\n
					variable_declaration:
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1f
						typeName:
							type_var:
								class:
									class_variable_names:Float
						variableName:
							name_var:
								exact:
									WILD:width
						EQUALS:=
					className:
						variable_names:Tile
					parentName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Position
								ACCESS:->
								type_var:
									class:
										class_variable_names:Environment
					SEMICOLON:;
					class_declaration:
						method_declaration:
							methodDefinition:
								typeName:
									type_var:
										class:
											class_variable_names:Tile
								methodName:
									name_var:
										variable:
											variable_names:create
						objectType:
							INTERFACE:interface 
						packageName:
							name_var:
								exact:
									WILD:environments
						NEWLINE:$\n
						className:
							variable_names:Factory
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						DOT:.
						NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
				NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
variable_declaration:
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				DOT:.
				group:
					name_var:
						variable:
							variable_names:Listnames
				group:
					name_var:
						variable:
							variable_names:parser
	typeName:
		type_var:
			class:
				class_variable_names:List
	variableName:
		name_var:
			variable:
				variable_names:listnames
	inner:
		IN:>
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				variable_declaration:
					EQUALS:=
					WEAK:~
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:true
					variableName:
						name_var:
							variable:
								variable_names:isFirst
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
				SEMICOLON:;
		methodName:
			name_var:
				variable:
					variable_names:getTypeName
		typeName:
			type_var:
				class:
					class_variable_names:String
		body_element:
			body_return:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
				SEMICOLON:;
				RETURN:return 
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:StringBuilder
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									parameters:
									typeName:
										type_var:
											class:
												class_variable_names:StringBuilder
									NEW:new 
					variableName:
						name_var:
							variable:
								variable_names:nameBuilder
				SEMICOLON:;
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:nameToken
			typeName:
				type_var:
					class:
						class_variable_names:IToken
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:typeName
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										variable_assignment:
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											name_var:
												variable:
													variable_names:isFirst
							conditional:
								ELSE:else
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:nameBuilder
									DOT:.
									group:
										name_var:
											variable:
												variable_names:append
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:element
																	CAMEL:^
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										name_var:
											variable:
												variable_names:isFirst
								OPERATOR:==
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
												DOT:.
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
				COLON::
				name_var:
					variable:
						variable_names:nameToken
				variableName:
					NAME:element
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	COLON::
	SEMICOLON:;
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	className:
		NAME:Iterator
anonymous_class:
	className:
		NAME:StringBuilder
	DOT:.
	COLON::
	SEMICOLON:;
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lang
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
variable_declaration:
	EQUALS:=
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:String
	variableName:
		name_var:
			variable:
				variable_names:packageName
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						exact:
							WILD:com.rem.qstnr
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_manipulate:
						type_var:
							class:
								class_variable_names:inputClass
						methodName:
							ADD:+=
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:typeName
							variableName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														access:
															name_var:
																exact:
																	WILD:variableName
															ACCESS:->
															name_var:
																variable:
																	variable_names:variableHeaderToken
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:variableHeaderToken
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				COMMA:,
				typeName:
					type_var:
						class:
							class_variable_names:void
				body_element:
					body_conditional:
						conditional:
							IF:if
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									SEMICOLON:;
									THROW:throw 
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:Generator
														BACKSLASH:\
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableHeaderToken
											DOT:.
										body_call:
											group:
												name_var:
													concat:
														name_var:
															exact:
																WILD:!
														name_var:
															exact:
																WILD:Could not find type:
														PLUS:+
														PLUS:+
														name_var:
															variable:
																variable_names:typeName
										OPERATOR:+ 
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
							OPERATOR:== 
				inner:
					IN:>
				body_element:
					body_line:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													variable_names:getTypeName
													BACKSLASH:\
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableHeaderToken
																		name_var:
																			exact:
																				WILD:type_name
							variableName:
								name_var:
									variable:
										variable_names:typeName
							EQUALS:=
						SEMICOLON:;
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:inputClass
					typeName:
						CLASS_TYPE:Class 
				methodName:
					name_var:
						variable:
							variable_names:addVariableHeader
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:type
							typeName:
								CONTEXT_TYPE:Context 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:inputClass
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
										DOT:.
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
											name_var:
												variable:
													variable_names:getClassContext
										DOT:.
							EQUALS:=
						SEMICOLON:;
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:misc
			className:
				variable_names:Tickable
			DOT:.
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:tick
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Double
						variableName:
							name_var:
								exact:
									WILD:millisSinceLastFrame
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			NEWLINE:$\n
		method_declaration:
			methodDefinition:
				COMMA:,
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				variable_declaration:
					typeName:
						CONTEXT_TYPE:Context 
					variableName:
						name_var:
							variable:
								variable_names:context
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						conditional:
							ELSE:else
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													variable_declaration:
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						name_var:
																							exact:
																								WILD:variableName
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variable_header
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
													SEMICOLON:;
									SEMICOLON:;
									RETURN:return 
				methodName:
					name_var:
						variable:
							variable_names:getVariableDeclaration
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						conditional:
							IF:if
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							body_call:
								group:
									name_var:
										access:
											name_var:
												exact:
													WILD:statement
											name_var:
												variable:
													variable_names:variableDeclarationToken
											ACCESS:->
							OPERATOR:!= 
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														EQUALS:=
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						name_var:
																							exact:
																								WILD:variable_header
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getStatement
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															exact:
																																WILD:statement
																														name_var:
																															variable:
																																variable_names:variableDeclarationToken
																														ACCESS:->
							body_element:
								NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
											name_var:
												variable:
													variable_names:getClassContext
										group:
											name_var:
												variable:
													variable_names:context
							EQUALS:=
							typeName:
								CONTEXT_TYPE:Context 
							variableName:
								name_var:
									variable:
										variable_names:type
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:typeName
							typeName:
								type_var:
									class:
										class_variable_names:String
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													variable_names:getTypeName
													BACKSLASH:\
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:variable_header
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:type_name
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableDeclarationToken
							EQUALS:=
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:variableDeclarationToken
					typeName:
						type_var:
							class:
								class_variable_names:IToken
				body_element:
					body_conditional:
						conditional:
							IF:if
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									SEMICOLON:;
									THROW:throw 
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Generator
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableDeclarationToken
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
											DOT:.
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													concat:
														name_var:
															variable:
																variable_names:typeName
														name_var:
															exact:
																WILD:!
														PLUS:+
														name_var:
															exact:
																WILD:Could not find type:
														PLUS:+
							body_element:
								NEWLINE:$\n
				inner:
					IN:>
				typeName:
					STATEMENT_TYPE:Statement
		class_declaration:
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			objectType:
				INTERFACE:interface 
			className:
				variable_names:Listenable
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:listen
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Event
						variableName:
							name_var:
								exact:
									WILD:event
			NEWLINE:$\n
			NEWLINE:$\n
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:misc
		class_declaration:
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_assignment:
								EQUALS:=
								name_var:
									exact:
										WILD:left
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:floatCast
																			name_var:
																				exact:
																					WILD:initialLeft
																			PLUS:+
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:initialLeft
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								name_var:
									exact:
										WILD:right
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialRight
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:initialRight
						typeName:
							type_var:
								class:
									class_variable_names:Float
					body_element:
						NEWLINE:$\n
					COMMA:,
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Range
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Double
					body_element:
						body_line:
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:right
										OPERATOR:- 
										body_call:
											group:
												name_var:
													exact:
														WILD:left
								variableName:
									name_var:
										exact:
											WILD:difference
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Float
							SEMICOLON:;
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:difference
									OPERATOR:* 
									OPERATOR:+ 
									body_call:
										group:
											name_var:
												exact:
													WILD:left
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:Math
										group:
											name_var:
												variable:
													variable_names:random
											parameters:
										DOT:.
							SEMICOLON:;
							RETURN:return 
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:(float)(int)
				typeName:
					type_var:
						class:
							class_variable_names:String
				EQUALS:=
				inner:
					IN:>
				variableName:
					name_var:
						variable:
							variable_names:floatCast
			packageName:
				name_var:
					exact:
						WILD:misc
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialLeft
								name_var:
									exact:
										WILD:left
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialRight
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:initialLeft
						typeName:
							type_var:
								class:
									class_variable_names:Float
					body_element:
						NEWLINE:$\n
					methodName:
						NAME:
							AS_METHOD_NAME:*
					COMMA:,
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:right
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				variable:
																					variable_names:floatCast
																			name_var:
																				exact:
																					WILD:initialRight
								EQUALS:=
							SEMICOLON:;
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getModifier
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Range
														type_var:
															class:
																class_variable_names:Modifier
											NEW:new 
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		variable_names:getRandom
																		BACKSLASH:\
																parameters:
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							access_multi:
								ACCESS:->
								type_var:
									class:
										class_variable_names:Entity
								type_var:
									class:
										class_variable_names:Modifier
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Float
				variableName:
					name_var:
						exact:
							WILD:left
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
			SEMICOLON:;
			className:
				variable_names:Range
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
				typeName:
					type_var:
						class:
							class_variable_names:Float
				variableName:
					name_var:
						exact:
							WILD:right
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						NAME:
							AS_METHOD_NAME:*
					typeName:
						type_var:
							class:
								class_variable_names:Range
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialLeft
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:left
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:initialLeft
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:initialRight
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								name_var:
									exact:
										WILD:right
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:initialRight
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
								EQUALS:=
					COMMA:,
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:(int)(double)result
					COMMA:,
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:bottom
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:top
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:bottom
										body_call:
											group:
												name_var:
													exact:
														WILD:top
										OPERATOR:- 
								variableName:
									name_var:
										exact:
											WILD:difference
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								method_argument:
									body_statement:
										OPERATOR:* 
										body_call:
											group:
												name_var:
													exact:
														WILD:difference
										body_call:
											group:
												name_var:
													exact:
														variable_names:Math
														BACKSLASH:\
											DOT:.
											group:
												name_var:
													variable:
														variable_names:random
												parameters:
										body_call:
											group:
												name_var:
													exact:
														WILD:bottom
										OPERATOR:+ 
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Double
								variableName:
									name_var:
										exact:
											WILD:result
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getIntegerBetween
			objectType:
				CLASS:class 
			SEMICOLON:;
			class_declaration:
				interfaceName:
					type_var:
						access_multi:
							ACCESS:->
							type_var:
								class:
									class_variable_names:Entity
							type_var:
								class:
									class_variable_names:Modifier
				variable_declaration:
					inner:
						IN:>
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											WILD:(float)(double)
					variableName:
						name_var:
							variable:
								variable_names:doubleCast
					typeName:
						type_var:
							class:
								class_variable_names:String
					EQUALS:=
				DOT:.
				variable_declaration:
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0.0
					typeName:
						type_var:
							class:
								class_variable_names:Double
					variableName:
						name_var:
							exact:
								WILD:value
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									exact:
										WILD:inputEntity
						methodName:
							name_var:
								variable:
									variable_names:use
						body_element:
							body_return:
								RETURN:return 
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:value
																			name_var:
																				variable:
																					variable_names:doubleCast
																			PLUS:+
						typeName:
							type_var:
								class:
									class_variable_names:Float
						body_element:
							NEWLINE:$\n
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				SEMICOLON:;
				SEMICOLON:;
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:decrease
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:void
						body_element:
							body_line:
								variable_assignment:
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:value
											OPERATOR:- 
											body_call:
												group:
													name_var:
														exact:
															WILD:amount
									name_var:
										exact:
											WILD:value
								SEMICOLON:;
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:amount
							typeName:
								type_var:
									class:
										class_variable_names:Float
						body_element:
							NEWLINE:$\n
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									exact:
										WILD:inputEntity
						COMMA:,
				objectType:
					CLASS:class 
				packageName:
					name_var:
						exact:
							WILD:misc
				NEWLINE:$\n
				parentName:
					type_var:
						exact:
							variable_names:Object
							BACKSLASH:\
				NEWLINE:$\n
				className:
					variable_names:Modifier
				NEWLINE:$\n
				NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			inner:
				IN:>
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:declaredCritSet
			method_argument:
				body_statement:
					body_call:
						group:
							parameters:
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							NEW:new 
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
		class_declaration:
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				CLASS:class 
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			className:
				variable_names:ListMaps
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				variable_declaration:
					typeName:
						CONTEXT_TYPE:Context 
					variableName:
						name_var:
							variable:
								variable_names:context
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:elementToken
				body_element:
					body_manipulate:
						COLON::
						tokenInstance:
							COLON::
							tokenName:
								NAME:return_statement
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_return:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:context
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:getStatement
													SEMICOLON:;
													RETURN:return 
									SEMICOLON:;
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						tokenInstance:
							NEWLINE:$\n
							tokenName:
								NAME:variable_declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getVariableDeclaration
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
									SEMICOLON:;
						name_var:
							variable:
								variable_names:elementToken
						tokenInstance:
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:imposition
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:subject
									SEMICOLON:;
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	exact:
																		WILD:PLUS
																ACCESS:->
																name_var:
																	exact:
																		WILD:imposition
																name_var:
																	variable:
																		variable_names:element
												OPERATOR:!= 
												OPERATOR:|| 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:element
																name_var:
																	exact:
																		WILD:imposition
																ACCESS:->
																ACCESS:->
																name_var:
																	exact:
																		WILD:IMPOSE
												OPERATOR:!= 
										variableName:
											name_var:
												variable:
													variable_names:doom
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:getImposition
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:doom
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:imposition
																				name_var:
																					variable:
																						variable_names:element
												group:
													name_var:
														variable:
															variable_names:Entity
												DOT:.
									RETURN:return 
							COLON::
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getIfStatement
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
							tokenName:
								NAME:if_statement
						variableName:
							NAME:element
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:subject
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:variable_call
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:element
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:acquisition
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:element
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getAcquisition
									RETURN:return 
							NEWLINE:$\n
							tokenName:
								NAME:acquisition
						tokenInstance:
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																						COMMA:,
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:context
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getStatement
													SEMICOLON:;
									SEMICOLON:;
							NEWLINE:$\n
							tokenName:
								NAME:statement
							body_element:
								NEWLINE:$\n
				typeName:
					STATEMENT_TYPE:Statement
				inner:
					IN:>
				methodName:
					name_var:
						variable:
							variable_names:getBodyElement
				COMMA:,
		variable_declaration:
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:declaredMapSet
			EQUALS:=
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			method_argument:
				body_statement:
					body_call:
						group:
							parameters:
							NEW:new 
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
		SEMICOLON:;
		NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:declaredListSet
			inner:
				IN:>
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			DOT:.
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:use
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:user
						typeName:
							type_var:
								class:
									class_variable_names:Entity
			objectType:
				INTERFACE:interface 
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Float
					methodName:
						name_var:
							variable:
								variable_names:getRange
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:user
						typeName:
							type_var:
								class:
									class_variable_names:Entity
			DOT:.
			class_declaration:
				FORSLASH:/
				objectType:
					CLASS:class 
				FORSLASH:/
				className:
					variable_names:Id
				NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getId
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Usable
								type_var:
									class:
										class_variable_names:Id
								ACCESS:->
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			className:
				variable_names:Usable
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getTargetCriteria
					typeName:
						type_var:
							exact:
								variable_names:EntityCriteria
								BACKSLASH:\
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			NEWLINE:$\n
		class_declaration:
			objectType:
				INTERFACE:interface 
			DOT:.
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:Source
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			packageName:
				name_var:
					exact:
						WILD:interfaces
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			NEWLINE:$\n
			DOT:.
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:load
					typeName:
						type_var:
							class:
								class_variable_names:void
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			className:
				variable_names:Loaddable
			packageName:
				name_var:
					exact:
						WILD:misc
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			className:
				variable_names:Criteria
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			IN:>
			templateTypeName:
				NAME:TypeName
			NEWLINE:$\n
			HID:<
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:TypeName
						variableName:
							name_var:
								exact:
									WILD:candidate
					methodName:
						name_var:
							variable:
								variable_names:satisfies
					body_element:
						body_return:
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:false
							RETURN:return 
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
		SEMICOLON:;
		NEWLINE:$\n
anonymous_class:
	className:
		NAME:RegexParser
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	HID:<
	COLON::
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	DOT:.
NEWLINE:$\n
anonymous_class:
	DOT:.
	HID:<
	className:
		NAME:ListEntry
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	COLON::
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:generation
				BACKSLASH:\
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	HID:<
	COLON::
	DOT:.
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	className:
		NAME:File
	packageName:
		name_var:
			exact:
				variable_names:io
				BACKSLASH:\
anonymous_class:
	DOT:.
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	SEMICOLON:;
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	className:
		NAME:ParseContext
	COLON::
anonymous_class:
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	className:
		NAME:Listnames
	COLON::
	SEMICOLON:;
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	SEMICOLON:;
	HID:<
	className:
		NAME:List
	DOT:.
NEWLINE:$\n
method_declaration:
	methodDefinition:
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:data
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
		methodName:
			name_var:
				variable:
					variable_names:setup
		inner:
			IN:>
anonymous_class:
	SEMICOLON:;
	DOT:.
	COLON::
	className:
		NAME:Set
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	className:
		NAME:Arrays
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	HID:<
	DOT:.
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n<<