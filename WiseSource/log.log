environments.clws>>
NEWLINE:$\n
anonymous_class:
	className:
		NAME:Iterator
	SEMICOLON:;
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	COLON::
anonymous_class:
	COLON::
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:javax
				BACKSLASH:\
	className:
		NAME:JFrame
	SEMICOLON:;
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:swing
				BACKSLASH:\
anonymous_class:
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	SEMICOLON:;
	HID:<
	className:
		NAME:Comparator
comment:
	WILD:import images/image.clws
NEWLINE:$\n
SEMICOLON:;
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:setup
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
			variableName:
				name_var:
					variable:
						variable_names:data
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:String
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:<T>T
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:TT
		variable_declaration:
			inner:
				IN:>
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
							NEW:new 
			variableName:
				name_var:
					variable:
						variable_names:declaredMapSet
		NEWLINE:$\n
		class_declaration:
			objectType:
				INTERFACE:interface 
			className:
				variable_names:Source
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
		SEMICOLON:;
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							parameters:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:HashSet
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
			EQUALS:=
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:declaredCritSet
		SEMICOLON:;
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			templateTypeName:
				NAME:TypeName
			packageName:
				name_var:
					exact:
						WILD:interfaces
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			IN:>
			method_declaration:
				methodDefinition:
					variable_declaration:
						typeName:
							type_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:TypeName
						variableName:
							name_var:
								exact:
									WILD:event
					methodName:
						name_var:
							variable:
								variable_names:listen
					typeName:
						type_var:
							class:
								class_variable_names:void
			objectType:
				INTERFACE:interface 
			NEWLINE:$\n
			className:
				variable_names:Listenable
			HID:<
			NEWLINE:$\n
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:declaredListSet
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							parameters:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:HashSet
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
		SEMICOLON:;
anonymous_class:
	className:
		NAME:Scanner
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	COLON::
	DOT:.
NEWLINE:$\n
variable_declaration:
	typeName:
		type_var:
			class:
				class_variable_names:List
	variableName:
		name_var:
			variable:
				variable_names:listnames
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				DOT:.
				group:
					name_var:
						variable:
							variable_names:parser
				group:
					name_var:
						variable:
							variable_names:Listnames
	inner:
		IN:>
NEWLINE:$\n
NEWLINE:$\n
variable_declaration:
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:Rules
				group:
					name_var:
						variable:
							variable_names:parser
				DOT:.
	variableName:
		name_var:
			variable:
				variable_names:rules
	typeName:
		type_var:
			class:
				class_variable_names:List
	inner:
		IN:>
	EQUALS:=
variable_declaration:
	variableName:
		name_var:
			variable:
				variable_names:packageName
	EQUALS:=
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:String
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						exact:
							WILD:com.rem.qstnr
variable_declaration:
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:RegexParser
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:GeneralTokens
				group:
					name_var:
						variable:
							variable_names:NAME
				DOT:.
	variableName:
		name_var:
			variable:
				variable_names:lazyNameParser
	EQUALS:=
imports:
	IMPORT_CLASS:
		class_declaration:
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												DOT:.
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		NEW:new 
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								OPERATOR:== 
								body_call:
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
										name_var:
											variable:
												variable_names:containsKey
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:idMap
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:id
											name_var:
												variable:
													variable_names:get
										DOT:.
										DOT:.
										group:
											parameters:
											name_var:
												variable:
													variable_names:getValue
					methodName:
						name_var:
							variable:
								variable_names:get
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:id
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
									type_var:
										class:
											class_variable_names:PaymentType
									type_var:
										class:
											class_variable_names:Treasury
					body_element:
						NEWLINE:$\n
			class_declaration:
				className:
					variable_names:Cost
				packageName:
					name_var:
						exact:
							WILD:overview
				NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				objectType:
					CLASS:class 
				method_declaration:
					methodDefinition:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:treasury
							typeName:
								type_var:
									class:
										class_variable_names:Treasury
						body_element:
							NEWLINE:$\n
						body_element:
							body_conditional:
								conditional:
									IF:if
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:isFree
											parameters:
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:true
											RETURN:return 
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:canPay
						body_element:
							body_conditional:
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											RETURN:return 
											SEMICOLON:;
											method_argument:
												body_statement:
													OPERATOR:>= 
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:getAmount
													body_call:
														group:
															name_var:
																variable:
																	variable_names:treasury
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:getType
																						BACKSLASH:\
																				parameters:
														DOT:.
									body_element:
										NEWLINE:$\n
								conditional:
									ELSE:else
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Reward
									ACCESS:->
									type_var:
										class:
											class_variable_names:Treasury
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getReward
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								SEMICOLON:;
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
				NEWLINE:$\n
				NEWLINE:$\n
				DOT:.
				method_declaration:
					methodDefinition:
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1
								SEMICOLON:;
								RETURN:return 
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						methodName:
							name_var:
								variable:
									variable_names:getAmount
						body_element:
							NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								RETURN:return 
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getType
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Treasury
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
									ACCESS:->
									type_var:
										class:
											class_variable_names:PaymentType
						body_element:
							NEWLINE:$\n
				DOT:.
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
								RETURN:return 
								SEMICOLON:;
						methodName:
							name_var:
								variable:
									variable_names:isFree
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
				NEWLINE:$\n
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				packageName:
					name_var:
						exact:
							WILD:treasuries
			DOT:.
			class_declaration:
				FORSLASH:/
				NEWLINE:$\n
				SEMICOLON:;
				class_declaration:
					FORSLASH:/
					NEWLINE:$\n
					className:
						variable_names:Id
					objectType:
						CLASS:class 
					FORSLASH:/
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:String
					variableName:
						name_var:
							variable:
								variable_names:shortForm
				SEMICOLON:;
				objectType:
					CLASS:class 
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:longForm
					typeName:
						type_var:
							class:
								class_variable_names:String
				className:
					variable_names:PaymentType
				NEWLINE:$\n
				NEWLINE:$\n
				FORSLASH:/
				NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				NEWLINE:$\n
				objectType:
					CLASS:class 
				FORSLASH:/
				className:
					variable_names:PaymentTypes
				FORSLASH:/
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			objectType:
				CLASS:class 
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					COMMA:,
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:shortForms
									group:
										name_var:
											variable:
												variable_names:put
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:shortForm
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
											COMMA:,
					inner:
						IN:>
					COMMA:,
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:longForm
						typeName:
							type_var:
								class:
									class_variable_names:String
					typeName:
						type_var:
							class:
								class_variable_names:void
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:shortForm
						typeName:
							type_var:
								class:
									class_variable_names:String
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:longForms
									DOT:.
									group:
										name_var:
											variable:
												variable_names:put
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:longForm
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:typeName
					body_element:
						body_manipulate:
							class_declaration:
								NEWLINE:$\n
								FORSLASH:/
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:String
										methodName:
											name_var:
												variable:
													variable_names:getShortForm
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:shortForm
												RETURN:return 
										body_element:
											NEWLINE:$\n
								className:
									variable_names:typeName
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:PaymentType
												ACCESS:->
												ACCESS:->
												type_var:
													class:
														class_variable_names:Treasury
									variableName:
										name_var:
											variable:
												variable_names:id
									static:
										STA:@
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Treasury
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:PaymentType
																type_var:
																	class:
																		class_variable_names:Id
													NEW:new 
													parameters:
								FORSLASH:/
								SEMICOLON:;
								NEWLINE:$\n
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										typeName:
											type_var:
												class:
													class_variable_names:String
										methodName:
											name_var:
												variable:
													variable_names:getLongForm
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:longForm
												SEMICOLON:;
								NEWLINE:$\n
								objectType:
									CLASS:class 
							methodName:
								ADD:+=
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Treasury
									ACCESS:->
									type_var:
										class:
											class_variable_names:PaymentTypes
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:longForms
				method_argument:
					body_statement:
						body_call:
							group:
								parameters:
								NEW:new 
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashMap
				inner:
					IN:>
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:Map
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
								template_parameter:
									type_var:
										class:
											class_variable_names:String
			className:
				variable_names:Treasury
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:setup
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								typeName:
									CLASS_TYPE:Class 
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:PaymentType
														name_var:
															variable:
																variable_names:Treasury
														ACCESS:->
														name_var:
															variable:
																variable_names:Id
														ACCESS:->
								variableName:
									name_var:
										variable:
											variable_names:idClass
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Treasury
							methodName:
								ADD:+=
							variable_declaration:
								WEAK:~
								method_argument:
									body_statement:
										NEWLINE:$\n
										body_call:
											group:
												typeName:
													type_var:
														class:
															class_variable_names:HashMap
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:idClass
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Int
																COMMA:,
												parameters:
												NEW:new 
											NEWLINE:$\n
											NEWLINE:$\n
										NEWLINE:$\n
								variableName:
									name_var:
										exact:
											WILD:idMap
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Map
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:idClass
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:Int
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:data
						typeName:
							type_var:
								class:
									class_variable_names:ParseContext
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:amount
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		NEW:new 
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														COMMA:,
												group:
													name_var:
														exact:
															WILD:idMap
												DOT:.
										SEMICOLON:;
							body_statement:
								OPERATOR:== 
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
									group:
										name_var:
											exact:
												WILD:idMap
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
									type_var:
										class:
											class_variable_names:Treasury
									type_var:
										class:
											class_variable_names:PaymentType
						variableName:
							name_var:
								variable:
									variable_names:id
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
									DOT:.
									group:
										name_var:
											variable:
												variable_names:setValue
										parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:idMap
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
														group:
															name_var:
																variable:
																	variable_names:getValue
															parameters:
													OPERATOR:+ 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:amount
													BACKSLASH:\
									group:
										name_var:
											variable:
												variable_names:get
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					COMMA:,
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									DOT:.
									group:
										name_var:
											variable:
												variable_names:setValue
										parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:idMap
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getValue
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
															name_var:
																variable:
																	variable_names:get
														DOT:.
													OPERATOR:+ 
													BACKSLASH:\
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
									group:
										name_var:
											variable:
												variable_names:get
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
									group:
										name_var:
											exact:
												WILD:idMap
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
									group:
										name_var:
											exact:
												WILD:idMap
							conditional:
								IF:if
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		NEW:new 
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
														COMMA:,
												DOT:.
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Id
									ACCESS:->
									type_var:
										class:
											class_variable_names:PaymentType
									type_var:
										class:
											class_variable_names:Treasury
									ACCESS:->
						variableName:
							name_var:
								variable:
									variable_names:id
			method_declaration:
				methodDefinition:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:typeNameToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:get
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:typeNameToken
																					CAMEL:^
																					name_var:
																						exact:
																							WILD:payment_short_type_names
													group:
														name_var:
															variable:
																variable_names:shortForms
													DOT:.
										RETURN:return 
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											access:
												ACCESS:->
												name_var:
													exact:
														WILD:payment_short_type_names
												name_var:
													variable:
														variable_names:typeNameToken
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:String
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getTypeName
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										SEMICOLON:;
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:typeNameToken
																ACCESS:->
																CAMEL:^
																name_var:
																	exact:
																		WILD:item_names
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											access:
												name_var:
													exact:
														WILD:item_names
												name_var:
													variable:
														variable_names:typeNameToken
												ACCESS:->
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeNameToken
												ACCESS:->
												name_var:
													exact:
														WILD:payment_long_type_names
								OPERATOR:!= 
							as_body:
								body_element:
									body_return:
										SEMICOLON:;
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:longForms
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:payment_long_type_names
																					CAMEL:^
																					name_var:
																						variable:
																							variable_names:typeNameToken
														name_var:
															variable:
																variable_names:get
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:treasuries
			NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			class_declaration:
				DOT:.
				NEWLINE:$\n
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:treasuries
				packageName:
					name_var:
						exact:
							WILD:overview
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
								RETURN:return 
								SEMICOLON:;
						methodName:
							name_var:
								variable:
									variable_names:isPlacable
						body_element:
							NEWLINE:$\n
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				DOT:.
				className:
					variable_names:Reward
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:getPlacable
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
								RETURN:return 
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Menu
									ACCESS:->
									type_var:
										class:
											class_variable_names:Placable
				objectType:
					CLASS:class 
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:typeToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:longForm
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:typeName
																				name_var:
																					variable:
																						variable_names:typeToken
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:shortForm
																				ACCESS:->
														COMMA:,
													name_var:
														exact:
															variable_names:paymentTypeDec
															BACKSLASH:\
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								body_call:
									group:
										name_var:
											access:
												name_var:
													exact:
														WILD:typeName
												ACCESS:->
												name_var:
													variable:
														variable_names:typeToken
								OPERATOR:!= 
							conditional:
								IF:if
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:paymentTypeDec
															BACKSLASH:\
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				CAMEL:^
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:longForm
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:shortForm
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
																				CAMEL:^
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				CAMEL:^
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:longForm
										SEMICOLON:;
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								typeName:
									type_var:
										class:
											template_parameters:
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashMap
								NEW:new 
								parameters:
				inner:
					IN:>
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
								template_parameter:
									type_var:
										class:
											class_variable_names:String
							class_variable_names:Map
				variableName:
					name_var:
						variable:
							variable_names:shortForms
				EQUALS:=
			packageName:
				name_var:
					exact:
						WILD:overview
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	DOT:.
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	className:
		NAME:IParser
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	DOT:.
	HID:<
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	className:
		NAME:Listnames
	SEMICOLON:;
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:lists
				BACKSLASH:\
	COLON::
NEWLINE:$\n
variable_declaration:
	inner:
		IN:>
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				DOT:.
				group:
					name_var:
						variable:
							variable_names:Rules
				group:
					name_var:
						variable:
							variable_names:base
	variableName:
		name_var:
			variable:
				variable_names:rootParser
	typeName:
		type_var:
			class:
				class_variable_names:IParser
SEMICOLON:;
anonymous_class:
	COLON::
	HID:<
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	className:
		NAME:Set
	SEMICOLON:;
NEWLINE:$\n
SEMICOLON:;
anonymous_class:
	HID:<
	DOT:.
	className:
		NAME:ListEntry
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	COLON::
	DOT:.
	DOT:.
NEWLINE:$\n
anonymous_class:
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:lists
				BACKSLASH:\
	className:
		NAME:GeneralTokens
	COLON::
	SEMICOLON:;
NEWLINE:$\n
imports:
	IMPORT_CLASS:
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
NEWLINE:$\n
method_declaration:
	methodDefinition:
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
			variableName:
				name_var:
					variable:
						variable_names:context
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:context
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:HeroStats
												parameters:
							name_var:
								variable:
									variable_names:retainList
		inner:
			IN:>
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:root
		COMMA:,
		methodName:
			name_var:
				variable:
					variable_names:assignListElementNames
NEWLINE:$\n
anonymous_class:
	HID:<
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	className:
		NAME:LinkedList
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	SEMICOLON:;
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	HID:<
	className:
		NAME:RegexParser
	DOT:.
	SEMICOLON:;
	COLON::
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
imports:
	IMPORT_CLASS:
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			DOT:.
			class_declaration:
				variable_declaration:
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					static:
						STA:@
					typeName:
						type_var:
							class:
								class_variable_names:Gui
					EQUALS:=
					variableName:
						name_var:
							variable:
								variable_names:gui
				NEWLINE:$\n
				NEWLINE:$\n
				SEMICOLON:;
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:game
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					typeName:
						type_var:
							class:
								class_variable_names:Game
					WEAK:~
					EQUALS:=
				FORSLASH:/
				NEWLINE:$\n
				SEMICOLON:;
				NEWLINE:$\n
				objectType:
					CLASS:class 
				className:
					variable_names:Gui
				FORSLASH:/
				parentName:
					type_var:
						class:
							class_variable_names:JFrame
				method_declaration:
					methodDefinition:
						body_element:
							body_line:
								SEMICOLON:;
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:setVisible
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
						body_element:
							NEWLINE:$\n
						body_element:
							body_line:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:super
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:Questineer
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:Gui
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						body_element:
							body_line:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													variable_names:setSize
													BACKSLASH:\
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		NAME:
																			NUMBER:600
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		NAME:
																			NUMBER:400
												COMMA:,
								SEMICOLON:;
						methodName:
							NAME:
								AS_METHOD_NAME:*
						body_element:
							body_line:
								SEMICOLON:;
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:EXIT_ON_CLOSE
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:this
											name_var:
												exact:
													BACKSLASH:\
													variable_names:setDefaultCloseOperation
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:initialParent
							typeName:
								type_var:
									class:
										class_variable_names:Game
						body_element:
							body_line:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialParent
											name_var:
												exact:
													BACKSLASH:\
													variable_names:setGame
								SEMICOLON:;
						body_element:
							body_line:
								variable_assignment:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:this
									name_var:
										variable:
											variable_names:gui
									EQUALS:=
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:paint
						body_element:
							NEWLINE:$\n
						body_element:
							body_conditional:
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_conditional:
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															variableName:
																name_var:
																	variable:
																		variable_names:tile
															method_argument:
																body_statement:
																	body_call:
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:i
																			name_var:
																				variable:
																					variable_names:get
																		group:
																			name_var:
																				variable:
																					variable_names:tileList
																		DOT:.
															typeName:
																type_var:
																	class:
																		class_variable_names:Tile
															EQUALS:=
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													body_conditional:
														conditional:
															ELSE:else
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:g
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:(int)(path.getX()+100), (int)(path.getY()+100), 3, 3
																				name_var:
																					variable:
																						variable_names:drawOval
																			DOT:.
															body_element:
																NEWLINE:$\n
												body_element:
													body_conditional:
														as_body:
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:(int)(path.getX()+100), (int)(path.getY()+100), (int)(path.getHome().getX()+100), (int)(path.getHome().getY()+100)
																				name_var:
																					variable:
																						variable_names:drawLine
																			group:
																				name_var:
																					variable:
																						variable_names:g
																			DOT:.
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
														conditional:
															IF:if
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:null
															OPERATOR:!=
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:path
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getHome
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														variable_declaration:
															EQUALS:=
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		ACCESS:->
																		type_var:
																			exact:
																				variable_names:Path
																				BACKSLASH:\
																		type_var:
																			exact:
																				BACKSLASH:\
																				variable_names:Forest
																		type_var:
																			class:
																				class_variable_names:Tiles
															method_argument:
																body_statement:
																	body_call:
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:i
																			name_var:
																				variable:
																					variable_names:get
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:(Tiles.Forest.Path)tileList
															variableName:
																name_var:
																	variable:
																		variable_names:path
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
											variable_declaration:
												typeName:
													type_var:
														class:
															class_variable_names:Integer
												variableName:
													name_var:
														variable:
															variable_names:i
											OPERATOR:< 
											conditional:
												FOR:for
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:tileList
													group:
														parameters:
														name_var:
															variable:
																variable_names:size
													DOT:.
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:tileList
										group:
											name_var:
												variable:
													variable_names:isEmpty
											parameters:
									body_call:
										group:
											name_var:
												variable:
													variable_names:tileList
									OPERATOR:!=
									OPERATOR:==
									OPERATOR:&& 
									body_call:
										group:
											name_var:
												variable:
													variable_names:false
								conditional:
									IF:if
						body_element:
							body_line:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:tileList
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:game
												DOT:.
												group:
													parameters:
													name_var:
														variable:
															variable_names:getTiles
												group:
													name_var:
														variable:
															variable_names:getEnvironments
													parameters:
												group:
													name_var:
														variable:
															variable_names:get
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0
												DOT:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:get
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:Forest
																				name_var:
																					variable:
																						variable_names:Tiles
																				ACCESS:->
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:Path
																	group:
																		name_var:
																			variable:
																				variable_names:id
																	DOT:.
									typeName:
										type_var:
											class:
												class_variable_names:List
												template_parameters:
													template_parameter:
														type_var:
															class:
																class_variable_names:Tile
								SEMICOLON:;
						typeName:
							type_var:
								class:
									class_variable_names:void
						body_element:
							NEWLINE:$\n
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:g
							typeName:
								type_var:
									class:
										class_variable_names:Graphics
				NEWLINE:$\n
			parentName:
				type_var:
					exact:
						BACKSLASH:\
						variable_names:Thread
			NEWLINE:$\n
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
				variableName:
					name_var:
						variable:
							variable_names:game
				static:
					STA:@
				typeName:
					type_var:
						class:
							class_variable_names:Game
				EQUALS:=
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:game
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:args
										NEW:new 
										typeName:
											type_var:
												class:
													class_variable_names:Game
							SEMICOLON:;
					methodName:
						name_var:
							variable:
								variable_names:main
					static:
						STA:@
					typeName:
						type_var:
							class:
								class_variable_names:void
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:args
						typeName:
							type_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:mainStringArgs
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Game
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										NEW:new 
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Game
													ACCESS:->
													type_var:
														class:
															class_variable_names:Gui
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			exact:
																				variable_names:Town
																				BACKSLASH:\
																		type_var:
																			class:
																				class_variable_names:Environments
															parameters:
															NEW:new 
										name_var:
											variable:
												variable_names:add
									group:
										name_var:
											variable:
												variable_names:environments
					body_element:
						body_conditional:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:environment
								typeName:
									type_var:
										class:
											class_variable_names:Environment
							OPERATOR::
							conditional:
								FOR:for
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:environment
												DOT:.
												group:
													parameters:
													name_var:
														variable:
															variable_names:load
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					methodName:
						NAME:
							AS_METHOD_NAME:*
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:args
						typeName:
							type_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:mainStringArgs
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
										name_var:
											exact:
												BACKSLASH:\
												variable_names:start
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Game
													ACCESS:->
													type_var:
														class:
															class_variable_names:Terminal
										NEW:new 
									DOT:.
									group:
										NAME:start
										parameters:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Environments
																		type_var:
																			exact:
																				variable_names:Forest
																				BACKSLASH:\
															parameters:
															NEW:new 
										name_var:
											variable:
												variable_names:add
									group:
										name_var:
											variable:
												variable_names:environments
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			objectType:
				CLASS:class 
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:environments
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:Environment
							class_variable_names:List
				WEAK:~
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Environment
											class_variable_names:ArrayList
			SEMICOLON:;
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:true
				variableName:
					name_var:
						variable:
							variable_names:isRunning
				typeName:
					type_var:
						class:
							class_variable_names:Boolean
				static:
					STA:@
				EQUALS:=
			NEWLINE:$\n
			SEMICOLON:;
			className:
				variable_names:Game
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Double
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:System
														BACKSLASH:\
											DOT:.
											group:
												name_var:
													variable:
														variable_names:currentTimeMillis
												parameters:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1000.0
										OPERATOR:/
								variableName:
									name_var:
										variable:
											variable_names:lastTick
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:this
								body_call:
									group:
										name_var:
											variable:
												variable_names:Game
									group:
										name_var:
											variable:
												variable_names:game
									DOT:.
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:isRunning
									group:
										name_var:
											variable:
												variable_names:Game
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										variable_assignment:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1000.0
													body_call:
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:currentTimeMillis
														group:
															name_var:
																exact:
																	variable_names:System
																	BACKSLASH:\
													OPERATOR:/
											EQUALS:=
											name_var:
												variable:
													variable_names:thisTick
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										conditional:
											FOR:for
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:environment
											typeName:
												type_var:
													class:
														class_variable_names:Environment
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:tick
																parameters:
																	method_argument:
																		body_statement:
																			OPERATOR:-
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:thisTick
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:lastTick
															group:
																name_var:
																	variable:
																		variable_names:environment
															DOT:.
													SEMICOLON:;
										OPERATOR::
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:environments
								body_element:
									body_line:
										SEMICOLON:;
										variable_assignment:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:thisTick
											name_var:
												variable:
													variable_names:lastTick
											EQUALS:=
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											OPERATOR:!= 
											body_call:
												group:
													name_var:
														access:
															ACCESS:->
															name_var:
																variable:
																	variable_names:Game
															name_var:
																variable:
																	variable_names:Gui
												DOT:.
												group:
													name_var:
														variable:
															variable_names:gui
										as_body:
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:gui
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:repaint
																parameters:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Game
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Gui
															DOT:.
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										conditional:
											IF:if
								body_element:
									NEWLINE:$\n
							conditional:
								WHILE:while
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											access:
												ACCESS:->
												name_var:
													variable:
														variable_names:Game
												name_var:
													variable:
														variable_names:Terminal
									DOT:.
									DOT:.
									group:
										name_var:
											variable:
												variable_names:close
										parameters:
									group:
										name_var:
											variable:
												variable_names:in
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:run
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:thisTick
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0.0
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Double
			NEWLINE:$\n
			class_declaration:
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:Game
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					variableName:
						name_var:
							variable:
								variable_names:game
					EQUALS:=
				NEWLINE:$\n
				NEWLINE:$\n
				SEMICOLON:;
				className:
					variable_names:Terminal
				parentName:
					type_var:
						exact:
							variable_names:Thread
							BACKSLASH:\
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:in
					EQUALS:=
					static:
						STA:@
					method_argument:
						body_statement:
							body_call:
								group:
									parameters:
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:in
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:System
									typeName:
										type_var:
											exact:
												variable_names:Scanner
												BACKSLASH:\
									NEW:new 
					typeName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Scanner
				objectType:
					CLASS:class 
				FORSLASH:/
				SEMICOLON:;
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:void
						methodName:
							name_var:
								variable:
									variable_names:run
						body_element:
							NEWLINE:$\n
						body_element:
							body_conditional:
								conditional:
									WHILE:while
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:isRunning
										group:
											name_var:
												variable:
													variable_names:Game
										DOT:.
								as_body:
									body_element:
										body_conditional:
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Game
																group:
																	name_var:
																		variable:
																			variable_names:isRunning
																DOT:.
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:false
															OPERATOR:= 
														SEMICOLON:;
											conditional:
												IF:if
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:in
													group:
														name_var:
															variable:
																variable_names:equals
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				as_quote:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:exit
													group:
														name_var:
															variable:
																variable_names:nextLine
														parameters:
													DOT:.
													DOT:.
									body_element:
										NEWLINE:$\n
									body_element:
										comment:
											WILD:}
									body_element:
										comment:
											WILD:catch Exception e {$\n        }
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										comment:
											WILD:try {
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
				FORSLASH:/
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:String[]
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:mainStringArgs
			inner:
				IN:>
imports:
	IMPORT_CLASS:
		class_declaration:
			class_declaration:
				className:
					variable_names:Placable
				objectType:
					INTERFACE:interface 
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:place
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:y
							typeName:
								type_var:
									class:
										class_variable_names:Float
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							variableName:
								name_var:
									variable:
										variable_names:x
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Environment
							variableName:
								name_var:
									variable:
										variable_names:parent
						COMMA:,
						typeName:
							type_var:
								class:
									class_variable_names:void
				NEWLINE:$\n
				NEWLINE:$\n
				FORSLASH:/
				FORSLASH:/
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:Menu
			NEWLINE:$\n
			objectType:
				CLASS:class 
			NEWLINE:$\n
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:menus
		NEWLINE:$\n
		NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:HashSet
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	SEMICOLON:;
	COLON::
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	COLON::
	DOT:.
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	HID:<
	className:
		NAME:Map
anonymous_class:
	COLON::
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	HID:<
	className:
		NAME:HeroStats
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_ATTACK
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_attacks
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Attacks
										SEMICOLON:;
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:attack_declaration
							COLON::
							variableName:
								NAME:element
				COLON::
				variableName:
					NAME:import_attacks
				name_var:
					variable:
						variable_names:import_any
		typeName:
			type_var:
				class:
					class_variable_names:void
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:import_any
			typeName:
				type_var:
					class:
						class_variable_names:IToken
		methodName:
			name_var:
				variable:
					variable_names:importAny
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Associations
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:association_declaration
							name_var:
								variable:
									variable_names:import_association
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ASSOCIATION
				variableName:
					NAME:import_association
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_supports
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_supports
							tokenInstance:
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Supports
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:support_declaration
							COLON::
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_SUPPORT
					body_element:
						NEWLINE:$\n
					COLON::
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_conditions
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_conditions
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:condition_declaration
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Conditions
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							COLON::
					COLON::
					tokenName:
						NAME:IMPORT_CONDITION
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				variableName:
					NAME:import_skills
				tokenInstance:
					tokenName:
						NAME:IMPORT_SKILL
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:skill_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Skills
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_skills
							COLON::
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_quests
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_QUEST
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Quests
												group:
													name_var:
														variable:
															variable_names:typeDeclaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:quest_declaration
								COLON::
							name_var:
								variable:
									variable_names:import_quests
							variableName:
								NAME:element
				COLON::
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_items
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_items
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:import_any
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														exact:
															BACKSLASH:\
															variable_names:importAny
								COLON::
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_items
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Items
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
										SEMICOLON:;
								tokenName:
									NAME:item_declaration
								COLON::
					tokenName:
						NAME:IMPORT_ITEM
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:import_map
										name_var:
											variable:
												variable_names:declaration
									group:
										name_var:
											variable:
												variable_names:Environment
							SEMICOLON:;
					COLON::
					tokenName:
						NAME:IMPORT_MAP
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_map
		body_element:
			body_manipulate:
				variableName:
					NAME:import_aspects
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_aspects
							tokenInstance:
								tokenName:
									NAME:aspect_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Aspects
										SEMICOLON:;
								COLON::
								body_element:
									NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_ASPECT
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ACTIVITY
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Activities
										SEMICOLON:;
								tokenName:
									NAME:activity_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
							name_var:
								variable:
									variable_names:import_activities
							COLON::
							variableName:
								NAME:element
				COLON::
				variableName:
					NAME:import_activities
		body_element:
			body_manipulate:
				tokenInstance:
					tokenName:
						NAME:IMPORT_AFFINITY
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_affinities
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:affinity_declaration
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Affinities
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
							COLON::
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_affinities
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_REASON
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							name_var:
								variable:
									variable_names:import_reason
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:reason_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Relationship
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
				COLON::
				variableName:
					NAME:import_reason
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_traits
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Traits
										SEMICOLON:;
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:trait_declaration
								body_element:
									NEWLINE:$\n
					tokenName:
						NAME:IMPORT_TRAIT
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_traits
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:paymentTypeDec
												group:
													name_var:
														variable:
															variable_names:Treasury
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:payment_type_declaration
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_payment_types
							COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_PAYMENT_TYPE
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_payment_types
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_events
				tokenInstance:
					tokenName:
						NAME:IMPORT_EVENT
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Events
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
								tokenName:
									NAME:event_declaration
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_events
							COLON::
					body_element:
						NEWLINE:$\n
				COLON::
		body_element:
			NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	HID:<
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	className:
		NAME:ArrayList
	SEMICOLON:;
SEMICOLON:;
imports:
	IMPORT_CLASS:
		class_declaration:
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			DOT:.
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:entities
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					static:
						STA:@
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:createEntity
					typeName:
						type_var:
							class:
								class_variable_names:Entity
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:entityName
						typeName:
							type_var:
								class:
									class_variable_names:String
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							RETURN:return 
			method_declaration:
				methodDefinition:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:declarationToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:entity_definition
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										COLON::
										variableName:
											NAME:atom
										tokenInstance:
											body_element:
												body_line:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:rightBound
													SEMICOLON:;
											body_element:
												body_conditional:
													as_body:
														body_element:
															body_line:
																SEMICOLON:;
																variable_assignment:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												ACCESS:->
																												name_var:
																													variable:
																														variable_names:atom
																												name_var:
																													exact:
																														WILD:left
																	EQUALS:=
																	name_var:
																		variable:
																			variable_names:rightBound
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:atom
																		name_var:
																			exact:
																				WILD:right
																		ACCESS:->
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
														OPERATOR:!= 
													conditional:
														IF:if
											body_element:
												body_line:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:leftBound
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										exact:
																											WILD:left
																									name_var:
																										variable:
																											variable_names:atom
																									ACCESS:->
														typeName:
															type_var:
																class:
																	class_variable_names:String
														EQUALS:=
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:heroStatName
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:toLowerCase
																		parameters:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:atom
																									ACCESS:->
																									name_var:
																										exact:
																											WILD:hero_stats
																	DOT:.
											COLON::
											body_element:
												body_conditional:
													conditional:
														ELSE:else
													as_body:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																SEMICOLON:;
																variable_assignment:
																	EQUALS:=
																	name_var:
																		variable:
																			variable_names:rightBound
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:leftBound
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:heroStatName
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:setValue
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												DOT:.
																												group:
																													name_var:
																														variable:
																															variable_names:getIntegerBetween
																													parameters:
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:rightBound
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:leftBound
																												group:
																													name_var:
																														variable:
																															variable_names:Range
																name_var:
																	variable:
																		variable_names:appendToBody
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
														OPERATOR:->*.
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:statRange
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:affinity_names
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
																		ACCESS:->
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													NEW:new 
																													parameters:
																													typeName:
																														type_var:
																															access_multi:
																																type_var:
																																	class:
																																		class_variable_names:Affinities
																																ACCESS:->
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							CAMEL:^
																																							variable_names:atom
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																							DOT:.
																					SEMICOLON:;
														OPERATOR:->*.
													SEMICOLON:;
										variableName:
											NAME:atom
										COLON::
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															BODY_TYPE:Body 
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																		NEW:new 
																		typeName:
																			BODY_TYPE:Body 
														variableName:
															name_var:
																variable:
																	variable_names:eventBody
														EQUALS:=
											body_element:
												body_manipulate:
													COLON::
													name_var:
														variable:
															variable_names:atom
													tokenInstance:
														tokenName:
															NAME:body_element
														COLON::
														body_element:
															body_line:
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:add
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										variable_names:getBodyElement
																										BACKSLASH:\
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:eventContext
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																									COMMA:,
																		group:
																			name_var:
																				variable:
																					variable_names:eventBody
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
													variableName:
														NAME:quark
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												body_line:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:eventContext
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:event_names
																														name_var:
																															variable:
																																variable_names:atom
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:entityName
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:Entities
																		name_var:
																			variable:
																				variable_names:addToEventMethod
														typeName:
															CONTEXT_TYPE:Context 
													SEMICOLON:;
											tokenName:
												NAME:event
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																parameters:
																	COMMA:,
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							ACCESS:->
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:entityName
																							name_var:
																								variable:
																									variable_names:Entities
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:eventBody
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													exact:
																														WILD:event_names
																												ACCESS:->
																												name_var:
																													variable:
																														variable_names:atom
																name_var:
																	variable:
																		variable_names:addToEventMethod
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:Events
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										COLON::
										variableName:
											NAME:atom
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											COLON::
											body_element:
												body_line:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:bodyContext
														typeName:
															CONTEXT_TYPE:Context 
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getContext
																	group:
																		name_var:
																			variable:
																				variable_names:Entity
													SEMICOLON:;
											tokenName:
												NAME:skill
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													COLON::
													name_var:
														variable:
															variable_names:atom
													variableName:
														NAME:quark
													tokenInstance:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														tokenName:
															NAME:statement
														COLON::
														body_element:
															body_line:
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:arguments
																		group:
																			name_var:
																				variable:
																					variable_names:add
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getStatement
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:bodyContext
																SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														OPERATOR:->*.
														body_call:
															group:
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													NEW:new 
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_method:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:arguments
																													typeName:
																														type_var:
																															access_multi:
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						access:
																																							CAMEL:^
																																							name_var:
																																								variable:
																																									variable_names:atom
																																							name_var:
																																								exact:
																																									WILD:skill_names
																																							ACCESS:->
																																type_var:
																																	class:
																																		class_variable_names:Skills
																																ACCESS:->
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:this
																name_var:
																	variable:
																		variable_names:appendToBody
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
											body_element:
												body_line:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:set
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:,
															group:
																name_var:
																	variable:
																		variable_names:arguments
													SEMICOLON:;
											body_element:
												body_line:
													variable_declaration:
														typeName:
															STATEMENT_TYPE:Statement
														variableName:
															name_var:
																variable:
																	variable_names:arguments
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																		NEW:new 
																		typeName:
																			STATEMENT_TYPE:Statement
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										COLON::
										variableName:
											NAME:atom
							name_var:
								variable:
									variable_names:declarationToken
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:declarationToken
							tokenInstance:
								tokenName:
									NAME:entityName
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:element
												group:
													name_var:
														variable:
															variable_names:entityNameBuilder
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
							COLON::
					body_element:
						NEWLINE:$\n
					typeName:
						CLASS_TYPE:Class 
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:toString
											group:
												name_var:
													variable:
														variable_names:entityNameBuilder
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:entityName
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							class_declaration:
								DOT:.
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								objectType:
									CLASS:class 
								parentName:
									type_var:
										class:
											class_variable_names:Entity
								NEWLINE:$\n
								packageName:
									name_var:
										exact:
											WILD:entities
								className:
									variable_names:entityName
							type_var:
								class:
									class_variable_names:Entities
							methodName:
								ADD:+=
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												access:
													name_var:
														variable:
															variable_names:Entities
													ACCESS:->
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:entityName
													ACCESS:->
													name_var:
														variable:
															variable_names:Factory
					body_element:
						body_line:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:StringBuilder
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:StringBuilder
								variableName:
									name_var:
										variable:
											variable_names:entityNameBuilder
								EQUALS:=
							SEMICOLON:;
					body_element:
						body_manipulate:
							class_declaration:
								className:
									variable_names:Factory
								packageName:
									name_var:
										exact:
											WILD:entities
								DOT:.
								interfaceName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Entity
											ACCESS:->
											type_var:
												class:
													class_variable_names:Factory
								NEWLINE:$\n
								NEWLINE:$\n
								parentName:
									type_var:
										exact:
											variable_names:Object
											BACKSLASH:\
								objectType:
									CLASS:class 
								method_declaration:
									methodDefinition:
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																typeName:
																	type_var:
																		access_multi:
																			ACCESS:->
																			type_var:
																				class:
																					class_variable_names:Entities
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:entityName
																NEW:new 
																parameters:
												SEMICOLON:;
												RETURN:return 
										methodName:
											name_var:
												variable:
													variable_names:create
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
							type_var:
								access_multi:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:entityName
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entities
							methodName:
								ADD:+=
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			className:
				variable_names:Entities
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					DOT:.
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					packageName:
						name_var:
							exact:
								WILD:quests
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:size
											DOT:.
											group:
												name_var:
													variable:
														variable_names:tileClauses
										OPERATOR:> 
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													OPERATOR:->*
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Quests
													body_call:
														group:
															name_var:
																exact:
																	WILD:fulfill
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_return:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																							SEMICOLON:;
																							RETURN:return 
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:tileClauses
																		body_element:
																			NEWLINE:$\n
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:description
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:description
																					name_var:
																						variable:
																							variable_names:declarationToken
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										WEAK:~
										variableName:
											name_var:
												variable:
													variable_names:tileCount
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
										typeName:
											type_var:
												class:
													class_variable_names:Integer
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:tileClauses
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventBody
														DOT:.
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:super
																						group:
																							name_var:
																								variable:
																									variable_names:on
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:event
																				SEMICOLON:;
															name_var:
																variable:
																	variable_names:add
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:eventBody
													EQUALS:=
													typeName:
														BODY_TYPE:Body 
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		BODY_TYPE:Body 
																	parameters:
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:questName
																								name_var:
																									variable:
																										variable_names:Quests
																		method_argument:
																			body_entries:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:eventName
																		COMMA:,
																		COMMA:,
																group:
																	name_var:
																		variable:
																			variable_names:Events
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:eventContext
												SEMICOLON:;
										body_element:
											body_manipulate:
												COLON::
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:eventBody
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventContext
																		name_var:
																			variable:
																				variable_names:add
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:event_names
																								name_var:
																									variable:
																										variable_names:element
																								ACCESS:->
													WEAK:~
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															variable:
																variable_names:eventName
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	variable:
																		variable_names:eventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:startQuest
															SEMICOLON:;
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:start
													OPERATOR:|| 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													body_call:
														group:
															name_var:
																exact:
																	WILD:load
													OPERATOR:== 
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:questName
																						name_var:
																							variable:
																								variable_names:Quests
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventBody
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
																COMMA:,
														DOT:.
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:typeDeclaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:IToken
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:tileClause
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:tileClauses
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												tokenInstance:
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																variableName:
																	name_var:
																		variable:
																			variable_names:negatedOperator
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																name_var:
																																	exact:
																																		WILD:ORDINAL
																																ACCESS:->
																																name_var:
																																	variable:
																																		variable_names:atom
																				name_var:
																					exact:
																						variable_names:negateOperator
																						BACKSLASH:\
																EQUALS:=
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																variableName:
																	name_var:
																		variable:
																			variable_names:mapName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																				name_var:
																					variable:
																						variable_names:replace
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:mapName
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:atom
																			DOT:.
															SEMICOLON:;
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:negatedOperator
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:tileNameClause
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:tileClause
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														access:
																															name_var:
																																exact:
																																	WILD:INTEGER
																															ACCESS:->
																															name_var:
																																variable:
																																	variable_names:atom
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	DOT:.
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																				name_var:
																					variable:
																						variable_names:replace
																			DOT:.
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:atom
																											name_var:
																												exact:
																													WILD:tileName
																variableName:
																	name_var:
																		variable:
																			variable_names:tileName
																EQUALS:=
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	STATEMENT_TYPE:Statement
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																				typeName:
																					STATEMENT_TYPE:Statement
																variableName:
																	name_var:
																		variable:
																			variable_names:tileNameClause
																EQUALS:=
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:quest_tile_description
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														concat:
																															name_var:
																																variable:
																																	variable_names:tileCount
																															name_var:
																																exact:
																																	WILD:visited
																															PLUS:+
																							group:
																								name_var:
																									variable:
																										variable_names:size
																								parameters:
																		name_var:
																			variable:
																				variable_names:add
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									body_line:
																										SEMICOLON:;
																										body_statement:
																											body_call:
																												DOT:.
																												group:
																													name_var:
																														variable:
																															variable_names:add
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				WILD:destinationReached
																												group:
																													name_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			concat:
																																				name_var:
																																					exact:
																																						WILD:visited
																																				name_var:
																																					variable:
																																						variable_names:tileCount
																																				PLUS:+
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	PLUS:+
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																																	name_var:
																																		exact:
																																			WILD:toVisit
																									DOT:.
																									group:
																										name_var:
																											variable:
																												variable_names:contains
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	WILD:destinationReached
																					body_element:
																						NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:prependToBody
																	group:
																		name_var:
																			exact:
																				WILD:fulfill
																	DOT:.
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
																OPERATOR:->*
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																OPERATOR:->*
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						body_line:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:add
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	WILD:quester
																														group:
																															parameters:
																															name_var:
																																variable:
																																	variable_names:getLocation
																														DOT:.
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:getNodeFromId
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					exact:
																																						WILD:quester
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:getLocation
																																				parameters:
																																			DOT:.
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:Tiles
																																						ACCESS:->
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												concat:
																																													PLUS:+
																																													name_var:
																																														variable:
																																															variable_names:tileName
																																													name_var:
																																														variable:
																																															variable_names:mapName
																																			DOT:.
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:Environments
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:mapName
																																			DOT:.
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																															name_var:
																																variable:
																																	variable_names:getEnvironment
																														DOT:.
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	PLUS:+
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																																	name_var:
																																		exact:
																																			WILD:toVisited
																									DOT:.
																							SEMICOLON:;
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																	group:
																		name_var:
																			exact:
																				WILD:generateDestinations
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:quest_destination
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												variable_declaration:
													method_argument:
														body_statement:
															NEWLINE:$\n
															body_call:
																NEWLINE:$\n
																group:
																	parameters:
																	typeName:
																		type_var:
																			class:
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Node
																				class_variable_names:HashSet
																	NEW:new 
													WEAK:~
													typeName:
														type_var:
															class:
																class_variable_names:Set
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Node
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					name_var:
																						variable:
																							variable_names:tileCount
																					name_var:
																						exact:
																							WILD:visited
																					PLUS:+
													EQUALS:=
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Quests
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		STATEMENT_TYPE:Statement
																	parameters:
																	NEW:new 
													EQUALS:=
													typeName:
														STATEMENT_TYPE:Statement
													variableName:
														name_var:
															variable:
																variable_names:tileClause
												SEMICOLON:;
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:brace
															parameters:
														group:
															name_var:
																variable:
																	variable_names:tileClause
														DOT:.
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:||
															name_var:
																variable:
																	variable_names:set
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:tileClause
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileCount
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													BACKSLASH:\
													OPERATOR:+= 
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																NEWLINE:$\n
																group:
																	typeName:
																		type_var:
																			class:
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Node
																				class_variable_names:HashSet
																	NEW:new 
																	parameters:
															NEWLINE:$\n
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					PLUS:+
																					name_var:
																						variable:
																							variable_names:tileCount
																					name_var:
																						exact:
																							WILD:toVisit
													EQUALS:=
													WEAK:~
													typeName:
														type_var:
															class:
																class_variable_names:Set
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Node
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Quests
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:questName
																					name_var:
																						variable:
																							variable_names:declarationToken
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:questName
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:tileClauses
											DOT:.
											group:
												name_var:
													variable:
														variable_names:set
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:&&
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Quests
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
														ACCESS:->
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_return:
																	SEMICOLON:;
																	RETURN:return 
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:true
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
											group:
												name_var:
													exact:
														WILD:fulfill
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										method_declaration:
											methodDefinition:
												COMMA:,
												typeName:
													type_var:
										class:
															class_variable_names:Boolean
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:quester
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												methodName:
													name_var:
														variable:
															variable_names:fulfill
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:destinationReached
													typeName:
														type_var:
															class:
																class_variable_names:Node
										FORSLASH:/
										className:
											variable_names:questName
										parentName:
											type_var:
												class:
													class_variable_names:Quest
										NEWLINE:$\n
										objectType:
											CLASS:class 
										NEWLINE:$\n
										NEWLINE:$\n
										FORSLASH:/
										method_declaration:
											methodDefinition:
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:quester
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												methodName:
													name_var:
														variable:
															variable_names:generateDestinations
												typeName:
													type_var:
														class:
															class_variable_names:void
									type_var:
										class:
											class_variable_names:Quests
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													COMMA:,
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			body_line:
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:status
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:FAIL
																					EQUALS:=
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	conditional:
																		ELSE:else
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:0
																					EQUALS:=
																					name_var:
																						variable:
																							variable_names:currentActivityIndex
																				SEMICOLON:;
																		body_element:
																			body_line:
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:IN_PROGRESS
																					EQUALS:=
																					name_var:
																						variable:
																							variable_names:status
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activities
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															exact:
																																NAME:
																																	NUMBER:0
																									name_var:
																										variable:
																											variable_names:get
																								DOT:.
																					name_var:
																						variable:
																							variable_names:currentActivity
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:isEmpty
																			group:
																				name_var:
																					exact:
																						WILD:activities
																		OPERATOR:==
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:false
																	conditional:
																		IF:if
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:startQuest
												name_var:
													variable:
														variable_names:addToEventMethod
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:data
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:FAIL
																		name_var:
																			variable:
																				variable_names:status
																		EQUALS:=
															body_element:
																NEWLINE:$\n
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													COMMA:,
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
											DOT:.
							methodName:
								name_var:
									variable:
										variable_names:setup
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					className:
						variable_names:Quests
					objectType:
						CLASS:class 
				NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Activity
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								variable:
									variable_names:currentActivity
					DOT:.
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:FAIL
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:2
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						static:
							STA:@
					variable_declaration:
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:SUCCESS
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:UNSTARTED
						EQUALS:=
					SEMICOLON:;
					NEWLINE:$\n
					class_declaration:
						objectType:
							CLASS:class 
						method_declaration:
							methodDefinition:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:user
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
										SEMICOLON:;
										RETURN:return 
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								methodName:
									name_var:
										variable:
											variable_names:satisfies
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
						WEAK:~
						NEWLINE:$\n
						className:
							variable_names:TargetCriteria
						parentName:
							type_var:
								exact:
									BACKSLASH:\
									variable_names:EntityCriteria
						NEWLINE:$\n
						FORSLASH:/
						FORSLASH:/
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Quest
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					objectType:
						CLASS:class 
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:currentActivityIndex
						EQUALS:=
					DOT:.
					variable_declaration:
						EQUALS:=
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:activities
						method_argument:
							body_statement:
								body_call:
									group:
										typeName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Activity
													type_var:
														class:
															class_variable_names:List
										parameters:
										NEW:new 
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:List
									ACCESS:->
									type_var:
										class:
											class_variable_names:Activity
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getTargetCriteria
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									exact:
										variable_names:EntityCriteria
										BACKSLASH:\
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													NEW:new 
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Quest
																type_var:
																	class:
																		class_variable_names:TargetCriteria
																ACCESS:->
													parameters:
									RETURN:return 
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:< 
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:size
										body_call:
											group:
												name_var:
													variable:
														variable_names:newIndex
									as_body:
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:currentActivityIndex
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newIndex
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:activities
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:newIndex
																	name_var:
																		variable:
																			variable_names:get
													name_var:
														variable:
															variable_names:currentActivity
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:newIndex
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							methodName:
								name_var:
									variable:
										variable_names:advanceTo
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:SUCCESS
													EQUALS:=
													name_var:
														variable:
															variable_names:status
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						NEWLINE:$\n
						objectType:
							CLASS:class 
						className:
							variable_names:Id
						parentName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Usable
									type_var:
										class:
											class_variable_names:Id
						FORSLASH:/
					packageName:
						name_var:
							exact:
								WILD:quests
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						EQUALS:=
						static:
							STA:@
						variableName:
							name_var:
								variable:
									variable_names:IN_PROGRESS
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newActivity
									SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								variableName:
									name_var:
										variable:
											variable_names:newActivity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:add
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newActivity
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Listeners
																				ACCESS:->
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Quest
																				type_var:
																					exact:
																						variable_names:Fail
																						BACKSLASH:\
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:newActivity
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Listeners
																				type_var:
																					exact:
																						BACKSLASH:\
																						variable_names:Success
																				ACCESS:->
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Quest
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:activities
																					DOT:.
																					group:
																						parameters:
																						name_var:
																							variable:
																								variable_names:size
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																		COMMA:,
												name_var:
													variable:
														variable_names:add
									SEMICOLON:;
					className:
						variable_names:Quest
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:user
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getRange
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					DOT:.
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					parentName:
						type_var:
							class:
								class_variable_names:Object
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:status
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:UNSTARTED
						WEAK:~
						EQUALS:=
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:canChase
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					class_declaration:
						NEWLINE:$\n
						NEWLINE:$\n
						FORSLASH:/
						NEWLINE:$\n
						class_declaration:
							className:
								variable_names:Success
							objectType:
								CLASS:class 
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:nextIndex
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:-1
							SEMICOLON:;
							FORSLASH:/
							method_declaration:
								methodDefinition:
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:host
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:nextIndex
														name_var:
															variable:
																variable_names:advanceTo
													DOT:.
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:event
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Events
													ACCESS:->
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Success
									methodName:
										name_var:
											variable:
												variable_names:listen
									typeName:
										type_var:
											class:
												class_variable_names:void
							NEWLINE:$\n
							parentName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Success
										ACCESS:->
										ACCESS:->
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								typeName:
									type_var:
										class:
											class_variable_names:Quest
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:host
							FORSLASH:/
							SEMICOLON:;
						className:
							variable_names:Listeners
						class_declaration:
							variable_declaration:
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Quest
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								variableName:
									name_var:
										variable:
											variable_names:host
							NEWLINE:$\n
							NEWLINE:$\n
							SEMICOLON:;
							className:
								variable_names:Fail
							FORSLASH:/
							parentName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Fail
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Listener
										ACCESS:->
										ACCESS:->
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									methodName:
										name_var:
											variable:
												variable_names:listen
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:event
										typeName:
											type_var:
												access_multi:
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Fail
													ACCESS:->
													type_var:
														class:
															class_variable_names:Events
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:(Events.Fail)event
														name_var:
															variable:
																variable_names:on
													group:
														name_var:
															variable:
																variable_names:host
											SEMICOLON:;
							objectType:
								CLASS:class 
							FORSLASH:/
						objectType:
							CLASS:class 
						FORSLASH:/
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
										body_element:
											NEWLINE:$\n
							COMMA:,
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:currentActivity
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									conditional:
										IF:if
									as_body:
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:currentActivity
														group:
															name_var:
																variable:
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:Tick
																									BACKSLASH:\
																				NEW:new 
										body_element:
											NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:user
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:UNSTARTED
										body_call:
											group:
												name_var:
													variable:
														variable_names:status
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:StartQuest
																							ACCESS:->
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								variableName:
									name_var:
										variable:
											variable_names:activity
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					SEMICOLON:;
		imports:
			IMPORT_CLASS:
				class_declaration:
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:skills
					DOT:.
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:behaviours
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Skill
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							static:
								STA:@
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:skillName
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Skills
					method_declaration:
						methodDefinition:
							body_element:
								body_manipulate:
									type_var:
										access_multi:
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:skillName
											ACCESS:->
											type_var:
												class:
													class_variable_names:Skills
									methodName:
										ADD:+=
									class_declaration:
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
												body_element:
													NEWLINE:$\n
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															exact:
																WILD:user
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:satisfies
										className:
											variable_names:TargetCriteria
										parentName:
											type_var:
												exact:
													BACKSLASH:\
													variable_names:EntityCriteria
										WEAK:~
										FORSLASH:/
										NEWLINE:$\n
										objectType:
											CLASS:class 
										FORSLASH:/
										NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:IToken
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:useContext
										typeName:
											CONTEXT_TYPE:Context 
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getContext
														parameters:
													DOT:.
													DOT:.
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:Skills
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:skillName
													group:
														name_var:
															variable:
																variable_names:getMethod
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:use
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
																name_var:
																	exact:
																		WILD:skillName
										variableName:
											name_var:
												variable:
													variable_names:skillName
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														ACCESS:->
														ACCESS:->
														name_var:
															variable:
																variable_names:Skills
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_line:
																	variable_assignment:
																		EQUALS:=
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																						NEW:new 
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:TargetCriteria
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:skillName
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Skills
																									ACCESS:->
																		name_var:
																			exact:
																				WILD:targetCriteria
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:appendToBody
										OPERATOR:->*.
									SEMICOLON:;
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										parentName:
											type_var:
												class:
													class_variable_names:Skill
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														RETURN:return 
												methodName:
													name_var:
														variable:
															variable_names:getId
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Skill
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Id
												body_element:
													NEWLINE:$\n
										className:
											variable_names:skillName
										FORSLASH:/
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:skillName
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Skill
																		type_var:
																			class:
																				class_variable_names:Id
											variableName:
												name_var:
													exact:
														WILD:id
											static:
												STA:@
											EQUALS:=
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Skill
														ACCESS:->
										FORSLASH:/
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
										NEWLINE:$\n
										SEMICOLON:;
										NEWLINE:$\n
										objectType:
											CLASS:class 
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:victim
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												COMMA:,
												methodName:
													name_var:
														variable:
															variable_names:use
												typeName:
													type_var:
														class:
															class_variable_names:void
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															exact:
																WILD:user
										NEWLINE:$\n
									type_var:
										class:
											class_variable_names:Skills
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:description
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_quote:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
												SEMICOLON:;
										COLON::
										tokenName:
											NAME:description
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:element
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										WEAK:~
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:isFirst
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Skills
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																						ACCESS:->
																COMMA:,
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:addVariableHeader
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:variable_header
										NEWLINE:$\n
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												body:
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	exact:
																		WILD:cost
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
																								DOT:.
															SEMICOLON:;
												methodName:
													ADD:+=
												type_var:
													access_multi:
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														ACCESS:->
														type_var:
															class:
																class_variable_names:Skills
										COLON::
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										tokenName:
											NAME:cooldown
									tokenInstance:
										tokenName:
											NAME:use
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										COLON::
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												tokenInstance:
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_manipulate:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Skills
																	as_method:
																		AS_METHOD_NAME:*
																		name_var:
																			exact:
																				WILD:use
																		ACCESS:->
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:skillName
																	ACCESS:->
																	ACCESS:->
															body:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				as_method:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										variable_names:getBodyElement
																										BACKSLASH:\
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:useContext
															methodName:
																ADD:+=
													NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															as_body:
																body_element:
																	body_conditional:
																		conditional:
																			ELSE:else
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													as_body:
																														body_element:
																															body_return:
																																VOID:void
																																RETURN:return 
																																SEMICOLON:;
																													conditional:
																														IF:if
																														ELSE:else
																								name_var:
																									variable:
																										variable_names:prependToBody
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																						OPERATOR:->*
																			body_element:
																				NEWLINE:$\n
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						name_var:
																							variable:
																								variable_names:isFirst
																						EQUALS:=
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_return:
																																RETURN:return 
																																SEMICOLON:;
																																VOID:void
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																								name_var:
																									variable:
																										variable_names:prependToBody
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																						OPERATOR:->*
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															conditional:
																ELSE:else
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:chance
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_method:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																access:
																																	ACCESS:->
																																	name_var:
																																		exact:
																																			WILD:has_chance
																																	name_var:
																																		variable:
																																			variable_names:atom
																										name_var:
																											exact:
																												variable_names:getChance
																												BACKSLASH:\
																typeName:
																	STATEMENT_TYPE:Statement
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:option
													body_element:
														body_conditional:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																OPERATOR:!= 
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:atom
																				name_var:
																					exact:
																						WILD:boolean_statement
																				ACCESS:->
															conditional:
																IF:if
															as_body:
																body_element:
																	body_conditional:
																		conditional:
																			ELSE:else
																		as_body:
																			body_element:
																				body_line:
																					body_statement:
																						OPERATOR:->*
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													as_body:
																														body_element:
																															body_conditional:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																																conditional:
																																	IF:if
																																	ELSE:else
																																as_body:
																																	body_element:
																																		body_return:
																																			RETURN:return 
																																			VOID:void
																																			SEMICOLON:;
																								name_var:
																									variable:
																										variable_names:prependToBody
																							DOT:.
																							group:
																								name_var:
																									exact:
																										WILD:use
																						body_call:
																							group:
																								name_var:
																									access:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										ACCESS:->
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													as_body:
																														body_element:
																															body_conditional:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																																conditional:
																																	IF:if
																																as_body:
																																	body_element:
																																		body_return:
																																			RETURN:return 
																																			VOID:void
																																			SEMICOLON:;
																													conditional:
																														IF:if
																							DOT:.
																							group:
																								name_var:
																									exact:
																										WILD:use
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																						OPERATOR:->*
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					variable_assignment:
																						EQUALS:=
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						name_var:
																							variable:
																								variable_names:isFirst
																					SEMICOLON:;
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		conditional:
																			IF:if
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		variable_declaration:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_method:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														exact:
																															BACKSLASH:\
																															variable_names:getBooleanStatement
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:useContext
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			access:
																																				ACCESS:->
																																				name_var:
																																					exact:
																																						WILD:boolean_statement
																																				name_var:
																																					variable:
																																						variable_names:atom
																			typeName:
																				STATEMENT_TYPE:Statement
																			EQUALS:=
																			variableName:
																				name_var:
																					variable:
																						variable_names:bool
																		SEMICOLON:;
																body_element:
																	NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
												COLON::
										NEWLINE:$\n
										COLON::
										tokenName:
											NAME:miss
									tokenInstance:
										NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:require
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:boolean_statement
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:canUseContext
																typeName:
																	CONTEXT_TYPE:Context 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:satisfies
																				name_var:
																					variable:
																						variable_names:getMethod
																			DOT:.
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Skills
																						name_var:
																							variable:
																								variable_names:TargetCriteria
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:satisfies
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				as_statement:
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:canUseContext
																																COMMA:,
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										RETURN:return 
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:false
																										SEMICOLON:;
																								body_element:
																									NEWLINE:$\n
																	DOT:.
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Skills
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:TargetCriteria
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
												variableName:
													NAME:atom
												COLON::
									tokenInstance:
										tokenName:
											NAME:range
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											body_manipulate:
												body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:getRange
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								DOT:.
																EQUALS:=
																name_var:
																	exact:
																		WILD:range
															SEMICOLON:;
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														type_var:
															class:
																class_variable_names:Skills
														ACCESS:->
														ACCESS:->
												methodName:
													ADD:+=
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:description
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:+
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
											group:
												name_var:
													variable:
														variable_names:Skills
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:skillName
																				name_var:
																					variable:
																						variable_names:equals
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Skills
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:skillName
																								parameters:
																				SEMICOLON:;
											DOT:.
											DOT:.
									SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:createCriteria
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								body_manipulate:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:EntityCriteria
									methodName:
										ADD:+=
									class_declaration:
										className:
											variable_names:AngleTo
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:candidate
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															method_argument:
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:getLocation
																			parameters:
																		group:
																			name_var:
																				variable:
																					variable_names:getDirectionTo
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:to
																		group:
																			name_var:
																				variable:
																					variable_names:candidate
																		DOT:.
															EQUALS:=
															typeName:
																type_var:
																	class:
																		class_variable_names:Double
															variableName:
																name_var:
																	variable:
																		variable_names:direction
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																OPERATOR:>= 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleLeft
																OPERATOR:& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleRight
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																OPERATOR:<= 
														RETURN:return 
										FORSLASH:/
										SEMICOLON:;
										FORSLASH:/
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:to
											EQUALS:=
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Position
														type_var:
															class:
																class_variable_names:Environment
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
										SEMICOLON:;
										parentName:
											type_var:
												exact:
													variable_names:EntityCriteria
													BACKSLASH:\
										SEMICOLON:;
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										objectType:
											CLASS:class 
										NEWLINE:$\n
										variable_declaration:
											EQUALS:=
											typeName:
												type_var:
													class:
														class_variable_names:Double
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
											variableName:
												name_var:
													variable:
														variable_names:angleRight
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:angleLeft
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
											typeName:
												type_var:
													class:
														class_variable_names:Double
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
								variableName:
									name_var:
										variable:
											variable_names:data
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createList
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										parentName:
											type_var:
												exact:
													variable_names:EntityCriteria
													BACKSLASH:\
										objectType:
											CLASS:class 
										className:
											variable_names:Free
										FORSLASH:/
										FORSLASH:/
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:candidate
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
									type_var:
										exact:
											BACKSLASH:\
											variable_names:EntityCriteria
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:name
																ACCESS:->
																name_var:
																	variable:
																		variable_names:Skills
													group:
														name_var:
															variable:
																variable_names:id
													DOT:.
									SEMICOLON:;
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					DOT:.
				imports:
					IMPORT_CLASS:
						class_declaration:
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:attacks
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:attacker
									body_element:
										NEWLINE:$\n
									body_element:
										body_conditional:
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:defender
																							COMMA:,
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attacker
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:damage
																						NEW:new 
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:Events
																									type_var:
																										exact:
																											BACKSLASH:\
																											variable_names:Miss
																									ACCESS:->
																	name_var:
																		variable:
																			variable_names:on
																DOT:.
																group:
																	name_var:
																		exact:
																			WILD:defender
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
															OPERATOR:+= 
															BACKSLASH:\
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:experience
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
											conditional:
												ELSE:else
									body_element:
										body_line:
											variable_assignment:
												name_var:
													exact:
														WILD:cooldown
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:getCost
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:attacker
												EQUALS:=
											SEMICOLON:;
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															exact:
																WILD:attacker
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			NEW:new 
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:defender
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:attacker
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:damage
																				COMMA:,
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							exact:
																								variable_names:PostAttack
																								BACKSLASH:\
																						type_var:
																							class:
																								class_variable_names:Events
																						ACCESS:->
														name_var:
															variable:
																variable_names:on
											SEMICOLON:;
									COMMA:,
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												EQUALS:=
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:attacker
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:defender
																name_var:
																	exact:
																		WILD:getDamage
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Attack
															type_var:
																class:
																	class_variable_names:Damage
															ACCESS:->
												variableName:
													name_var:
														exact:
															WILD:damage
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:defender
									methodName:
										name_var:
											variable:
												variable_names:attack
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:on
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			parameters:
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:attacker
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:defender
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:damage
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							exact:
																								BACKSLASH:\
																								variable_names:PreAttack
																						type_var:
																							class:
																								class_variable_names:Events
																						ACCESS:->
																			NEW:new 
													group:
														name_var:
															exact:
																WILD:attacker
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										body_conditional:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getHit
													group:
														name_var:
															exact:
																WILD:damage
											conditional:
												IF:if
											as_body:
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:experience
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:3
															BACKSLASH:\
															OPERATOR:+= 
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:Events
																									type_var:
																										exact:
																											variable_names:Hit
																											BACKSLASH:\
																									ACCESS:->
																						NEW:new 
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attacker
																							COMMA:,
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:damage
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:defender
																	name_var:
																		variable:
																			variable_names:on
																group:
																	name_var:
																		exact:
																			WILD:defender
																DOT:.
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
									body_element:
										NEWLINE:$\n
							objectType:
								CLASS:class 
							packageName:
								name_var:
									exact:
										WILD:behaviours
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:skills
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										body_conditional:
											conditional:
												IF:if
											as_body:
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:cooldown
															OPERATOR:-= 
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0 
												body_call:
													group:
														name_var:
															exact:
																WILD:cooldown
												OPERATOR:>
									body_element:
										NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:event
										typeName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Events
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Tick
									typeName:
										type_var:
											class:
												class_variable_names:void
									methodName:
										name_var:
											variable:
												variable_names:on
									body_element:
										NEWLINE:$\n
							parentName:
								type_var:
									class:
										class_variable_names:Skill
							NEWLINE:$\n
							class_declaration:
								className:
									variable_names:Id
								objectType:
									CLASS:class 
								FORSLASH:/
								NEWLINE:$\n
								FORSLASH:/
							className:
								variable_names:Attack
							NEWLINE:$\n
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:entities
							NEWLINE:$\n
							NEWLINE:$\n
							DOT:.
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:getCost
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:(int)(float)cost
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:use
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:entity
											SEMICOLON:;
											RETURN:return 
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:entity
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:Integer
							NEWLINE:$\n
							DOT:.
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													OPERATOR:== 
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:isOffCooldown
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									body_element:
										NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
											SEMICOLON:;
									COMMA:,
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:defender
									methodName:
										name_var:
											variable:
												variable_names:getDamage
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Damage
												ACCESS:->
												type_var:
													class:
														class_variable_names:Attack
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:attacker
										typeName:
											type_var:
												class:
													class_variable_names:Entity
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
									methodName:
										name_var:
											variable:
												variable_names:getAttackId
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Attack
												type_var:
													class:
														class_variable_names:Id
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:getCooldown
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											RETURN:return 
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:offender
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:victim
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									typeName:
										type_var:
											class:
												class_variable_names:void
									methodName:
										name_var:
											variable:
												variable_names:use
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:attack
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:victim
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:offender
															COMMA:,
									COMMA:,
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:range
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:entity
															name_var:
																variable:
																	variable_names:use
														DOT:.
											RETURN:return 
											SEMICOLON:;
									typeName:
										type_var:
											class:
												class_variable_names:Float
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:entity
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									methodName:
										name_var:
											variable:
												variable_names:getRange
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
							class_declaration:
								variable_declaration:
									EQUALS:=
									variableName:
										name_var:
											exact:
												WILD:hit
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
								NEWLINE:$\n
								NEWLINE:$\n
								NEWLINE:$\n
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Float
									variableName:
										name_var:
											exact:
												WILD:value
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									EQUALS:=
								FORSLASH:/
								NEWLINE:$\n
								NEWLINE:$\n
								NEWLINE:$\n
								variable_declaration:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									typeName:
										type_var:
											class:
												class_variable_names:Float
									variableName:
										name_var:
											exact:
												WILD:modifier
									EQUALS:=
								FORSLASH:/
								className:
									variable_names:Damage
								SEMICOLON:;
								SEMICOLON:;
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:void
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:newValue
											typeName:
												type_var:
													class:
														class_variable_names:Float
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:setValue
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													name_var:
														exact:
															WILD:value
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newValue
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:void
										methodName:
											name_var:
												variable:
													variable_names:setHit
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newHit
													name_var:
														exact:
															WILD:hit
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Boolean
											variableName:
												name_var:
													exact:
														WILD:newHit
								SEMICOLON:;
								NEWLINE:$\n
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														OPERATOR:* 
														body_call:
															group:
																name_var:
																	exact:
																		WILD:modifier
														body_call:
															group:
																name_var:
																	exact:
																		WILD:value
										methodName:
											name_var:
												variable:
													variable_names:getTotal
										body_element:
											NEWLINE:$\n
										typeName:
											type_var:
												class:
													class_variable_names:Float
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													name_var:
														exact:
															WILD:modifier
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newModifier
													EQUALS:=
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Float
											variableName:
												name_var:
													exact:
														WILD:newModifier
										typeName:
											type_var:
												class:
													class_variable_names:void
										methodName:
											name_var:
												variable:
													variable_names:setModifier
										body_element:
											NEWLINE:$\n
								objectType:
									CLASS:class 
							NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						class_declaration:
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:name
										typeName:
											type_var:
												class:
													class_variable_names:String
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:getId
									inner:
										IN:>
									typeName:
										STATEMENT_TYPE:Statement
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												as_statement:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Attacks
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:name
															group:
																name_var:
																	variable:
																		variable_names:id
							className:
								variable_names:Attacks
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							NEWLINE:$\n
							objectType:
								CLASS:class 
							packageName:
								name_var:
									exact:
										WILD:attacks
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:skills
							method_declaration:
								methodDefinition:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												exact:
													WILD:attackName
									static:
										STA:@
									methodName:
										name_var:
											variable:
												variable_names:create
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
									typeName:
										type_var:
											class:
												class_variable_names:Attack
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										body_manipulate:
											body:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:damage
														SEMICOLON:;
														RETURN:return 
											methodName:
												ADD:+=
											type_var:
												access_multi:
													ACCESS:->
													ACCESS:->
													type_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:attackName
													as_method:
														name_var:
															exact:
																WILD:getDamage
														AS_METHOD_NAME:*
														ACCESS:->
													type_var:
														class:
															class_variable_names:Attacks
									body_element:
										body_line:
											SEMICOLON:;
											variable_declaration:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
												variableName:
													name_var:
														variable:
															variable_names:isFirst
												WEAK:~
												EQUALS:=
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											variable_declaration:
												EQUALS:=
												typeName:
													STATEMENT_TYPE:Statement
												method_argument:
													body_statement:
														body_call:
															group:
																typeName:
																	STATEMENT_TYPE:Statement
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:+
																NEW:new 
												variableName:
													name_var:
														variable:
															variable_names:description
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									inner:
										IN:>
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:IToken
										variableName:
											name_var:
												variable:
													variable_names:declarationToken
									body_element:
										body_manipulate:
											tokenInstance:
												NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												COLON::
												body_element:
													body_manipulate:
														COLON::
														name_var:
															variable:
																variable_names:element
														tokenInstance:
															COLON::
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_manipulate:
																							body:
																								body_element:
																									body_conditional:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:bool
																										as_body:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_line:
																																SEMICOLON:;
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:setMiss
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													conditional:
																														IF:if
																										conditional:
																											IF:if
																											ELSE:else
																							methodName:
																								ADD:+=
																							type_var:
																								access_multi:
																									as_method:
																										name_var:
																											exact:
																												WILD:getDamage
																										ACCESS:->
																										AS_METHOD_NAME:*
																									type_var:
																										class:
																											class_variable_names:Attacks
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:attackName
																									ACCESS:->
																									ACCESS:->
																				conditional:
																					ELSE:else
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_declaration:
																					typeName:
																						STATEMENT_TYPE:Statement
																					EQUALS:=
																					variableName:
																						name_var:
																							variable:
																								variable_names:bool
																					method_argument:
																						as_statement:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						name_var:
																																							variable:
																																								variable_names:atom
																																						ACCESS:->
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:damageContext
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																		body_element:
																			body_conditional:
																				conditional:
																					IF:if
																				as_body:
																					body_element:
																						body_manipulate:
																							type_var:
																								access_multi:
																									ACCESS:->
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:attackName
																									as_method:
																										AS_METHOD_NAME:*
																										name_var:
																											exact:
																												WILD:getDamage
																										ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Attacks
																									ACCESS:->
																							methodName:
																								ADD:+=
																							body:
																								body_element:
																									body_conditional:
																										as_body:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_line:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:setMiss
																																SEMICOLON:;
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																										conditional:
																											IF:if
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:bool
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_line:
																							variable_assignment:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:false
																								EQUALS:=
																								name_var:
																									variable:
																										variable_names:isFirst
																							SEMICOLON:;
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:isFirst
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	conditional:
																		IF:if
																	body_statement:
																		OPERATOR:!= 
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:atom
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:boolean_statement
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_declaration:
																		method_argument:
																			as_statement:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		access:
																																			ACCESS:->
																																			name_var:
																																				variable:
																																					variable_names:atom
																																			name_var:
																																				exact:
																																					WILD:has_chance
																												name_var:
																													exact:
																														variable_names:getChance
																														BACKSLASH:\
																		variableName:
																			name_var:
																				variable:
																					variable_names:chance
																		EQUALS:=
																		typeName:
																			STATEMENT_TYPE:Statement
															tokenName:
																NAME:option
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	conditional:
																		ELSE:else
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:isFirst
																				conditional:
																					IF:if
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_line:
																							variable_assignment:
																								name_var:
																									variable:
																										variable_names:isFirst
																								EQUALS:=
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:false
																							SEMICOLON:;
																					body_element:
																						body_manipulate:
																							body:
																								body_element:
																									body_conditional:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:chance
																										as_body:
																											body_element:
																												body_line:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:setMiss
																													SEMICOLON:;
																										conditional:
																											IF:if
																							type_var:
																								access_multi:
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:attackName
																									as_method:
																										ACCESS:->
																										AS_METHOD_NAME:*
																										name_var:
																											exact:
																												WILD:getDamage
																									ACCESS:->
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Attacks
																							methodName:
																								ADD:+=
																					body_element:
																						NEWLINE:$\n
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						body_manipulate:
																							body:
																								body_element:
																									body_conditional:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:chance
																										as_body:
																											body_element:
																												body_line:
																													SEMICOLON:;
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:setMiss
																										conditional:
																											IF:if
																											ELSE:else
																							methodName:
																								ADD:+=
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:Attacks
																									ACCESS:->
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:attackName
																									as_method:
																										name_var:
																											exact:
																												WILD:getDamage
																										ACCESS:->
																										AS_METHOD_NAME:*
																									ACCESS:->
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																				conditional:
																					ELSE:else
															body_element:
																NEWLINE:$\n
														variableName:
															NAME:atom
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														variable_declaration:
															EQUALS:=
															variableName:
																name_var:
																	variable:
																		variable_names:setMiss
															method_argument:
																as_statement:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
																				name_var:
																					variable:
																						variable_names:setHit
															typeName:
																STATEMENT_TYPE:Statement
												tokenName:
													NAME:miss
											tokenInstance:
												NEWLINE:$\n
												COLON::
												tokenName:
													NAME:damage
												body_element:
													NEWLINE:$\n
												body_element:
													body_manipulate:
														tokenInstance:
															body_element:
																body_manipulate:
																	type_var:
																		access_multi:
																			type_var:
																				class:
																					class_variable_names:Attacks
																			ACCESS:->
																			ACCESS:->
																			as_method:
																				AS_METHOD_NAME:*
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:getDamage
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:attackName
																	body:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:damage
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													as_method:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:getRange
																																	parameters:
																																		method_argument:
																																			body_statement:
																																				body_call:
																																					group:
																																						name_var:
																																							variable:
																																								variable_names:atom
																																DOT:.
																																group:
																																	name_var:
																																		variable:
																																			variable_names:Entity
																											group:
																												name_var:
																													variable:
																														variable_names:use
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		exact:
																																			WILD:attacker
																											DOT:.
																										OPERATOR:* 
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:attacker
																											group:
																												parameters:
																												name_var:
																													variable:
																														variable_names:getItemDamage
																											DOT:.
																							name_var:
																								variable:
																									variable_names:setValue
																	methodName:
																		ADD:+=
															tokenName:
																NAME:by_stat
															NEWLINE:$\n
															COLON::
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
														tokenInstance:
															body_element:
																NEWLINE:$\n
															NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															COLON::
															body_element:
																body_manipulate:
																	methodName:
																		ADD:+=
																	body:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_method:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:damageContext
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:getBodyElement
																	type_var:
																		access_multi:
																			ACCESS:->
																			type_var:
																				class:
																					class_variable_names:Attacks
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:attackName
																			as_method:
																				name_var:
																					exact:
																						WILD:getDamage
																				AS_METHOD_NAME:*
																				ACCESS:->
																			ACCESS:->
															tokenName:
																NAME:body_element
														COLON::
														variableName:
															NAME:atom
														name_var:
															variable:
																variable_names:element
												body_element:
													NEWLINE:$\n
											tokenInstance:
												NEWLINE:$\n
												tokenName:
													NAME:cooldown
												body_element:
													NEWLINE:$\n
												COLON::
												body_element:
													body_manipulate:
														methodName:
															ADD:+=
														type_var:
															access_multi:
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:attackName
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Attacks
																ACCESS:->
																as_method:
																	AS_METHOD_NAME:*
																	ACCESS:->
														body:
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		EQUALS:=
																		name_var:
																			exact:
																				WILD:cost
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_method:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:getRange
																											parameters:
																												method_argument:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:element
																										DOT:.
																										group:
																											name_var:
																												variable:
																													variable_names:Entity
												body_element:
													NEWLINE:$\n
											name_var:
												variable:
													variable_names:declarationToken
											COLON::
											tokenInstance:
												NEWLINE:$\n
												tokenName:
													NAME:range
												COLON::
												body_element:
													NEWLINE:$\n
												body_element:
													body_manipulate:
														methodName:
															ADD:+=
														body:
															body_element:
																body_line:
																	variable_assignment:
																		EQUALS:=
																		name_var:
																			exact:
																				WILD:range
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_method:
																								body_statement:
																									body_call:
																										DOT:.
																										group:
																											name_var:
																												variable:
																													variable_names:Entity
																										group:
																											name_var:
																												variable:
																													variable_names:getRange
																											parameters:
																												method_argument:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:element
																	SEMICOLON:;
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Attacks
																ACCESS:->
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:attackName
																as_method:
																	ACCESS:->
																	AS_METHOD_NAME:*
												body_element:
													NEWLINE:$\n
											variableName:
												NAME:element
									body_element:
										body_line:
											SEMICOLON:;
											variable_declaration:
												EQUALS:=
												variableName:
													name_var:
														variable:
															variable_names:attackName
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:attackName
																		CAMEL:^
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:declarationToken
												typeName:
													type_var:
														class:
															class_variable_names:String
									body_element:
										body_manipulate:
											type_var:
												class:
													class_variable_names:Attacks
											methodName:
												ADD:+=
											class_declaration:
												FORSLASH:/
												method_declaration:
													methodDefinition:
														body_element:
															body_return:
																RETURN:return 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
																SEMICOLON:;
														methodName:
															name_var:
																variable:
																	variable_names:getAttackId
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Id
																	type_var:
																		class:
																			class_variable_names:Attack
																	ACCESS:->
												objectType:
													CLASS:class 
												parentName:
													type_var:
														class:
															class_variable_names:Attack
												variable_declaration:
													EQUALS:=
													static:
														STA:@
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Skill
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Id
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	parameters:
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Skill
																				type_var:
																					class:
																						class_variable_names:Id
													variableName:
														name_var:
															exact:
																WILD:skillId
												NEWLINE:$\n
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_return:
																SEMICOLON:;
																RETURN:return 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:attackName
														methodName:
															name_var:
																variable:
																	variable_names:getName
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getDamage
														body_element:
															body_line:
																SEMICOLON:;
																variable_declaration:
																	EQUALS:=
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					typeName:
																						type_var:
																							access_multi:
																								type_var:
																									class:
																										class_variable_names:Attack
																								type_var:
																									class:
																										class_variable_names:Damage
																								ACCESS:->
																					NEW:new 
																					parameters:
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Damage
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Attack
																	variableName:
																		name_var:
																			exact:
																				WILD:damage
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Attack
																	type_var:
																		class:
																			class_variable_names:Damage
																	ACCESS:->
														body_element:
															NEWLINE:$\n
														variable_declaration:
															variableName:
																name_var:
																	exact:
																		WILD:attacker
															typeName:
																type_var:
																	class:
																		class_variable_names:Entity
														body_element:
															NEWLINE:$\n
														COMMA:,
														variable_declaration:
															variableName:
																name_var:
																	exact:
																		WILD:defender
															typeName:
																type_var:
																	class:
																		class_variable_names:Entity
												NEWLINE:$\n
												FORSLASH:/
												SEMICOLON:;
												NEWLINE:$\n
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Id
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Skill
														body_element:
															body_return:
																SEMICOLON:;
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:skillId
																RETURN:return 
														methodName:
															name_var:
																variable:
																	variable_names:getId
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
												NEWLINE:$\n
												variable_declaration:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Id
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Attack
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Attack
																				type_var:
																					class:
																						class_variable_names:Id
																				ACCESS:->
																	NEW:new 
													variableName:
														name_var:
															exact:
																WILD:id
													EQUALS:=
													static:
														STA:@
												NEWLINE:$\n
												method_declaration:
													methodDefinition:
														body_element:
															NEWLINE:$\n
														methodName:
															name_var:
																variable:
																	variable_names:getDescription
														body_element:
															NEWLINE:$\n
														typeName:
															type_var:
																class:
																	class_variable_names:String
														body_element:
															body_return:
																SEMICOLON:;
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:description
																RETURN:return 
												NEWLINE:$\n
												className:
													variable_names:attackName
												NEWLINE:$\n
												SEMICOLON:;
												NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:prependToBody
														parameters:
															method_argument:
																as_statement:
																	body_element:
																		body_conditional:
																			body_statement:
																				body_call:
																					DOT:.
																					group:
																						name_var:
																							as_quote:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:attackName
																					group:
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attackName
																						name_var:
																							variable:
																								variable_names:equals
																			conditional:
																				IF:if
																			as_body:
																				body_element:
																					NEWLINE:$\n
																				body_element:
																					body_return:
																						SEMICOLON:;
																						RETURN:return 
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										NEW:new 
																										parameters:
																										typeName:
																											type_var:
																												access_multi:
																													type_var:
																														class:
																															class_variable_names:Attacks
																													ACCESS:->
																													type_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:attackName
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getMethod
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:create
													group:
														name_var:
															variable:
																variable_names:Attacks
									methodName:
										name_var:
											variable:
												variable_names:declaration
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												typeName:
													CONTEXT_TYPE:Context 
												variableName:
													name_var:
														variable:
															variable_names:damageContext
												EQUALS:=
												method_argument:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Attacks
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:attackName
															group:
																parameters:
																name_var:
																	variable:
																		variable_names:getContext
															DOT:.
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:getDamage
																name_var:
																	variable:
																		variable_names:getMethod
											SEMICOLON:;
									body_element:
										body_manipulate:
											name_var:
												variable:
													variable_names:declarationToken
											COLON::
											tokenInstance:
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:add
																	parameters:
																		method_argument:
																			as_statement:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_quote:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:element
																group:
																	name_var:
																		variable:
																			variable_names:description
																DOT:.
												tokenName:
													NAME:description
												body_element:
													NEWLINE:$\n
												COLON::
												body_element:
													NEWLINE:$\n
											variableName:
												NAME:element
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:behaviours
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:entities
							DOT:.
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
						class_declaration:
							packageName:
								name_var:
									exact:
										WILD:skills
							packageName:
								name_var:
									exact:
										WILD:behaviours
							NEWLINE:$\n
							class_declaration:
								NEWLINE:$\n
								className:
									variable_names:Id
								objectType:
									CLASS:class 
								FORSLASH:/
								FORSLASH:/
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:Support
												ACCESS:->
									methodName:
										name_var:
											variable:
												variable_names:getSupportId
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:supports
							packageName:
								name_var:
									exact:
										WILD:entities
							objectType:
								CLASS:class 
							parentName:
								type_var:
									class:
										class_variable_names:Skill
							DOT:.
							DOT:.
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										body_conditional:
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:cooldown
															OPERATOR:-= 
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
														SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:cooldown
												OPERATOR:>
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0 
											conditional:
												IF:if
									variable_declaration:
										typeName:
											type_var:
												access_multi:
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Tick
													type_var:
														class:
															class_variable_names:Events
													ACCESS:->
										variableName:
											name_var:
												exact:
													WILD:event
									methodName:
										name_var:
											variable:
												variable_names:on
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							className:
								variable_names:Support
							NEWLINE:$\n
						class_declaration:
							packageName:
								name_var:
									exact:
										WILD:supports
							NEWLINE:$\n
							NEWLINE:$\n
							className:
								variable_names:Supports
							packageName:
								name_var:
									exact:
										WILD:behaviours
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										body_line:
											variable_declaration:
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:+
																typeName:
																	STATEMENT_TYPE:Statement
																NEW:new 
												variableName:
													name_var:
														variable:
															variable_names:description
												EQUALS:=
												typeName:
													STATEMENT_TYPE:Statement
											SEMICOLON:;
									body_element:
										body_manipulate:
											name_var:
												variable:
													variable_names:declarationToken
											COLON::
											tokenInstance:
												COLON::
												NEWLINE:$\n
												tokenName:
													NAME:cooldown
												body_element:
													body_manipulate:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:supportName
																type_var:
																	class:
																		class_variable_names:Supports
																ACCESS:->
																as_method:
																	ACCESS:->
																	AS_METHOD_NAME:*
														body:
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_method:
																								body_statement:
																									body_call:
																										DOT:.
																										group:
																											name_var:
																												variable:
																													variable_names:Entity
																										group:
																											parameters:
																												method_argument:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:element
																											name_var:
																												variable:
																													variable_names:getRange
																		name_var:
																			exact:
																				WILD:cost
																		EQUALS:=
														methodName:
															ADD:+=
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
											tokenInstance:
												body_element:
													NEWLINE:$\n
												COLON::
												body_element:
													NEWLINE:$\n
												body_element:
													body_manipulate:
														methodName:
															ADD:+=
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Supports
																ACCESS:->
																as_method:
																	ACCESS:->
																	AS_METHOD_NAME:*
																ACCESS:->
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:supportName
														body:
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		name_var:
																			exact:
																				WILD:range
																		EQUALS:=
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_method:
																								body_statement:
																									body_call:
																										group:
																											parameters:
																												method_argument:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:element
																											name_var:
																												variable:
																													variable_names:getRange
																										group:
																											name_var:
																												variable:
																													variable_names:Entity
																										DOT:.
												NEWLINE:$\n
												tokenName:
													NAME:range
											variableName:
												NAME:element
											tokenInstance:
												body_element:
													body_manipulate:
														name_var:
															variable:
																variable_names:element
														tokenInstance:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	conditional:
																		ELSE:else
																	as_body:
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_manipulate:
																							type_var:
																								access_multi:
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:supportName
																									ACCESS:->
																									as_method:
																										ACCESS:->
																										name_var:
																											exact:
																												WILD:use[Entity,Entity]
																										AS_METHOD_NAME:*
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Supports
																							body:
																								body_element:
																									body_conditional:
																										conditional:
																											IF:if
																											ELSE:else
																										as_body:
																											body_element:
																												body_line:
																													SEMICOLON:;
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:setMiss
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:chance
																							methodName:
																								ADD:+=
																				conditional:
																					ELSE:else
																		body_element:
																			body_conditional:
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:isFirst
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_manipulate:
																							type_var:
																								access_multi:
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:supportName
																									ACCESS:->
																									as_method:
																										ACCESS:->
																										name_var:
																											exact:
																												WILD:use[Entity,Entity]
																										AS_METHOD_NAME:*
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Supports
																							methodName:
																								ADD:+=
																							body:
																								body_element:
																									body_conditional:
																										conditional:
																											IF:if
																										as_body:
																											body_element:
																												body_line:
																													SEMICOLON:;
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:setMiss
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:chance
																					body_element:
																						body_line:
																							variable_assignment:
																								EQUALS:=
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:false
																								name_var:
																									variable:
																										variable_names:isFirst
																							SEMICOLON:;
																					body_element:
																						NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															COLON::
															tokenName:
																NAME:option
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_declaration:
																		method_argument:
																			as_statement:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		access:
																																			name_var:
																																				exact:
																																					WILD:has_chance
																																			ACCESS:->
																																			name_var:
																																				variable:
																																					variable_names:atom
																												name_var:
																													exact:
																														variable_names:getChance
																														BACKSLASH:\
																		typeName:
																			STATEMENT_TYPE:Statement
																		variableName:
																			name_var:
																				variable:
																					variable_names:chance
																		EQUALS:=
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:isFirst
																				as_body:
																					body_element:
																						body_manipulate:
																							body:
																								body_element:
																									body_conditional:
																										conditional:
																											IF:if
																										as_body:
																											body_element:
																												body_conditional:
																													conditional:
																														IF:if
																													as_body:
																														body_element:
																															body_line:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:setMiss
																																SEMICOLON:;
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:bool
																							methodName:
																								ADD:+=
																							type_var:
																								access_multi:
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:supportName
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Supports
																									ACCESS:->
																									as_method:
																										name_var:
																											exact:
																												WILD:use[Entity,Entity]
																										AS_METHOD_NAME:*
																										ACCESS:->
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_line:
																							SEMICOLON:;
																							variable_assignment:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:false
																								EQUALS:=
																								name_var:
																									variable:
																										variable_names:isFirst
																					body_element:
																						NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_declaration:
																					EQUALS:=
																					method_argument:
																						as_statement:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:useContext
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:atom
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						ACCESS:->
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																					variableName:
																						name_var:
																							variable:
																								variable_names:bool
																					typeName:
																						STATEMENT_TYPE:Statement
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						body_manipulate:
																							body:
																								body_element:
																									body_conditional:
																										conditional:
																											IF:if
																											ELSE:else
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:bool
																										as_body:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_line:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:setMiss
																																SEMICOLON:;
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																							methodName:
																								ADD:+=
																							type_var:
																								access_multi:
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Supports
																									ACCESS:->
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:supportName
																									as_method:
																										name_var:
																											exact:
																												WILD:use[Entity,Entity]
																										ACCESS:->
																										AS_METHOD_NAME:*
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																				conditional:
																					ELSE:else
																	body_statement:
																		OPERATOR:!= 
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:atom
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:boolean_statement
																	conditional:
																		IF:if
														COLON::
														variableName:
															NAME:atom
												body_element:
													body_line:
														variable_declaration:
															method_argument:
																as_statement:
																	body_element:
																		body_return:
																			SEMICOLON:;
																			RETURN:return 
																			VOID:void
															typeName:
																STATEMENT_TYPE:Statement
															variableName:
																name_var:
																	variable:
																		variable_names:setMiss
															EQUALS:=
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												tokenName:
													NAME:miss
												body_element:
													NEWLINE:$\n
												NEWLINE:$\n
												COLON::
												body_element:
													NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:declaration
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:declarationToken
										typeName:
											type_var:
												class:
													class_variable_names:IToken
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_manipulate:
											variableName:
												NAME:element
											COLON::
											tokenInstance:
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:description
																group:
																	name_var:
																		variable:
																			variable_names:add
																	parameters:
																		method_argument:
																			as_statement:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_quote:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:element
												body_element:
													NEWLINE:$\n
												tokenName:
													NAME:description
												COLON::
											name_var:
												variable:
													variable_names:declarationToken
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												variableName:
													name_var:
														variable:
															variable_names:isFirst
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
												WEAK:~
												EQUALS:=
											SEMICOLON:;
									body_element:
										body_line:
											SEMICOLON:;
											variable_declaration:
												EQUALS:=
												typeName:
													CONTEXT_TYPE:Context 
												variableName:
													name_var:
														variable:
															variable_names:useContext
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Supports
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:supportName
																		ACCESS:->
																		ACCESS:->
														OPERATOR:->*
														body_call:
															group:
																name_var:
																	exact:
																		WILD:use[Entity,Entity]
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:getContext
																parameters:
									inner:
										IN:>
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_manipulate:
											type_var:
												class:
													class_variable_names:Supports
											methodName:
												ADD:+=
											class_declaration:
												NEWLINE:$\n
												NEWLINE:$\n
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Support
																				type_var:
																					class:
																						class_variable_names:Id
																	parameters:
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Id
																type_var:
																	class:
																		class_variable_names:Support
													variableName:
														name_var:
															exact:
																WILD:id
													static:
														STA:@
													EQUALS:=
												method_declaration:
													methodDefinition:
														body_element:
															body_return:
																RETURN:return 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:skillId
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Skill
																	type_var:
																		class:
																			class_variable_names:Id
																	ACCESS:->
														body_element:
															NEWLINE:$\n
														methodName:
															name_var:
																variable:
																	variable_names:getId
												NEWLINE:$\n
												SEMICOLON:;
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Support
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Id
														methodName:
															name_var:
																variable:
																	variable_names:getSupportId
														body_element:
															NEWLINE:$\n
														body_element:
															body_return:
																RETURN:return 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
												className:
													variable_names:supportName
												method_declaration:
													methodDefinition:
														body_element:
															body_return:
																RETURN:return 
																SEMICOLON:;
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:supportName
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														methodName:
															name_var:
																variable:
																	variable_names:getName
														typeName:
															type_var:
																class:
																	class_variable_names:String
												objectType:
													CLASS:class 
												parentName:
													type_var:
														class:
															class_variable_names:Support
												FORSLASH:/
												NEWLINE:$\n
												NEWLINE:$\n
												SEMICOLON:;
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getDescription
														typeName:
															type_var:
																class:
																	class_variable_names:String
														body_element:
															NEWLINE:$\n
														body_element:
															body_return:
																RETURN:return 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:description
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Id
																				type_var:
																					class:
																						class_variable_names:Skill
																				ACCESS:->
													static:
														STA:@
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Id
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Skill
													EQUALS:=
													variableName:
														name_var:
															exact:
																WILD:skillId
												NEWLINE:$\n
												FORSLASH:/
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																class:
																	class_variable_names:void
														COMMA:,
														variable_declaration:
															variableName:
																name_var:
																	exact:
																		WILD:user
															typeName:
																type_var:
																	class:
																		class_variable_names:Entity
														methodName:
															name_var:
																variable:
																	variable_names:use
														body_element:
															NEWLINE:$\n
														variable_declaration:
															typeName:
																type_var:
																	class:
																		class_variable_names:Entity
															variableName:
																name_var:
																	exact:
																		WILD:victim
												NEWLINE:$\n
												NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:prependToBody
														parameters:
															method_argument:
																as_statement:
																	body_element:
																		body_conditional:
																			body_statement:
																				body_call:
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:equals
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:supportName
																					group:
																						name_var:
																							as_quote:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:supportName
																			conditional:
																				IF:if
																			as_body:
																				body_element:
																					body_return:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										typeName:
																											type_var:
																												access_multi:
																													type_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:supportName
																													type_var:
																														class:
																															class_variable_names:Supports
																													ACCESS:->
																										parameters:
																										NEW:new 
																						SEMICOLON:;
																						RETURN:return 
																				body_element:
																					NEWLINE:$\n
													group:
														name_var:
															variable:
																variable_names:Supports
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:create
														name_var:
															variable:
																variable_names:getMethod
									body_element:
										body_line:
											variable_declaration:
												variableName:
													name_var:
														variable:
															variable_names:supportName
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:supportName
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:declarationToken
																		CAMEL:^
												EQUALS:=
												typeName:
													type_var:
														class:
															class_variable_names:String
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							DOT:.
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
									typeName:
										type_var:
											class:
												class_variable_names:Support
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												exact:
													WILD:supportName
									methodName:
										name_var:
											variable:
												variable_names:create
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									static:
										STA:@
							packageName:
								name_var:
									exact:
										WILD:entities
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:skills
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:getId
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:name
										typeName:
											type_var:
												class:
													class_variable_names:String
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												as_statement:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Supports
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:name
															group:
																name_var:
																	variable:
																		variable_names:id
															DOT:.
											RETURN:return 
									typeName:
										STATEMENT_TYPE:Statement
									inner:
										IN:>
							DOT:.
							objectType:
								CLASS:class 
							NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getDescription
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												RETURN:return 
												SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:isOffCooldown
														BACKSLASH:\
												parameters:
									conditional:
										IF:if
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:potential
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												OPERATOR:: 
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:user
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getLocation
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getEntitiesWithin
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getRange
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:targetCriteria
												as_body:
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				variable_names:use
																				BACKSLASH:\
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:potential
																			COMMA:,
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															SEMICOLON:;
															RETURN:return 
													body_element:
														NEWLINE:$\n
												conditional:
													FOR:for
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
									RETURN:return 
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:activity
								typeName:
									type_var:
										class:
											class_variable_names:Activity
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:user
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							COMMA:,
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:targetCriteria
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:getTargetEntity
																				parameters:
																			group:
																				name_var:
																					variable:
																						variable_names:activity
																			DOT:.
															name_var:
																variable:
																	variable_names:satisfies
														DOT:.
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activity
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:getTargetEntity
																							parameters:
																			COMMA:,
																		name_var:
																			exact:
																				variable_names:use
																				BACKSLASH:\
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												RETURN:return 
												SEMICOLON:;
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:hasTarget
											group:
												name_var:
													variable:
														variable_names:activity
											DOT:.
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					SEMICOLON:;
					SEMICOLON:;
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getName
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getName
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:range
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
													name_var:
														variable:
															variable_names:use
												DOT:.
									RETURN:return 
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:getRange
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:entity
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:true
							methodName:
								name_var:
									variable:
										variable_names:canChase
					className:
						variable_names:Skill
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					method_declaration:
						methodDefinition:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:entity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
													name_var:
														variable:
															variable_names:use
												group:
													name_var:
														exact:
															WILD:(int)(float)cost
									RETURN:return 
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							methodName:
								name_var:
									variable:
										variable_names:getCost
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:cooldown
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:experience
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						WEAK:~
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								variableName:
									name_var:
										exact:
											WILD:newFocus
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										EQUALS:=
										name_var:
											exact:
												WILD:hasEntityFocus
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					variable_declaration:
						EQUALS:=
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						variableName:
							name_var:
								exact:
									WILD:hasEntityFocus
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:cost
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
									type_var:
										class:
											class_variable_names:Modifier
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:isOffCooldown
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:cooldown
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0
											OPERATOR:== 
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:range
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
									type_var:
										class:
											class_variable_names:Modifier
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							methodName:
								name_var:
									variable:
										variable_names:getDescription
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Skill
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
										EQUALS:=
										name_var:
											exact:
												WILD:hasEntityFocus
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								variableName:
									name_var:
										exact:
											WILD:newFocus
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setFocus
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					class_declaration:
						FORSLASH:/
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Id
									ACCESS:->
									type_var:
										class:
											class_variable_names:Usable
						FORSLASH:/
						NEWLINE:$\n
						objectType:
							CLASS:class 
						className:
							variable_names:Id
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:compareTo
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
											DOT:.
											group:
												name_var:
													exact:
														WILD:otherSkill
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
									conditional:
										IF:if
									as_body:
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:hasEntityFocus
												as_body:
													body_element:
														body_return:
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	OPERATOR:- 
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
															RETURN:return 
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
										body_element:
											body_conditional:
												conditional:
													ELSE:else
												as_body:
													body_element:
														body_return:
															RETURN:return 
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	OPERATOR:- 
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Skill
								variableName:
									name_var:
										exact:
											WILD:otherSkill
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
															group:
																name_var:
																	exact:
																		WILD:otherSkill
															DOT:.
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
														OPERATOR:- 
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							COMMA:,
							methodName:
								name_var:
									variable:
										variable_names:use
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:user
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:victim
								typeName:
									type_var:
										class:
											class_variable_names:Entity
					variable_declaration:
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:targetCriteria
						EQUALS:=
						typeName:
							type_var:
								exact:
									BACKSLASH:\
									variable_names:EntityCriteria
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:on
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													OPERATOR:+= 
													BACKSLASH:\
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										OPERATOR:> 
									conditional:
										IF:if
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Events
											type_var:
												exact:
													variable_names:Tick
													BACKSLASH:\
								variableName:
									name_var:
										exact:
											WILD:event
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:skills
					objectType:
						CLASS:class 
					DOT:.
				NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					DOT:.
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					method_declaration:
						methodDefinition:
							static:
								STA:@
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:activityName
								typeName:
									type_var:
										class:
											class_variable_names:String
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							typeName:
								type_var:
									class:
										class_variable_names:Activity
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:activities
					className:
						variable_names:Activities
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:activityName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:declarationToken
																ACCESS:->
																CAMEL:^
																name_var:
																	exact:
																		WILD:activityName
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:addVariableHeader
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																COMMA:,
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:variable_header
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:on
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									NEW:new 
																									typeName:
																										type_var:
																											access_multi:
																												ACCESS:->
																												type_var:
																													class:
																														class_variable_names:Events
																												type_var:
																													exact:
																														BACKSLASH:\
																														variable_names:Load
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:host
																	SEMICOLON:;
												name_var:
													variable:
														variable_names:appendToBody
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:IToken
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:toLowerCase
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
													variableName:
														name_var:
															variable:
																variable_names:variableName
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													OPERATOR:->*
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Entity
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
														DOT:.
														group:
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:Activities
																									ACCESS:->
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																						group:
																							name_var:
																								exact:
																									WILD:allUsables
																						group:
																							name_var:
																								variable:
																									variable_names:add
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													as_string:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:variableName
																						DOT:.
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
															name_var:
																variable:
																	variable_names:appendToBody
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:className
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:methodName
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:,Source]
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:element
																			PLUS:+
																			name_var:
																				exact:
																					WILD:gain[
																			PLUS:+
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:element
									COLON::
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Activities
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:create
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:activityName
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																				name_var:
																					variable:
																						variable_names:equals
																	as_body:
																		body_element:
																			body_return:
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Activities
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:activityName
																								parameters:
																								NEW:new 
																				RETURN:return 
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												variableName:
													NAME:atom
												tokenInstance:
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																		name_var:
																			variable:
																				variable_names:appendToBody
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:getTarget[Entity,EntityCriteria]
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													method_argument:
														body_statement:
															OPERATOR:->*
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:getTarget[Entity,EntityCriteria]
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getContext
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Activities
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
													typeName:
														CONTEXT_TYPE:Context 
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:getTarget
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Activities
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
												method_declaration:
													methodDefinition:
														variable_declaration:
															typeName:
																type_var:
																	class:
																		class_variable_names:Entity
															variableName:
																name_var:
																	variable:
																		variable_names:host
														variable_declaration:
															typeName:
																type_var:
																	exact:
																		variable_names:EntityCriteria
																		BACKSLASH:\
															variableName:
																name_var:
																	variable:
																		variable_names:targetCriteria
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														methodName:
															name_var:
																variable:
																	variable_names:getTarget
														COMMA:,
												methodName:
													ADD:+=
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:variable_declaration
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:setIsWeak
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
														group:
															name_var:
																variable:
																	variable_names:variable
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													OPERATOR:!= 
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		variable:
																			variable_names:element
																	ACCESS:->
																	name_var:
																		exact:
																			WILD:statement
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:setAssignment
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											DOT:.
																											group:
																												name_var:
																													access:
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:activityName
																														ACCESS:->
																														name_var:
																															variable:
																																variable_names:Activities
																											group:
																												parameters:
																												name_var:
																													variable:
																														variable_names:getContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:statement
																														name_var:
																															variable:
																																variable_names:element
																								COMMA:,
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getStatement
																	group:
																		name_var:
																			variable:
																				variable_names:variable
																	DOT:.
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:variable
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:addVariableHeader
																			BACKSLASH:\
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:Activities
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																								ACCESS:->
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:element
																								ACCESS:->
																								name_var:
																									exact:
																										WILD:variable_header
																		COMMA:,
													typeName:
														VARIABLE_TYPE:Variable 
										COLON::
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:hasSucceeded[Entity]
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	SEMICOLON:;
																	RETURN:return 
												name_var:
													variable:
														variable_names:appendToBody
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:event_names
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventContext
																					COMMA:,
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBodyElements
																COMMA:,
															name_var:
																variable:
																	variable_names:addToEventMethod
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:Events
												SEMICOLON:;
										COLON::
										tokenName:
											NAME:event
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													typeName:
														CONTEXT_TYPE:Context 
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:getEventContext
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													name_var:
																														variable:
																															variable_names:element
																													name_var:
																														exact:
																															WILD:event_names
																													ACCESS:->
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																								name_var:
																									variable:
																										variable_names:Activities
																								ACCESS:->
																		COMMA:,
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:Events
													EQUALS:=
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:element
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:description
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:description
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		exact:
																			WILD:SUCCEED
																	name_var:
																		variable:
																			variable_names:element
																	ACCESS:->
												as_body:
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																typeName:
																	CONTEXT_TYPE:Context 
																variableName:
																	name_var:
																		variable:
																			variable_names:successContext
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																			group:
																				name_var:
																					exact:
																						WILD:hasSucceeded[Entity]
																			DOT:.
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
															SEMICOLON:;
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Activities
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				ACCESS:->
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:successContext
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:element
																																						ACCESS:->
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																							as_body:
																								body_element:
																									body_return:
																										RETURN:return 
																										SEMICOLON:;
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:appendToBody
																	group:
																		name_var:
																			exact:
																				WILD:hasSucceeded[Entity]
																OPERATOR:->*
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
										COLON::
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:failContext
																method_argument:
																	body_statement:
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasFailed[Entity]
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																			DOT:.
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																typeName:
																	CONTEXT_TYPE:Context 
																EQUALS:=
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																				ACCESS:->
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:hasFailed[Entity]
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:element
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						ACCESS:->
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:failContext
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										SEMICOLON:;
																										RETURN:return 
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:appendToBody
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										tokenName:
											NAME:endState
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Activities
									class_declaration:
										parentName:
											type_var:
												class:
													class_variable_names:Activity
										FORSLASH:/
										NEWLINE:$\n
										SEMICOLON:;
										FORSLASH:/
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:hasSucceeded
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:host
													typeName:
														type_var:
															class:
																class_variable_names:Entity
										NEWLINE:$\n
										NEWLINE:$\n
										objectType:
											CLASS:class 
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:host
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											WEAK:~
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activityName
														SEMICOLON:;
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getName
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:allUsables
														SEMICOLON:;
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:List
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Usable
												methodName:
													name_var:
														variable:
															variable_names:getUsables
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Usable
																		type_var:
																			class:
																				class_variable_names:List
											static:
												STA:@
											variableName:
												name_var:
													variable:
														variable_names:allUsables
											EQUALS:=
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:List
														type_var:
															class:
																class_variable_names:Usable
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Id
															type_var:
																class:
																	class_variable_names:Activity
															ACCESS:->
												methodName:
													name_var:
														variable:
															variable_names:getId
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												methodName:
													name_var:
														variable:
															variable_names:getDescription
										NEWLINE:$\n
										className:
											variable_names:activityName
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:hasFailed
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:host
													typeName:
														type_var:
															class:
																class_variable_names:Entity
										SEMICOLON:;
										variable_declaration:
											EQUALS:=
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Activity
														type_var:
															class:
																class_variable_names:Id
														ACCESS:->
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
																		type_var:
																			class:
																				class_variable_names:Activity
											variableName:
												name_var:
													variable:
														variable_names:id
										SEMICOLON:;
										NEWLINE:$\n
									methodName:
										ADD:+=
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_manipulate:
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getDestination
														variable_declaration:
															typeName:
																type_var:
																	class:
																		class_variable_names:Entity
															variableName:
																name_var:
																	variable:
																		variable_names:host
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														type_var:
															class:
																class_variable_names:Activities
														ACCESS:->
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:getDestination
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
												COLON::
												tokenInstance:
													body_element:
														body_line:
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																body_call:
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:getDestination[Entity]
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								COMMA:,
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
															SEMICOLON:;
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:body_element
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													EQUALS:=
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		exact:
																			WILD:getDestination[Entity]
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getContext
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
																			name_var:
																				variable:
																					variable_names:Activities
																			ACCESS:->
																			ACCESS:->
															OPERATOR:->*
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
														ACCESS:->
														name_var:
															variable:
																variable_names:Activities
										body_call:
											group:
												name_var:
													exact:
														WILD:hasFailed[Entity]
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	SEMICOLON:;
																	RETURN:return 
											DOT:.
										OPERATOR:->*
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_entries:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:load
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
									SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:data
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:idle
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													method_argument:
														body_entries:
													COMMA:,
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:success
													COMMA:,
													COMMA:,
													method_argument:
														body_entries:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
												name_var:
													exact:
														variable_names:createCriteria
														BACKSLASH:\
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													COMMA:,
													method_argument:
														body_entries:
											DOT:.
									SEMICOLON:;
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:hasFailed
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:failed
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					class_declaration:
						objectType:
							CLASS:class 
						class_declaration:
							NEWLINE:$\n
							className:
								variable_names:Fail
							FORSLASH:/
							NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								variableName:
									name_var:
										variable:
											variable_names:host
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
							objectType:
								CLASS:class 
							NEWLINE:$\n
							FORSLASH:/
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											exact:
												variable_names:Fail
												BACKSLASH:\
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Listener
							SEMICOLON:;
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:host
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:event
														name_var:
															variable:
																variable_names:on
											SEMICOLON:;
									typeName:
										type_var:
											class:
												class_variable_names:void
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:event
										typeName:
											type_var:
												access_multi:
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Fail
													type_var:
														class:
															class_variable_names:Events
													ACCESS:->
									body_element:
										NEWLINE:$\n
						FORSLASH:/
						className:
							variable_names:Listeners
						FORSLASH:/
						NEWLINE:$\n
						NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						objectType:
							INTERFACE:interface 
						NEWLINE:$\n
						className:
							variable_names:Factory
						FORSLASH:/
						NEWLINE:$\n
						method_declaration:
							methodDefinition:
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								methodName:
									name_var:
										variable:
											variable_names:create
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getUsables
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:List
										type_var:
											class:
												class_variable_names:Usable
										ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:Tile
							methodName:
								name_var:
									variable:
										variable_names:getDestination
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Activity
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										NEW:new 
										parameters:
										typeName:
											type_var:
												class:
													class_variable_names:HashMap
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Set
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:Node
														COMMA:,
														template_parameter:
															type_var:
																class:
																	class_variable_names:Node
						variableName:
							name_var:
								variable:
									variable_names:nodeStoppers
						typeName:
							type_var:
								class:
									class_variable_names:Map
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:Set
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Node
										template_parameter:
											type_var:
												class:
													class_variable_names:Node
										COMMA:,
						WEAK:~
					objectType:
						CLASS:class 
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Usable
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:failed
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:true
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												parameters:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
											DOT:.
											group:
												name_var:
													variable:
														variable_names:isEmpty
												parameters:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Double
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:Math
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:random
													variableName:
														name_var:
															variable:
																variable_names:randomIndex
													EQUALS:=
												SEMICOLON:;
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															DOT:.
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getUsables
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:size
																					parameters:
																			BACKSLASH:\
																			OPERATOR:* 
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:((int)(double)randomIndex)
																name_var:
																	variable:
																		variable_names:get
															group:
																parameters:
																name_var:
																	exact:
																		variable_names:getUsables
																		BACKSLASH:\
												SEMICOLON:;
												RETURN:return 
										body_element:
											NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:pick
							body_element:
								NEWLINE:$\n
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					SEMICOLON:;
					SEMICOLON:;
					class_declaration:
						objectType:
							CLASS:class 
						className:
							variable_names:Id
						FORSLASH:/
						NEWLINE:$\n
						FORSLASH:/
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:hasSucceeded
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
									SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getTarget
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:host
												group:
													name_var:
														variable:
															variable_names:getLocation
													parameters:
												DOT:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:getClosestEntity
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:targetCriteria
									RETURN:return 
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							COMMA:,
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:targetCriteria
								typeName:
									type_var:
										exact:
											variable_names:EntityCriteria
											BACKSLASH:\
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:String
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								variable:
									variable_names:description
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					variable_declaration:
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								variable:
									variable_names:name
						typeName:
							type_var:
								class:
									class_variable_names:String
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:==
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:|| 
										OPERATOR:== 
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:getFocusSkill
											group:
												name_var:
													variable:
														variable_names:host
											DOT:.
										body_call:
											group:
												parameters:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:getFocusSkill
																	parameters:
																group:
																	name_var:
																		variable:
																			variable_names:host
																DOT:.
												name_var:
													variable:
														variable_names:contains
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:|| 
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:this
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
													COMMA:,
												name_var:
													variable:
														variable_names:use
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:getFocusSkill
											group:
												name_var:
													variable:
														variable_names:host
											DOT:.
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									conditional:
										IF:if
									as_body:
										body_element:
											body_conditional:
												conditional:
													FOR:for
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:host
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getFocusSkill
																OPERATOR:&& 
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:this
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																			COMMA:,
																		name_var:
																			variable:
																				variable_names:use
																OPERATOR:!=
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
															as_body:
																body_element:
																	body_return:
																		RETURN:return 
																		SEMICOLON:;
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:true
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															conditional:
																IF:if
													body_element:
														NEWLINE:$\n
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:usable
													typeName:
														type_var:
															class:
																class_variable_names:Usable
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
															parameters:
												OPERATOR:: 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:step
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											OPERATOR:!= 
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											body_call:
												group:
													name_var:
														variable:
															variable_names:targetEntity
									RETURN:return 
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:hasTarget
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:in
								typeName:
									type_var:
										class:
											class_variable_names:Node
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:rememberIncomingNode
							COMMA:,
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Node
								variableName:
									name_var:
										variable:
											variable_names:to
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:get
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:in
											DOT:.
											group:
												name_var:
													variable:
														variable_names:nodeStoppers
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:to
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:nodeStoppers
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						class:
																							class_variable_names:HashSet
																							template_parametersters:
																								template_parameter:
																									type_var:
																										class:
																											class_variable_names:Node
																				NEW:new 
																				parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:in
															name_var:
																variable:
																	variable_names:put
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:nodeStoppers
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:in
												name_var:
													variable:
														variable_names:containsKey
											DOT:.
									conditional:
										IF:if
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Activity
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getId
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:hasFailed
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					COMMA:,
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								exact:
																									variable_names:Fail
																									BACKSLASH:\
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Events
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:host
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:stop
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
										ELSE:else
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
												name_var:
													exact:
														variable_names:step
														BACKSLASH:\
										OPERATOR:==
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:Idle
																									BACKSLASH:\
																							type_var:
																								class:
																									class_variable_names:Events
																				NEW:new 
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
										IF:if
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
												name_var:
													exact:
														BACKSLASH:\
														variable_names:hasSucceeded
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:stop
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														group:
															name_var:
																variable:
																	variable_names:host
												SEMICOLON:;
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:Success
																									BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
																				NEW:new 
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:on
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Events
											type_var:
												exact:
													BACKSLASH:\
													variable_names:Tick
								variableName:
									name_var:
										variable:
											variable_names:event
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:event
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getHost
										variableName:
											name_var:
												variable:
													variable_names:host
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										EQUALS:=
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:event
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Events
											type_var:
												exact:
													variable_names:Idle
													BACKSLASH:\
											ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												variable:
													variable_names:candidate
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:entitiesToTarget
									conditional:
										FOR:for
									as_body:
										body_element:
											body_conditional:
												conditional:
													FOR:for
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
												OPERATOR:: 
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															as_body:
																body_element:
																	body_return:
																		VOID:void
																		RETURN:return 
																		SEMICOLON:;
																body_element:
																	body_line:
																		body_statement:
																			body_call:
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:getHost
																					parameters:
																				group:
																					name_var:
																						variable:
																							variable_names:event
																				group:
																					name_var:
																						variable:
																							variable_names:start
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				parameters:
																																				name_var:
																																					variable:
																																						variable_names:getHost
																																			DOT:.
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:event
																															name_var:
																																variable:
																																	variable_names:getRange
																														group:
																															name_var:
																																variable:
																																	variable_names:usable
																														DOT:.
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:candidate
																											COMMA:,
																											COMMA:,
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	NAME:
																																		NUMBER:25
																										typeName:
																											type_var:
																												access_multi:
																													ACCESS:->
																													type_var:
																														exact:
																															BACKSLASH:\
																															variable_names:ChasingEntity
																													type_var:
																														class:
																															class_variable_names:Activities
																										NEW:new 
																				DOT:.
																		SEMICOLON:;
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															conditional:
																IF:if
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getTargetCriteria
																		parameters:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:candidate
																		name_var:
																			variable:
																				variable_names:satisfies
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:usable
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									OPERATOR:: 
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										EQUALS:=
										name_var:
											variable:
												variable_names:failed
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:entitiesToTarget
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:List
													type_var:
														class:
															class_variable_names:Entity
													ACCESS:->
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:event
													group:
														parameters:
														name_var:
															variable:
																variable_names:getLocation
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getHost
													DOT:.
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getEntitiesWithin
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:20f
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:add
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Usable
								variableName:
									name_var:
										variable:
											variable_names:newUsable
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					variable_declaration:
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						variableName:
							name_var:
								variable:
									variable_names:failed
						EQUALS:=
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:targetEntity
						typeName:
							type_var:
								class:
									class_variable_names:Entity
					SEMICOLON:;
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:newUsable
								typeName:
									type_var:
										class:
											class_variable_names:Usable
							methodName:
								name_var:
									variable:
										variable_names:remove
							typeName:
								type_var:
									class:
										class_variable_names:void
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:activities
				NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		class_declaration:
			className:
				variable_names:Int
			variable_declaration:
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:value
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0
				typeName:
					type_var:
						class:
							class_variable_names:Integer
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								BACKSLASH:\
								body_call:
									group:
										name_var:
											variable:
												variable_names:amount
								OPERATOR:+= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:amount
						typeName:
							type_var:
								class:
									class_variable_names:Integer
			NEWLINE:$\n
			objectType:
				CLASS:class 
			NEWLINE:$\n
			DOT:.
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:setValue
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:newValue
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newValue
								name_var:
									variable:
										variable_names:value
								EQUALS:=
							SEMICOLON:;
		imports:
			IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Relationship
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:influences
										WEAK:~
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:ListMaps
													ACCESS:->
													ACCESS:->
													type_var:
														exact:
															BACKSLASH:\
															variable_names:_Int
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Reasons
							inner:
								IN:>
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createListMap
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Int
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:Relationship
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Reason
													COMMA:,
									SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:data
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					SEMICOLON:;
					objectType:
						CLASS:class 
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:influence
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						WEAK:~
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:IToken
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Relationship
														ACCESS:->
														name_var:
															variable:
																variable_names:Reasons
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:replace
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					COMMA:,
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:reasonName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:reasonClassName
																		OPERATOR:|| 
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:reasonName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:reasonName
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				SEMICOLON:;
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Relationship
																											type_var:
																												class:
																													class_variable_names:Reasons
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:reasonClassName
																											ACCESS:->
																		body_element:
																			NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
											group:
												name_var:
													exact:
														WILD:create
										OPERATOR:->*
									SEMICOLON:;
							inner:
								IN:>
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD: 
														name_var:
															variable:
																variable_names:replace
													group:
														name_var:
															variable:
																variable_names:reasonName
													DOT:.
										variableName:
											name_var:
												variable:
													variable_names:reasonClassName
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:reasonName
										variableName:
											name_var:
												variable:
													variable_names:reasonName
										typeName:
											type_var:
												class:
													class_variable_names:String
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:append
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
														group:
															name_var:
																variable:
																	variable_names:descriptionBuilder
														DOT:.
												SEMICOLON:;
										tokenName:
											NAME:description
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							concat:
																								name_var:
																									variable:
																										variable_names:index
																								PLUS:+
																								name_var:
																									exact:
																										WILD:_
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															variable:
																variable_names:variableName
												SEMICOLON:;
										tokenName:
											NAME:variableIndex
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Relationship
														ACCESS:->
														type_var:
															class:
																class_variable_names:Reasons
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:variableName
												methodName:
													ADD:+=
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:append
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					concat:
																						name_var:
																							exact:
																								WILD:\"+_
																						PLUS:+
																						name_var:
																							exact:
																								WILD:+\"
																						PLUS:+
																						name_var:
																							variable:
																								variable_names:variableName
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:descriptionBuilder
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:index
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
												SEMICOLON:;
										NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:descriptionBuilder
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															type_var:
																class:
																	class_variable_names:StringBuilder
														parameters:
														NEW:new 
										typeName:
											type_var:
												class:
													class_variable_names:StringBuilder
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									class_declaration:
										DOT:.
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:entities
										parentName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Reason
													type_var:
														class:
															class_variable_names:Relationship
										objectType:
											CLASS:class 
										packageName:
											name_var:
												exact:
													WILD:relations
										className:
											variable_names:reasonClassName
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										NEWLINE:$\n
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Relationship
											type_var:
												class:
													class_variable_names:Reasons
											ACCESS:->
									methodName:
										ADD:+=
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									class_declaration:
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:entities
										DOT:.
										NEWLINE:$\n
										className:
											variable_names:Factory
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		parameters:
																		typeName:
																			type_var:
																				access_multi:
																					ACCESS:->
																					ACCESS:->
																					type_var:
																						class:
																							class_variable_names:Reasons
																					type_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:reasonName
																					type_var:
																						class:
																							class_variable_names:Relationship
														RETURN:return 
												methodName:
													name_var:
														variable:
															variable_names:create
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Relationship
															type_var:
																class:
																	class_variable_names:Reason
															ACCESS:->
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:relations
										objectType:
											CLASS:class 
										parentName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Relationship
													type_var:
														class:
															class_variable_names:Reason
													type_var:
														class:
															class_variable_names:Factory
													ACCESS:->
													ACCESS:->
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										NEWLINE:$\n
									methodName:
										ADD:+=
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Reasons
											ACCESS:->
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:reasonName
											ACCESS:->
											type_var:
												class:
													class_variable_names:Relationship
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Relationship
														ACCESS:->
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:reasonName
														name_var:
															variable:
																variable_names:Reasons
														ACCESS:->
										body_call:
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:description
																		OPERATOR:== 
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_assignment:
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:descriptionBuilder
																					name_var:
																						exact:
																							WILD:description
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					EQUALS:=
																					name_var:
																						exact:
																							WILD:name
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:reasonName
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:name
																		OPERATOR:== 
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																	conditional:
																		IF:if
															body_element:
																NEWLINE:$\n
										OPERATOR:->*.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					NEWLINE:$\n
					class_declaration:
						DOT:.
						NEWLINE:$\n
						objectType:
							CLASS:class 
						NEWLINE:$\n
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
						method_declaration:
							methodDefinition:
								typeName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:int
								methodName:
									name_var:
										variable:
											variable_names:hashCode
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:name
													DOT:.
													group:
														name_var:
															variable:
																variable_names:hashCode
														parameters:
						SEMICOLON:;
						class_declaration:
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:relations
							objectType:
								CLASS:class 
							className:
								variable_names:Factory
							packageName:
								name_var:
									exact:
										WILD:entities
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:create
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Relationship
												type_var:
													class:
														class_variable_names:Reason
												ACCESS:->
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							NEWLINE:$\n
							DOT:.
						packageName:
							name_var:
								exact:
									WILD:relations
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							WEAK:~
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:description
						NEWLINE:$\n
						variable_declaration:
							WEAK:~
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:name
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:String
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:equals
								body_element:
									NEWLINE:$\n
								typeName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:boolean
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:otherReason
									typeName:
										type_var:
											exact:
												variable_names:Object
												BACKSLASH:\
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															variable:
																variable_names:otherReason
												body_call:
													group:
														name_var:
															variable:
																variable_names:equals
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:name
													group:
														name_var:
															exact:
																WILD:name
													DOT:.
													group:
														name_var:
															exact:
																WILD:((Reason)otherReason)
													DOT:.
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												OPERATOR:&& 
										RETURN:return 
										SEMICOLON:;
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						NEWLINE:$\n
						NEWLINE:$\n
						className:
							variable_names:Reason
						NEWLINE:$\n
						SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:reason
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:amount
																	typeName:
																		type_var:
																			class:
																				class_variable_names:Int
																	NEW:new 
											group:
												name_var:
													exact:
														WILD:influences
							body_element:
								body_line:
									body_statement:
										OPERATOR:+= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:amount
										body_call:
											group:
												name_var:
													variable:
														variable_names:influence
										BACKSLASH:\
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:reason
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Reason
											ACCESS:->
											type_var:
												class:
													class_variable_names:Relationship
							methodName:
								name_var:
									variable:
										variable_names:influence
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								variableName:
									name_var:
										variable:
											variable_names:amount
							COMMA:,
					NEWLINE:$\n
					className:
						variable_names:Relationship
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:relations
					class_declaration:
						DOT:.
						className:
							variable_names:Reasons
						objectType:
							CLASS:class 
						method_declaration:
							methodDefinition:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										SEMICOLON:;
										RETURN:return 
								body_element:
									NEWLINE:$\n
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:reasonName
								typeName:
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Relationship
											type_var:
												class:
													class_variable_names:Reason
								methodName:
									name_var:
										variable:
											variable_names:create
								static:
									STA:@
						NEWLINE:$\n
						packageName:
							name_var:
								exact:
									WILD:relations
						NEWLINE:$\n
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
						NEWLINE:$\n
						NEWLINE:$\n
						class_declaration:
							NEWLINE:$\n
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:prependToBody
														parameters:
															method_argument:
																body_entries:
																	body_element:
																		body_conditional:
																			conditional:
																				IF:if
																			as_body:
																				body_element:
																					body_return:
																						RETURN:return 
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																										NEW:new 
																										typeName:
																											type_var:
																												access_multi:
																													ACCESS:->
																													type_var:
																														class:
																															class_variable_names:Associations
																													type_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:associationName
																						SEMICOLON:;
																				body_element:
																					NEWLINE:$\n
																				body_element:
																					NEWLINE:$\n
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:associationName
																					DOT:.
																					group:
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												as_quote:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:associationName
																						name_var:
																							variable:
																								variable_names:equals
																	body_element:
																		NEWLINE:$\n
																	body_element:
																		NEWLINE:$\n
													group:
														name_var:
															exact:
																WILD:create
												OPERATOR:->*
												body_call:
													group:
														name_var:
															variable:
																variable_names:Associations
											SEMICOLON:;
									body_element:
										body_manipulate:
											variableName:
												NAME:element
											tokenInstance:
												tokenName:
													NAME:associationName
												COLON::
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:nameBuilder
																group:
																	name_var:
																		variable:
																			variable_names:append
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																								CAMEL:^
																DOT:.
														SEMICOLON:;
											name_var:
												variable:
													variable_names:declarationToken
											COLON::
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_manipulate:
											methodName:
												ADD:+=
											type_var:
												class:
													class_variable_names:Associations
											class_declaration:
												packageName:
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:packageName
												objectType:
													CLASS:class 
												SEMICOLON:;
												parentName:
													type_var:
														class:
															class_variable_names:Association
												SEMICOLON:;
												NEWLINE:$\n
												NEWLINE:$\n
												NEWLINE:$\n
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Association
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Id
														methodName:
															name_var:
																variable:
																	variable_names:getId
														body_element:
															NEWLINE:$\n
														body_element:
															body_return:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
																SEMICOLON:;
																RETURN:return 
														body_element:
															NEWLINE:$\n
												variable_declaration:
													static:
														STA:@
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:0
													typeName:
														type_var:
															class:
																class_variable_names:Integer
													EQUALS:=
													WEAK:~
													variableName:
														name_var:
															variable:
																variable_names:productNumber
												DOT:.
												packageName:
													name_var:
														exact:
															WILD:associations
												DOT:.
												className:
													variable_names:associationName
												packageName:
													name_var:
														exact:
															WILD:relations
												packageName:
													name_var:
														exact:
															WILD:entities
												NEWLINE:$\n
												DOT:.
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Association
																				type_var:
																					class:
																						class_variable_names:Id
																	NEW:new 
																	parameters:
													variableName:
														name_var:
															exact:
																WILD:id
													typeName:
														type_var:
															access_i:
																type_var:
																	class:
																		class_variable_names:Id
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Association
													static:
														STA:@
													EQUALS:=
												NEWLINE:$\n
									body_element:
										body_manipulate:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Associations
													type_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:associationName
											class_declaration:
												packageName:
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:packageName
												className:
													variable_names:Factory
												packageName:
													name_var:
														exact:
															WILD:associations
												DOT:.
												packageName:
													name_var:
														exact:
															WILD:entities
												DOT:.
												DOT:.
												NEWLINE:$\n
												objectType:
													CLASS:class 
												packageName:
													name_var:
														exact:
															WILD:relations
												method_declaration:
													methodDefinition:
														body_element:
															NEWLINE:$\n
														body_element:
															body_return:
																RETURN:return 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Associations
																							ACCESS:->
																							type_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:associationName
																				NEW:new 
																				parameters:
																SEMICOLON:;
														typeName:
															type_var:
																class:
																	class_variable_names:Association
														methodName:
															name_var:
																variable:
																	variable_names:create
														body_element:
															NEWLINE:$\n
												parentName:
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Object
												interfaceName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Factory
															type_var:
																class:
																	class_variable_names:Association
												NEWLINE:$\n
											methodName:
												ADD:+=
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:IToken
										variableName:
											name_var:
												variable:
													variable_names:declarationToken
									body_element:
										body_manipulate:
											variableName:
												NAME:element
											name_var:
												variable:
													variable_names:declarationToken
											COLON::
											tokenInstance:
												tokenName:
													NAME:association_start
												COLON::
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_manipulate:
														name_var:
															variable:
																variable_names:element
														variableName:
															NAME:atom
														COLON::
														tokenInstance:
															body_element:
																NEWLINE:$\n
															COLON::
															body_element:
																NEWLINE:$\n
															tokenName:
																NAME:onEvent
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:addToEventMethod
																				parameters:
																					COMMA:,
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																name_var:
																																	variable:
																																		variable_names:atom
																																name_var:
																																	exact:
																																		WILD:event_names
																																ACCESS:->
																					method_argument:
																						body_entries:
																							body_element:
																								body_line:
																									SEMICOLON:;
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:Associations
																											DOT:.
																											group:
																												name_var:
																													variable:
																														variable_names:add
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	typeName:
																																		type_var:
																																			access_multi:
																																				type_var:
																																					class:
																																						class_variable_names:Associations
																																				ACCESS:->
																																				type_var:
																																					as_string:
																																						body_statement:
																																							body_call:
																																								group:
																																									name_var:
																																										variable:
																																											variable_names:associationName
																																	NEW:new 
																																	parameters:
																																		method_argument:
																																			body_statement:
																																				body_call:
																																					group:
																																						name_var:
																																							as_quote:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:specificName
																							body_element:
																								NEWLINE:$\n
																							body_element:
																								NEWLINE:$\n
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:Associations
																			group:
																				name_var:
																					variable:
																						variable_names:Events
																	SEMICOLON:;
												body_element:
													body_line:
														variable_declaration:
															EQUALS:=
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:associationName
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													exact:
																														WILD:specificName
																												name_var:
																													variable:
																														variable_names:element
																												ACCESS:->
																					PLUS:+
															typeName:
																type_var:
																	class:
																		class_variable_names:String
															variableName:
																name_var:
																	variable:
																		variable_names:specificName
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												typeName:
													type_var:
														class:
															class_variable_names:StringBuilder
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																NEW:new 
																typeName:
																	type_var:
																		class:
																			class_variable_names:StringBuilder
												variableName:
													name_var:
														variable:
															variable_names:nameBuilder
												EQUALS:=
											SEMICOLON:;
									inner:
										IN:>
									body_element:
										NEWLINE:$\n
									body_element:
										body_manipulate:
											name_var:
												variable:
													variable_names:declarationToken
											variableName:
												NAME:element
											tokenInstance:
												COLON::
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															typeName:
																CONTEXT_TYPE:Context 
															variableName:
																name_var:
																	variable:
																		variable_names:eventContext
															EQUALS:=
															method_argument:
																body_statement:
																	body_call:
																		group:
																			parameters:
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														access:
																															ACCESS:->
																															name_var:
																																exact:
																																	WILD:event_names
																															name_var:
																																variable:
																																	variable_names:element
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Associations
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:associationName
																				method_argument:
																					body_entries:
																			name_var:
																				variable:
																					variable_names:addToEventMethod
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:Events
														SEMICOLON:;
												body_element:
													body_manipulate:
														name_var:
															variable:
																variable_names:element
														variableName:
															NAME:atom
														tokenInstance:
															body_element:
																NEWLINE:$\n
															COLON::
															tokenName:
																NAME:body_element
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:add
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											variable_names:getBodyElement
																											BACKSLASH:\
																									parameters:
																										COMMA:,
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:eventContext
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:atom
																			group:
																				name_var:
																					variable:
																						variable_names:bodyElementList
																			DOT:.
															body_element:
																NEWLINE:$\n
														COLON::
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Events
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																	parameters:
																		COMMA:,
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:Associations
																								ACCESS:->
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:associationName
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													name_var:
																														variable:
																															variable_names:element
																													name_var:
																														exact:
																															WILD:event_names
																													ACCESS:->
																		method_argument:
																			body_entries:
														SEMICOLON:;
												tokenName:
													NAME:association_event
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															typeName:
																BODY_TYPE:Body 
															variableName:
																name_var:
																	variable:
																		variable_names:bodyElementList
															EQUALS:=
															method_argument:
																body_statement:
																	body_call:
																		group:
																			typeName:
																				BODY_TYPE:Body 
																			parameters:
																			NEW:new 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
											COLON::
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:declaration
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:Associations
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:associationName
																ACCESS:->
												body_call:
													group:
														name_var:
															variable:
																variable_names:prependToBody
														parameters:
															method_argument:
																body_entries:
																	body_element:
																		body_conditional:
																			as_body:
																				body_element:
																					NEWLINE:$\n
																				body_element:
																					NEWLINE:$\n
																				body_element:
																					body_line:
																						body_statement:
																							OPERATOR:+= 
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:1
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:productNumber
																							BACKSLASH:\
																						SEMICOLON:;
																				body_element:
																					NEWLINE:$\n
																				body_element:
																					body_line:
																						SEMICOLON:;
																						variable_assignment:
																							name_var:
																								variable:
																									variable_names:name
																							method_argument:
																								body_statement:
																									OPERATOR:+ 
																									body_call:
																										group:
																											name_var:
																												as_quote:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:associationName
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:productNumber
																									BACKSLASH:\
																							EQUALS:=
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:null
																				OPERATOR:== 
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:name
																			conditional:
																				IF:if
																	body_element:
																		NEWLINE:$\n
																	body_element:
																		NEWLINE:$\n
												OPERATOR:->*.
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_line:
											SEMICOLON:;
											variable_declaration:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:nameBuilder
												variableName:
													name_var:
														variable:
															variable_names:associationName
												typeName:
													type_var:
														class:
															class_variable_names:String
												EQUALS:=
									body_element:
										body_manipulate:
											variableName:
												NAME:element
											name_var:
												variable:
													variable_names:declarationToken
											COLON::
											tokenInstance:
												COLON::
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														variable_declaration:
															EQUALS:=
															typeName:
																type_var:
																	class:
																		class_variable_names:String
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:associationName
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													variable:
																														variable_names:element
																												name_var:
																													exact:
																														WILD:specificName
																												ACCESS:->
																					PLUS:+
															variableName:
																name_var:
																	variable:
																		variable_names:specificName
												tokenName:
													NAME:association_join
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														variable_declaration:
															variableName:
																name_var:
																	variable:
																		variable_names:eventContext
															EQUALS:=
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:Events
																		group:
																			parameters:
																				method_argument:
																					body_entries:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:Entity
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:load
																				COMMA:,
																				COMMA:,
																			name_var:
																				variable:
																					variable_names:addToEventMethod
																		DOT:.
															typeName:
																CONTEXT_TYPE:Context 
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:Events
																group:
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:Entity
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:load
																		COMMA:,
																		COMMA:,
																		method_argument:
																			body_entries:
																				body_element:
																					NEWLINE:$\n
																				body_element:
																					body_conditional:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															exact:
																																BACKSLASH:\
																																variable_names:getBooleanStatement
																														parameters:
																															COMMA:,
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:eventContext
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				access:
																																					name_var:
																																						variable:
																																							variable_names:element
																																					name_var:
																																						exact:
																																							WILD:boolean_statement
																																					ACCESS:->
																						conditional:
																							IF:if
																						as_body:
																							body_element:
																								NEWLINE:$\n
																							body_element:
																								NEWLINE:$\n
																							body_element:
																								body_line:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													COMMA:,
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:null
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	parameters:
																																		method_argument:
																																			body_statement:
																																				body_call:
																																					group:
																																						name_var:
																																							as_quote:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:specificName
																																	name_var:
																																		variable:
																																			variable_names:get
																																group:
																																	name_var:
																																		variable:
																																			variable_names:Associations
																																DOT:.
																												name_var:
																													exact:
																														BACKSLASH:\
																														variable_names:join
																									SEMICOLON:;
																				body_element:
																					NEWLINE:$\n
														SEMICOLON:;
							DOT:.
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												typeName:
													type_var:
														class:
															class_variable_names:HashMap
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Association
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:String
																COMMA:,
												parameters:
												NEW:new 
								static:
									STA:@
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Map
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												template_parameter:
													type_var:
														class:
															class_variable_names:Association
												COMMA:,
								variableName:
									name_var:
										variable:
											variable_names:complete
							packageName:
								name_var:
									exact:
										WILD:entities
							NEWLINE:$\n
							NEWLINE:$\n
							SEMICOLON:;
							DOT:.
							className:
								variable_names:Associations
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:create
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:associationName
										typeName:
											type_var:
												class:
													class_variable_names:String
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									static:
										STA:@
									typeName:
										type_var:
											class:
												class_variable_names:Association
							NEWLINE:$\n
							NEWLINE:$\n
							objectType:
								CLASS:class 
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									static:
										STA:@
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:add
									typeName:
										type_var:
											class:
												class_variable_names:void
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Association
										variableName:
											name_var:
												variable:
													variable_names:newAssociation
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:complete
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:getName
																			parameters:
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:newAssociation
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:newAssociation
														name_var:
															variable:
																variable_names:put
							method_declaration:
								methodDefinition:
									static:
										STA:@
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:Association
									methodName:
										name_var:
											variable:
												variable_names:get
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:associationName
									body_element:
										body_return:
											RETURN:return 
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:associationName
															name_var:
																variable:
																	variable_names:get
														group:
															name_var:
																variable:
																	variable_names:complete
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:relations
							packageName:
								name_var:
									exact:
										WILD:associations
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:getId
									typeName:
										STATEMENT_TYPE:Statement
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											RETURN:return 
											SEMICOLON:;
											method_argument:
												as_statement:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:id
															DOT:.
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Associations
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:name
									body_element:
										NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:name
										typeName:
											type_var:
												class:
													class_variable_names:String
									inner:
										IN:>
						class_declaration:
							objectType:
								CLASS:class 
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:List
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Entity
								method_argument:
									body_statement:
										body_call:
											group:
												typeName:
													type_var:
														class:
															class_variable_names:ArrayList
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Entity
												parameters:
												NEW:new 
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:members
								WEAK:~
							NEWLINE:$\n
							class_declaration:
								objectType:
									CLASS:class 
								FORSLASH:/
								className:
									variable_names:Id
								NEWLINE:$\n
								FORSLASH:/
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
											RETURN:return 
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:getId
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:Association
												ACCESS:->
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							packageName:
								name_var:
									exact:
										WILD:associations
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							SEMICOLON:;
							DOT:.
							NEWLINE:$\n
							class_declaration:
								FORSLASH:/
								NEWLINE:$\n
								className:
									variable_names:Factory
								objectType:
									INTERFACE:interface 
								FORSLASH:/
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:create
										typeName:
											type_var:
												class:
													class_variable_names:Association
							className:
								variable_names:Association
							packageName:
								name_var:
									exact:
										WILD:entities
							packageName:
								name_var:
									exact:
										WILD:relations
							SEMICOLON:;
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:newMember
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:newMember
														name_var:
															variable:
																variable_names:add
													group:
														name_var:
															variable:
																variable_names:members
													DOT:.
									typeName:
										type_var:
											class:
												class_variable_names:void
									methodName:
										name_var:
											variable:
												variable_names:add
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					className:
						variable_names:Trait
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:name
						typeName:
							type_var:
								class:
									class_variable_names:String
					objectType:
						CLASS:class 
					NEWLINE:$\n
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
					DOT:.
					class_declaration:
						DOT:.
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:traits
						DOT:.
						className:
							variable_names:Id
						packageName:
							name_var:
								exact:
									WILD:entities
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:mods
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:traits
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Trait
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:hasRequirements
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:candidate
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					SEMICOLON:;
				class_declaration:
					DOT:.
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Trait
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:traitName
								typeName:
									type_var:
										class:
											class_variable_names:String
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					className:
						variable_names:Traits
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:traits
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:id
													DOT:.
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																name_var:
																	variable:
																		variable_names:Traits
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							inner:
								IN:>
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
										typeName:
											BODY_TYPE:Body 
										variableName:
											name_var:
												variable:
													variable_names:lossBody
										EQUALS:=
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			body_return:
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:traitName
																											type_var:
																												class:
																													class_variable_names:Traits
																											ACCESS:->
																								parameters:
																				RETURN:return 
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:traitName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:traitName
																	conditional:
																		IF:if
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
											group:
												name_var:
													variable:
														variable_names:Traits
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													template_parameters:
														COMMA:,
														template_parameter:
															BODY_TYPE:Body 
														template_parameter:
															type_var:
																class:
																	class_variable_names:String
													class_variable_names:Map
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:eventBodies
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															type_var:
																class:
																	class_variable_names:HashMap
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:String
																		COMMA:,
																		template_parameter:
																			BODY_TYPE:Body 
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:getImposition
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
														group:
															name_var:
																variable:
																	variable_names:lossBody
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			group:
																				name_var:
																					variable:
																						variable_names:getImposition
																				parameters:
																					COMMA:,
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:true
																			DOT:.
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:gainBody
														DOT:.
												SEMICOLON:;
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:impose
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											BODY_TYPE:Body 
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															BODY_TYPE:Body 
														parameters:
														NEW:new 
										variableName:
											name_var:
												variable:
													variable_names:gainBody
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:requirementsBody
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															BODY_TYPE:Body 
										typeName:
											BODY_TYPE:Body 
									SEMICOLON:;
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Traits
									class_declaration:
										className:
											variable_names:traitName
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															exact:
																WILD:candidate
												methodName:
													name_var:
														variable:
															variable_names:hasRequirements
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										parentName:
											type_var:
												class:
													class_variable_names:Trait
										NEWLINE:$\n
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:mods
										NEWLINE:$\n
										objectType:
											CLASS:class 
										packageName:
											name_var:
												exact:
													WILD:entities
										DOT:.
										DOT:.
										SEMICOLON:;
										DOT:.
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Trait
														ACCESS:->
											EQUALS:=
											static:
												STA:@
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Trait
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
															NEW:new 
											variableName:
												name_var:
													exact:
														WILD:id
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:traitName
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												methodName:
													name_var:
														variable:
															variable_names:getName
										packageName:
											name_var:
												exact:
													WILD:traits
									methodName:
										ADD:+=
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:eventBodies
											DOT:.
											group:
												name_var:
													variable:
														variable_names:put
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:gainBody
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:gain
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addEventMethodsExclusive
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Traits
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:traitName
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:eventBodies
													COMMA:,
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:put
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:lossBody
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:loss
													COMMA:,
											DOT:.
											group:
												name_var:
													variable:
														variable_names:eventBodies
							inner:
								IN:>
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
								typeName:
									type_var:
										class:
											class_variable_names:IToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											as_statement:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getHost
														group:
															name_var:
																exact:
																	WILD:event
										variableName:
											name_var:
												variable:
													variable_names:eventHost
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:traitName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:declarationToken
																ACCESS:->
																name_var:
																	exact:
																		WILD:traitName
																CAMEL:^
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:candidate
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:candidate
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:requirement
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasRequirements
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_conditional:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:candidate
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:element
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:false
																													COMMA:,
																													COMMA:,
																												name_var:
																													exact:
																														variable_names:getRequirement
																														BACKSLASH:\
																				as_body:
																					body_element:
																						body_return:
																							RETURN:return 
																							SEMICOLON:;
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																				conditional:
																					IF:if
														group:
															name_var:
																access:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:traitName
																	name_var:
																		variable:
																			variable_names:Traits
																	ACCESS:->
										body_element:
											NEWLINE:$\n
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:mods
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
		NEWLINE:$\n
anonymous_class:
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	className:
		NAME:HashMap
	SEMICOLON:;
	COLON::
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
NEWLINE:$\n
anonymous_class:
	className:
		NAME:File
	COLON::
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	DOT:.
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:io
NEWLINE:$\n
method_declaration:
	methodDefinition:
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:fileName
			typeName:
				type_var:
					class:
						class_variable_names:String
		typeName:
			type_var:
				class:
					class_variable_names:String
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		COMMA:,
		body_element:
			body_return:
				inner:
					IN:>
				SEMICOLON:;
				RETURN:return 
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:../Resource/
		methodName:
			name_var:
				variable:
					variable_names:getDirectory
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:knownDirectory
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	className:
		NAME:ParseContext
	HID:<
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	DOT:.
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Arrays
	SEMICOLON:;
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
NEWLINE:$\n
method_declaration:
	methodDefinition:
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:nameToken
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_return:
				RETURN:return 
				SEMICOLON:;
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
		body_element:
			body_line:
				variable_declaration:
					method_argument:
						body_statement:
							body_call:
								group:
									parameters:
									typeName:
										type_var:
											class:
												class_variable_names:StringBuilder
									NEW:new 
					typeName:
						type_var:
							class:
								class_variable_names:StringBuilder
					variableName:
						name_var:
							variable:
								variable_names:nameBuilder
					EQUALS:=
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				variable_declaration:
					WEAK:~
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:true
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					variableName:
						name_var:
							variable:
								variable_names:isFirst
		body_element:
			NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:String
		inner:
			IN:>
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:nameToken
				variableName:
					NAME:element
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:.
													name_var:
														variable:
															variable_names:append
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								OPERATOR:==
								body_call:
									group:
										name_var:
											variable:
												variable_names:isFirst
					COLON::
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	CAMEL:^
																	variable_names:element
										name_var:
											variable:
												variable_names:append
									DOT:.
									group:
										name_var:
											variable:
												variable_names:nameBuilder
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									body_line:
										variable_assignment:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											EQUALS:=
											name_var:
												variable:
													variable_names:isFirst
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:typeName
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:getTypeName
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Quests
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:data
								DOT:.
								group:
									name_var:
										variable:
											variable_names:getRoot
									parameters:
					variableName:
						name_var:
							variable:
								variable_names:root
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Aspects
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Relationship
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						group:
							name_var:
								variable:
									variable_names:Treasury
						DOT:.
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:../Questineer/src
							name_var:
								exact:
									variable_names:setup
									BACKSLASH:\
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:import_events
							tokenInstance:
								COLON::
								tokenName:
									NAME:IMPORT_EVENT
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										variableName:
											NAME:element
										name_var:
											variable:
												variable_names:import_events
										COLON::
										tokenInstance:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:Events
															DOT:.
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:element
																name_var:
																	variable:
																		variable_names:declaration
											tokenName:
												NAME:event_declaration
											COLON::
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							COLON::
							name_var:
								variable:
									variable_names:imports
					tokenName:
						NAME:import_any
					COLON::
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:imports
				name_var:
					variable:
						variable_names:root
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Activities
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						DOT:.
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Tile
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										bod	body_call:
											group:
												name_var:
													variable:
														variable_names:data
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Skills
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Entity
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				name_var:
					variable:
						variable_names:root
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:import_any
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												variable_names:importAny
												BACKSLASH:\
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
							SEMICOLON:;
					COLON::
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:imports
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:generate
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Environment
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:data
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Conditions
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								exact:
									BACKSLASH:\
									variable_names:output
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Items
						DOT:.
				SEMICOLON:;
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	COLON::
	DOT:.
	DOT:.
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	className:
		NAME:Entry
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	SEMICOLON:;
anonymous_class:
	className:
		NAME:Math
	COLON::
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:lang
				BACKSLASH:\
	DOT:.
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	className:
		NAME:List
	COLON::
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	HID:<
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	COLON::
	HID:<
	className:
		NAME:StringBuilder
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lang
	SEMICOLON:;
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	DOT:.
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:token
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	SEMICOLON:;
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	DOT:.
	HID:<
	className:
		NAME:IToken
anonymous_class:
	COLON::
	className:
		NAME:Rules
	packageName:
		name_var:
			exact:
				variable_names:lists
				BACKSLASH:\
	SEMICOLON:;
	HID:<
NEWLINE:$\n
anonymous_class:
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	DOT:.
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	className:
		NAME:Generator
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	SEMICOLON:;
	COLON::
	DOT:.
anonymous_class:
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:awt
	className:
		NAME:Graphics
	COLON::
	HID:<
	DOT:.
	SEMICOLON:;
SEMICOLON:;<<