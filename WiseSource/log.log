animation_types.ruleset>>
NEWLINE:$\n
list_rule:
	NEWLINE:$\n
	list_def:
		regex:
			WILD:,.
		WITH:with 
		parameter:
			definition:
				chain:
					atom:
						terminal:
							listsToken:
								LISTNAME:WILD
						parameters:
							AS:as 
							name:
								NAME:colour_file_name
				choice:
		parameters:
			AS:as 
			name:
				NAME:COLOUR_FILE
	listType:
		NAME:Braced
	TAB:	
	NEWLINE:$\n
	listname:
		LISTNAME:colourBrace-s
	ARE:are 
NEWLINE:$\n
list_rule:
	listname:
		LISTNAME:colourImporter-s
	ARE:are 
	NEWLINE:$\n
	list_def:
		parameters:
			name:
				NAME:IMPORT_COLOUR
			AS:as 
		parser:
			definition:
				choice:
				chain:
					atom:
						multiple:
							option:
								MANY:*
							definition:
								choice:
								chain:
									atom:
										braced:
											definition:
												choice:
													definition:
														choice:
															definition:
																chain:
																	atom:
																		terminal:
																			listsToken:
																				LISTNAME:colour_declaration
																choice:
															PIPE:|
														chain:
															atom:
																terminal:
																	listsToken:
																		LISTNAME:COMMENTS
													PIPE:|
												chain:
													atom:
														terminal:
															listsToken:
																LISTNAME:NEWLINE
		regex:
			WILD:><<\"gui/\",colour_file_name,\".colours\">>\n
		FROM:from
		parameter:
			definition:
				choice:
				chain:
					atom:
						terminal:
							listsToken:
								LISTNAME:COLOURS
					atom:
						terminal:
							listsToken:
								LISTNAME:COLOUR_FILE
		WITH:with 
	TAB:	
	NEWLINE:$\n
	listType:
		NAME:Import
rule:
	TAB:	
	definition:
		chain:
			atom:
				multiple:
					definition:
						chain:
							atom:
								braced:
									definition:
										chain:
											atom:
												terminal:
													listsToken:
														LISTNAME:NEWLINE
										choice:
											PIPE:|
											definition:
												choice:
													PIPE:|
													definition:
														chain:
															atom:
																terminal:
																	listsToken:
																		LISTNAME:import_any
														choice:
												chain:
													atom:
														terminal:
															listsToken:
																LISTNAME:COMMENTS
						choice:
					option:
						MANY:*
		choice:
	NEWLINE:$\n
	silence:
		SILENCE:is silent
	rulename:
		NAME:base
NEWLINE:$\n
list_rule:
	list_def:
		parameters:
			name:
				NAME:WILD
			AS:as 
		regex:
			WILD:.*
	NEWLINE:$\n
	TAB:	
	list_def:
		parameters:
			name:
				NAME:COLOURS
			AS:as 
		quote:
			WILD:colours
	list_def:
		parameters:
			name:
				NAME:NAME
			AS:as 
		regex:
			WILD:[a-zA-Z_][a-zA-Z0-9_]*
	TAB:	
	TAB:	
	TAB:	
	list_def:
		parameters:
			AS:as 
			name:
				NAME:INTEGER
		regex:
			WILD:[-]?\\d+
	NEWLINE:$\n
	TAB:	
	NEWLINE:$\n
	listname:
		LISTNAME:generalToken-s
	NEWLINE:$\n
	NEWLINE:$\n
	list_def:
		regex:
			WILD:[-]?\\d+\\Q.\\E\\d+
		parameters:
			AS:as 
			name:
				NAME:FLOAT
	NEWLINE:$\n
	TAB:	
	NEWLINE:$\n
	list_def:
		quote:
			WILD:\n
		parameters:
			name:
				NAME:NEWLINE
			AS:as 
rule:
	TAB:	
	NEWLINE:$\n
	rulename:
		NAME:colour_declaration
	definition:
		choice:
		chain:
			atom:
				braced:
					definition:
						choice:
							definition:
								chain:
									atom:
										braced:
											definition:
												chain:
													atom:
														braced:
															definition:
																chain:
																	atom:
																		terminal:
																			listsToken:
																				LISTNAME:FLOAT
																choice:
																	definition:
																		choice:
																		chain:
																			atom:
																				terminal:
																					listsToken:
																						LISTNAME:INTEGER
																	PIPE:|
														parameters:
															name:
																NAME:green
															AS:as 
													atom:
														parameters:
															AS:as 
															name:
																NAME:red
														braced:
															definition:
																chain:
																	atom:
																		terminal:
																			listsToken:
																				LISTNAME:FLOAT
																choice:
																	PIPE:|
																	definition:
																		chain:
																			atom:
																				terminal:
																					listsToken:
																						LISTNAME:INTEGER
																		choice:
													atom:
														parameters:
															AS:as 
															name:
																NAME:blue
														braced:
															definition:
																chain:
																	atom:
																		terminal:
																			listsToken:
																				LISTNAME:FLOAT
																choice:
																	PIPE:|
																	definition:
																		chain:
																			atom:
																				terminal:
																					listsToken:
																						LISTNAME:INTEGER
																		choice:
												choice:
										parameters:
											name:
												NAME:asFloat
											AS:as 
								choice:
							PIPE:|
						chain:
							atom:
								braced:
									definition:
										chain:
											atom:
												parameters:
													AS:as 
													name:
														NAME:red
												terminal:
													listsToken:
														LISTNAME:INTEGER
											atom:
												terminal:
													listsToken:
														LISTNAME:INTEGER
												parameters:
													name:
														NAME:green
													AS:as 
											atom:
												terminal:
													listsToken:
														LISTNAME:INTEGER
												parameters:
													name:
														NAME:blue
													AS:as 
										choice:
								parameters:
									AS:as 
									name:
										NAME:asInt
			atom:
				parameters:
					AS:as 
					name:
						NAME:colourName
				terminal:
					listsToken:
						LISTNAME:NAME
rule:
	NEWLINE:$\n
	definition:
		choice:
			NEWLINE:$\n
			TAB:	
			definition:
				chain:
					atom:
						terminal:
							listsToken:
								LISTNAME:IMPORT_ANIMATION_TYPE
				choice:
		chain:
			atom:
				terminal:
					listsToken:
						LISTNAME:IMPORT_COLOUR
	rulename:
		NAME:import_any
	TAB:	
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
comment:#GUI$\n
list_rule:
	listname:
		LISTNAME:comment-s
	NEWLINE:$\n
	list_def:
		parameters:
			AS:as 
			name:
				NAME:COMMENTS
		WITH:with 
		parameter:
			definition:
				chain:
					atom:
						terminal:
							listsToken:
								LISTNAME:WILD
						parameters:
							name:
								NAME:comment
							AS:as 
				choice:
		regex:
			WILD:#,#
	NEWLINE:$\n
	ARE:are 
	listType:
		NAME:Braced
	TAB:	
IMPORT_RULE:
	rule:
		NEWLINE:$\n
		rulename:
			NAME:operator
		TAB:	
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:ANIT_EQUALS
			choice:
				TAB:	
				NEWLINE:$\n
				definition:
					choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:ANIT_PLUSEQUALS
	NEWLINE:$\n
	NEWLINE:$\n
	list_rule:
		list_def:
			FROM:from
			parameters:
				AS:as 
				name:
					NAME:IMPORT_ANIMATION_TYPE
			parameter:
				definition:
					choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:ANIMATION_TYPES
						atom:
							terminal:
								listsToken:
									LISTNAME:ANIMATION_TYPE_FILE
			regex:
				WILD:><<\"gui/\",animation_type_file_name,\".animationTypes\">>\n
			parser:
				definition:
					choice:
					chain:
						atom:
							multiple:
								definition:
									choice:
									chain:
										atom:
											braced:
												definition:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWLINE
													choice:
														definition:
															choice:
																PIPE:|
																definition:
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:animation_type_declaration
																	choice:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:COMMENTS
														PIPE:|
								option:
									MANY:*
			WITH:with 
		NEWLINE:$\n
		listname:
			LISTNAME:animationImports-s
		NEWLINE:$\n
		listType:
			NAME:Import
		TAB:	
		ARE:are 
	rule:
		TAB:	
		definition:
			choice:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:ANIT_EQUALS
						atom:
							parameters:
								AS:as 
								name:
									NAME:value
							braced:
								definition:
									choice:
										PIPE:|
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:FLOAT
											choice:
												definition:
													chain:
														atom:
															parameters:
																AS:as 
																name:
																	NAME:quote
															terminal:
																listsToken:
																	LISTNAME:QUOTE
													choice:
												PIPE:|
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:INTEGER
						atom:
							parameters:
								AS:as 
								name:
									NAME:variableName
							terminal:
								listsToken:
									LISTNAME:NAME
					choice:
				NEWLINE:$\n
				TAB:	
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:ANIT_EQUALS
				atom:
					terminal:
						listsToken:
							LISTNAME:NAME
					parameters:
						AS:as 
						name:
							NAME:typeName
				atom:
					terminal:
						listsToken:
							LISTNAME:NAME
					parameters:
						AS:as 
						name:
							NAME:variableName
				atom:
					braced:
						definition:
							choice:
								PIPE:|
								definition:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:FLOAT
									choice:
										definition:
											chain:
												atom:
													parameters:
														name:
															NAME:quote
														AS:as 
													terminal:
														listsToken:
															LISTNAME:QUOTE
											choice:
										PIPE:|
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:INTEGER
					parameters:
						AS:as 
						name:
							NAME:value
		rulename:
			NAME:animation_type_variable_declaration
		NEWLINE:$\n
	rule:
		NEWLINE:$\n
		rulename:
			NAME:animation_type_element
		TAB:	
		definition:
			choice:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:COMMENTS
					choice:
						NEWLINE:$\n
						definition:
							choice:
								definition:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:animation_type_declaration
									choice:
								NEWLINE:$\n
								TAB:	
							chain:
								atom:
									braced:
										definition:
											choice:
											chain:
												atom:
													multiple:
														definition:
															chain:
																atom:
																	braced:
																		definition:
																			chain:
																				atom:
																					terminal:
																						listsToken:
																							LISTNAME:IF
																				atom:
																					multiple:
																						definition:
																							choice:
																							chain:
																								atom:
																									braced:
																										definition:
																											choice:
																											chain:
																												atom:
																													terminal:
																														listsToken:
																															LISTNAME:continuation_operator
																												atom:
																													terminal:
																														listsToken:
																															LISTNAME:animation_type_boolean
																						option:
																							MANY:*
																				atom:
																					terminal:
																						listsToken:
																							LISTNAME:animation_type_boolean
																			choice:
															choice:
														option:
															OPTIONAL:?
												atom:
													parameters:
														AS:as 
														name:
															NAME:value
													braced:
														definition:
															choice:
																definition:
																	choice:
																		definition:
																			choice:
																				definition:
																					choice:
																					chain:
																						atom:
																							terminal:
																								listsToken:
																									LISTNAME:ANIMATION_TYPE_FRAME_DATA
																				PIPE:|
																			chain:
																				atom:
																					terminal:
																						listsToken:
																							LISTNAME:NAME
																		PIPE:|
																	chain:
																		atom:
																			terminal:
																				listsToken:
																					LISTNAME:FLOAT
																PIPE:|
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:INTEGER
												atom:
													terminal:
														listsToken:
															LISTNAME:operator
												atom:
													terminal:
														listsToken:
															LISTNAME:NAME
													parameters:
														AS:as 
														name:
															NAME:variableName
									parameters:
										AS:as 
										name:
											NAME:statement
						TAB:	
				NEWLINE:$\n
				TAB:	
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:NEWLINE
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		rulename:
			NAME:animation_type_boolean
		TAB:	
		NEWLINE:$\n
		definition:
			chain:
				atom:
					parameters:
						AS:as 
						name:
							NAME:leftName
					terminal:
						listsToken:
							LISTNAME:NAME
				atom:
					braced:
						definition:
							choice:
								PIPE:|
								definition:
									choice:
										PIPE:|
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:NAME
											choice:
												PIPE:|
												definition:
													choice:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:ANIMATION_TYPE_FRAME_DATA
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:FLOAT
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:INTEGER
					parameters:
						AS:as 
						name:
							NAME:value
				atom:
					terminal:
						listsToken:
							LISTNAME:boolean_operator
			choice:
	rule:
		NEWLINE:$\n
		rulename:
			NAME:boolean_operator
		TAB:	
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:ANIT_ISEQUAL
			choice:
				definition:
					choice:
						TAB:	
						definition:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:ANIT_LESSTHAN
							choice:
								NEWLINE:$\n
								TAB:	
								definition:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:ANIT_GREATERTHAN
									choice:
										NEWLINE:$\n
										TAB:	
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:ANIT_LESSOREQUAL
											choice:
												NEWLINE:$\n
												TAB:	
												definition:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:ANIT_GREATEROREQUAL
													choice:
						NEWLINE:$\n
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:ANIT_ISNOTEQUAL
				NEWLINE:$\n
				TAB:	
	comment:#ANIMATION TYPES$\n
	list_rule:
		list_def:
			parameters:
				AS:as 
				name:
					NAME:WILD
			regex:
				WILD:.*
		NEWLINE:$\n
		TAB:	
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			quote:
				WILD:\n
			parameters:
				name:
					NAME:NEWLINE
				AS:as 
		NEWLINE:$\n
		NEWLINE:$\n
		TAB:	
		list_def:
			quote:
				WILD:animationTypes
			parameters:
				AS:as 
				name:
					NAME:ANIMATION_TYPES
		NEWLINE:$\n
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:FLOAT
			regex:
				WILD:[-]?\\d+\\Q.\\E\\d+
		TAB:	
		TAB:	
		NEWLINE:$\n
		list_def:
			parameters:
				name:
					NAME:IF
				AS:as 
			quote:
				WILD:if
		list_def:
			parameters:
				AS:as 
				name:
					NAME:ANIT_AND
			quote:
				WILD:&
		list_def:
			parameters:
				AS:as 
				name:
					NAME:ANIT_PLUSEQUALS
			quote:
				WILD:+=
		TAB:	
		TAB:	
		TAB:	
		list_def:
			quote:
				WILD:=
			parameters:
				AS:as 
				name:
					NAME:ANIT_EQUALS
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:INTEGER
			regex:
				WILD:[-]?\\d+
		NEWLINE:$\n
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:NAME
			regex:
				WILD:[a-zA-Z_][a-zA-Z0-9_]*
		TAB:	
		list_def:
			parameters:
				name:
					NAME:ANIT_ISNOTEQUAL
				AS:as 
			quote:
				WILD:!=
		TAB:	
		list_def:
			quote:
				WILD:>
			parameters:
				name:
					NAME:ANIT_GREATERTHAN
				AS:as 
		list_def:
			quote:
				WILD:<=
			parameters:
				AS:as 
				name:
					NAME:ANIT_LESSOREQUAL
		listname:
			LISTNAME:animationToken-s
		NEWLINE:$\n
		TAB:	
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:COMMA
			quote:
				WILD:,
		NEWLINE:$\n
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:ANIT_LESSTHAN
			quote:
				WILD:<
		list_def:
			quote:
				WILD:==
			parameters:
				name:
					NAME:ANIT_ISEQUAL
				AS:as 
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			quote:
				WILD:|
			parameters:
				AS:as 
				name:
					NAME:ANIT_OR
		TAB:	
		NEWLINE:$\n
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:ANIT_GREATEROREQUAL
			quote:
				WILD:>=
	list_rule:
		list_def:
			WITH:with 
			regex:
				WILD:(,)
			parameters:
				AS:as 
				name:
					NAME:ANIMATION_TYPE_VARIABLES
			parameter:
				definition:
					chain:
						atom:
							multiple:
								option:
									OPTIONAL:?
								definition:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:animation_type_variable_declaration
									choice:
						atom:
							multiple:
								definition:
									chain:
										atom:
											braced:
												definition:
													choice:
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:COMMA
														atom:
															terminal:
																listsToken:
																	LISTNAME:animation_type_variable_declaration
									choice:
								option:
									MANY:*
					choice:
		NEWLINE:$\n
		ARE:are 
		TAB:	
		TAB:	
		TAB:	
		NEWLINE:$\n
		TAB:	
		list_def:
			parameters:
				AS:as 
				name:
					NAME:ANIMATION_TYPE_FILE
			regex:
				WILD:,.
			WITH:with 
			parameter:
				definition:
					chain:
						atom:
							parameters:
								name:
									NAME:animation_type_file_name
								AS:as 
							terminal:
								listsToken:
									LISTNAME:WILD
					choice:
		listType:
			NAME:Braced
		list_def:
			regex:
				WILD:\",\"
			WITH:with 
			parameter:
				definition:
					choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:WILD
			parameters:
				AS:as 
				name:
					NAME:QUOTE
		NEWLINE:$\n
		listname:
			LISTNAME:animationBrace-s
		NEWLINE:$\n
		list_def:
			regex:
				WILD:{,}
			parameter:
				definition:
					choice:
					chain:
						atom:
							multiple:
								option:
									MANY:*
								definition:
									choice:
									chain:
										atom:
											terminal:
												listsToken:
													LISTNAME:animation_type_element
			WITH:with 
			parameters:
				name:
					NAME:ANIMATION_TYPE_BODY
				AS:as 
		list_def:
			WITH:with 
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:NAME
							parameters:
								AS:as 
								name:
									NAME:frameName
					choice:
			regex:
				WILD:[,]
			parameters:
				AS:as 
				name:
					NAME:ANIMATION_TYPE_FRAME_DATA
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
	rule:
		definition:
			choice:
			chain:
				atom:
					multiple:
						definition:
							choice:
							chain:
								atom:
									terminal:
										listsToken:
											LISTNAME:ANIMATION_TYPE_VARIABLES
						option:
							OPTIONAL:?
				atom:
					parameters:
						AS:as 
						name:
							NAME:animationTypeName
					terminal:
						listsToken:
							LISTNAME:NAME
				atom:
					terminal:
						listsToken:
							LISTNAME:ANIMATION_TYPE_BODY
		rulename:
			NAME:animation_type_declaration
		TAB:	
		NEWLINE:$\n
	NEWLINE:$\n
	rule:
		TAB:	
		NEWLINE:$\n
		rulename:
			NAME:continuation_operator
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:ANIT_AND
			choice:
				TAB:	
				definition:
					choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:ANIT_OR
				NEWLINE:$\n
	NEWLINE:$\n
	NEWLINE:$\n
IMPORT_RULE:
	list_rule:
		NEWLINE:$\n
		listType:
			NAME:Import
		list_def:
			FROM:from
			parser:
				definition:
					choice:
					chain:
						atom:
							multiple:
								definition:
									chain:
										atom:
											braced:
												definition:
													choice:
														PIPE:|
														definition:
															choice:
															chain:
																atom:
																	terminal:
																		listsToken:
																			LISTNAME:image_declaration
													chain:
														atom:
															terminal:
																listsToken:
																	LISTNAME:NEWLINE
									choice:
								option:
									PLUS:+
			parameter:
				definition:
					choice:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:IMAGE_FILE
						atom:
							terminal:
								listsToken:
									LISTNAME:IMGS
			parameters:
				name:
					NAME:IMPORT_IMAGE
				AS:as 
			WITH:with 
			regex:
				WILD:><<\"gui/images/\",image_file_name,\".imgs\">>\n
		NEWLINE:$\n
		listname:
			LISTNAME:imageImport-s
		TAB:	
		ARE:are 
	NEWLINE:$\n
	list_rule:
		listType:
			NAME:Braced
		list_def:
			WITH:with 
			regex:
				WILD:,.
			parameters:
				name:
					NAME:IMAGE_FILE
				AS:as 
			parameter:
				definition:
					chain:
						atom:
							terminal:
								listsToken:
									LISTNAME:WILD
							parameters:
								name:
									NAME:image_file_name
								AS:as 
					choice:
		listname:
			LISTNAME:imageBrace-s
		NEWLINE:$\n
		NEWLINE:$\n
		ARE:are 
		TAB:	
	comment:#IMAGES$\n
	rule:
		rulename:
			NAME:image_declaration
		definition:
			chain:
				atom:
					terminal:
						listsToken:
							LISTNAME:IMAGE_FILE
				atom:
					braced:
						definition:
							choice:
							chain:
								atom:
									multiple:
										definition:
											chain:
												atom:
													terminal:
														listsToken:
															LISTNAME:INTEGER
													parameters:
														name:
															NAME:right
														AS:as 
											choice:
										option:
											OPTIONAL:?
								atom:
									terminal:
										listsToken:
											LISTNAME:CROSS
								atom:
									terminal:
										listsToken:
											LISTNAME:INTEGER
									parameters:
										AS:as 
										name:
											NAME:left
				atom:
					terminal:
						listsToken:
							LISTNAME:EQUALSIGN
				atom:
					parameters:
						name:
							NAME:imageName
						AS:as 
					terminal:
						listsToken:
							LISTNAME:NAME
			choice:
		TAB:	
		NEWLINE:$\n
	NEWLINE:$\n
	list_rule:
		TAB:	
		listname:
			LISTNAME:imageToken-s
		TAB:	
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			parameters:
				name:
					NAME:NAME
				AS:as 
			regex:
				WILD:[a-zA-Z_][a-zA-Z0-9_]*
		list_def:
			parameters:
				name:
					NAME:CROSS
				AS:as 
			regex:
				WILD:[Xx]
		NEWLINE:$\n
		list_def:
			parameters:
				name:
					NAME:NEWLINE
				AS:as 
			quote:
				WILD:\n
		list_def:
			quote:
				WILD:>
			parameters:
				name:
					NAME:LESSTHAN
				AS:as 
		TAB:	
		TAB:	
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			quote:
				WILD:-
			parameters:
				name:
					NAME:DASH
				AS:as 
		TAB:	
		list_def:
			quote:
				WILD:,
			parameters:
				AS:as 
				name:
					NAME:COMMA
		list_def:
			regex:
				WILD:.*
			parameters:
				name:
					NAME:WILD
				AS:as 
		TAB:	
		list_def:
			quote:
				WILD:=
			parameters:
				name:
					NAME:EQUASIGN
				AS:as 
		TAB:	
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		list_def:
			parameters:
				AS:as 
				name:
					NAME:IMGS
			quote:
				WILD:imgs
NEWLINE:$\n<<