supports.clws>>
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		inner:
			IN:>
		body_element:
			body_return:
				SEMICOLON:;
				RETURN:return 
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:../Resource/
				inner:
					IN:>
		body_element:
			NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:String
		methodName:
			name_var:
				variable:
					variable_names:getDirectory
		body_element:
			NEWLINE:$\n
		COMMA:,
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:fileName
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:knownDirectory
			typeName:
				type_var:
					class:
						class_variable_names:String
method_declaration:
	methodDefinition:
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:nameToken
				variableName:
					NAME:element
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										variable_assignment:
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											name_var:
												variable:
													variable_names:isFirst
								body_element:
									NEWLINE:$\n
					tokenName:
						NAME:typeName
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:==
								body_call:
									group:
										name_var:
											variable:
												variable_names:isFirst
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:.
													name_var:
														variable:
															variable_names:append
												group:
													name_var:
														variable:
															variable_names:nameBuilder
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:nameBuilder
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:element
																	CAMEL:^
										name_var:
											variable:
												variable_names:append
					COLON::
				COLON::
		body_element:
			body_line:
				variable_declaration:
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:true
					WEAK:~
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					variableName:
						name_var:
							variable:
								variable_names:isFirst
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_return:
				SEMICOLON:;
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
				RETURN:return 
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:StringBuilder
					variableName:
						name_var:
							variable:
								variable_names:nameBuilder
					method_argument:
						body_statement:
							body_call:
								group:
									typeName:
										type_var:
											class:
												class_variable_names:StringBuilder
									parameters:
									NEW:new 
					EQUALS:=
				SEMICOLON:;
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:nameToken
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:String
		methodName:
			name_var:
				variable:
					variable_names:getTypeName
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				COMMA:,
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:booleanStatement
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:booleanStatement
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:context
										name_var:
											exact:
												BACKSLASH:\
												variable_names:getBooleanStatement
				methodName:
					name_var:
						variable:
							variable_names:getBooleanStatement
				variable_declaration:
					typeName:
						CONTEXT_TYPE:Context 
					variableName:
						name_var:
							variable:
								variable_names:context
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:type_name
																		name_var:
																			variable:
																				variable_names:variableHeaderToken
																		ACCESS:->
											name_var:
												exact:
													BACKSLASH:\
													variable_names:getTypeName
							variableName:
								name_var:
									variable:
										variable_names:typeName
							EQUALS:=
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:variableHeaderToken
																						name_var:
																							exact:
																								WILD:variableName
										name_var:
											variable:
												variable_names:getVariable
									DOT:.
									group:
										name_var:
											variable:
												variable_names:inputClass
				typeName:
					VARIABLE_TYPE:Variable 
				methodName:
					name_var:
						variable:
							variable_names:addVariableHeader
				COMMA:,
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:variableHeaderToken
				body_element:
					body_manipulate:
						type_var:
							class:
								class_variable_names:inputClass
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:typeName
							variableName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														access:
															ACCESS:->
															name_var:
																variable:
																	variable_names:variableHeaderToken
															name_var:
																exact:
																	WILD:variableName
						methodName:
							ADD:+=
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:inputClass
					typeName:
						CLASS_TYPE:Class 
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								CONTEXT_TYPE:Context 
							method_argument:
								body_statement:
									body_call:
										DOT:.
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
											name_var:
												variable:
													variable_names:getClassContext
										group:
											name_var:
												variable:
													variable_names:inputClass
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:type
				body_element:
					body_conditional:
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Generator
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableHeaderToken
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
										body_call:
											group:
												name_var:
													concat:
														name_var:
															exact:
																WILD:!
														PLUS:+
														name_var:
															exact:
																WILD:Could not find type:
														name_var:
															variable:
																variable_names:typeName
														PLUS:+
										OPERATOR:+ 
									THROW:throw 
									SEMICOLON:;
						conditional:
							IF:if
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
		method_declaration:
			methodDefinition:
				body_element:
					body_manipulate:
						name_var:
							variable:
								variable_names:requirementToken
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:variableName
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:quanta
													variableName:
														name_var:
															variable:
																variable_names:variableName
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													EQUALS:=
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getId
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:variableName
																	DOT:.
													name_var:
														variable:
															variable_names:idValue
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:requireHeader
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											DOT:.
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:has
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
														DOT:.
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
										variableName:
											name_var:
												variable:
													variable_names:innerHead
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
									SEMICOLON:;
							tokenName:
								NAME:require_association
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														group:
															name_var:
																variable:
																	variable_names:innerHead
														DOT:.
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:idValue
										WEAK:~
									SEMICOLON:;
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:NOT
														name_var:
															variable:
																variable_names:quanta
														ACCESS:->
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:innerHead
												SEMICOLON:;
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:idValue
										variableName:
											name_var:
												variable:
													variable_names:id
										typeName:
											STATEMENT_TYPE:Statement
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Associations
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									exact:
																										WILD:association_names
																								CAMEL:^
																								name_var:
																									variable:
																										variable_names:quanta
																	name_var:
																		variable:
																			variable_names:getId
													name_var:
														variable:
															variable_names:idValue
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:quanta
														name_var:
															exact:
																WILD:association_names
									conditional:
										IF:if
						COLON::
						variableName:
							NAME:quanta
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:requireHeader
						RETURN:return 
						SEMICOLON:;
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					body_manipulate:
						name_var:
							variable:
								variable_names:requirementToken
						COLON::
						tokenInstance:
							COLON::
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										exact:
																											WILD:INTEGER
																									name_var:
																										variable:
																											variable_names:quanta
																									ACCESS:->
												name_var:
													variable:
														variable_names:add
											DOT:.
											group:
												name_var:
													variable:
														variable_names:innerHead
							tokenName:
								NAME:require_stat
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:requireHeader
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
												name_var:
													variable:
														variable_names:add
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											as_statement:
												body_statement:
													body_call:
														DOT:.
														DOT:.
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
															parameters:
														group:
															parameters:
															name_var:
																exact:
																	WILD:getValue
										variableName:
											name_var:
												variable:
													variable_names:innerHead
										EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:innerHead
											group:
												name_var:
													variable:
														variable_names:set
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:operator
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:statName
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:toLowerCase
														parameters:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:hero_stats
																					name_var:
																						variable:
																							variable_names:quanta
																					ACCESS:->
									SEMICOLON:;
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:operator
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:operator
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:negateOperator
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:|| 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:NOT
														ACCESS:->
														name_var:
															variable:
																variable_names:quanta
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										OPERATOR:&&! 
										OPERATOR:== 
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															exact:
																WILD:NOT
														name_var:
															variable:
																variable_names:quanta
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										OPERATOR:&& 
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:methodName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															concat:
																PLUS:+
																name_var:
																	variable:
																		CAMEL:^
																		variable_names:statName
																name_var:
																	exact:
																		WILD:get
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										WEAK:~
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:ORDINAL
																					name_var:
																						variable:
																							variable_names:quanta
																					ACCESS:->
										variableName:
											name_var:
												variable:
													variable_names:operator
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						variableName:
							NAME:quanta
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:requirementToken
				body_element:
					NEWLINE:$\n
				COMMA:,
				body_element:
					body_manipulate:
						variableName:
							NAME:quanta
						tokenInstance:
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:require_attack
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:innerHead
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
															name_var:
																exact:
																	WILD:has
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														DOT:.
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:NOT
														ACCESS:->
														name_var:
															variable:
																variable_names:quanta
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:innerHead
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
														DOT:.
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getId
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					CAMEL:^
																					name_var:
																						variable:
																							variable_names:quanta
																					name_var:
																						exact:
																							WILD:attack_names
																					ACCESS:->
													group:
														name_var:
															variable:
																variable_names:Attacks
													DOT:.
										variableName:
											name_var:
												variable:
													variable_names:id
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											DOT:.
											group:
												name_var:
													variable:
														variable_names:requireHeader
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:innerHead
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														DOT:.
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:== 
						COLON::
						name_var:
							variable:
								variable_names:requirementToken
				body_element:
					NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:showAsTrue
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						conditional:
							IF:if
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:||
										name_var:
											variable:
												variable_names:delimiter
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:showAsTrue
				body_element:
					body_line:
						variable_declaration:
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:requireHeader
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											NEW:new 
											typeName:
												STATEMENT_TYPE:Statement
							typeName:
								STATEMENT_TYPE:Statement
						SEMICOLON:;
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				COMMA:,
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:&&
							variableName:
								name_var:
									variable:
										variable_names:delimiter
							WEAK:~
							typeName:
								type_var:
									class:
										class_variable_names:String
				body_element:
					body_manipulate:
						COLON::
						variableName:
							NAME:quanta
						tokenInstance:
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Traits
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:trait_names
																					name_var:
																						variable:
																							variable_names:quanta
																					ACCESS:->
																					CAMEL:^
														name_var:
															variable:
																variable_names:getId
													DOT:.
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:id
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											group:
												name_var:
													variable:
														variable_names:requireHeader
							COLON::
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:innerHead
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
															name_var:
																exact:
																	WILD:has
									SEMICOLON:;
							tokenName:
								NAME:require_trait
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:innerHead
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:innerHead
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:NOT
														name_var:
															variable:
																variable_names:quanta
														ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						name_var:
							variable:
								variable_names:requirementToken
				methodName:
					name_var:
						variable:
							variable_names:getRequirement
				body_element:
					NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:candidate
					typeName:
						STATEMENT_TYPE:Statement
				body_element:
					body_line:
						SEMICOLON:;
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:requireHeader
								DOT:.
								group:
									name_var:
										variable:
											variable_names:set
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:delimiter
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:misc
			className:
				variable_names:Tickable
			DOT:.
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:millisSinceLastFrame
						typeName:
							type_var:
								class:
									class_variable_names:Double
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:tick
		class_declaration:
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_assignment:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:initialRight
																			PLUS:+
																			name_var:
																				variable:
																					variable_names:floatCast
								name_var:
									exact:
										WILD:right
							SEMICOLON:;
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialRight
					typeName:
						type_var:
							class:
								class_variable_names:Range
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialLeft
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:left
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:initialLeft
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						NAME:
							AS_METHOD_NAME:*
					COMMA:,
			SEMICOLON:;
			NEWLINE:$\n
			objectType:
				CLASS:class 
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					COMMA:,
					methodName:
						NAME:
							AS_METHOD_NAME:*
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						variableName:
							name_var:
								exact:
									WILD:initialRight
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:initialLeft
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				variable:
																					variable_names:floatCast
																			name_var:
																				exact:
																					WILD:initialLeft
								name_var:
									exact:
										WILD:left
								EQUALS:=
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:right
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialRight
							SEMICOLON:;
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			SEMICOLON:;
			NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:(float)(int)
				inner:
					IN:>
				typeName:
					type_var:
						class:
							class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:floatCast
			DOT:.
			NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				variableName:
					name_var:
						exact:
							WILD:left
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
				typeName:
					type_var:
						class:
							class_variable_names:Float
			class_declaration:
				objectType:
					CLASS:class 
				interfaceName:
					type_var:
						access_multi:
							type_var:
								class:
									class_variable_names:Modifier
							type_var:
								class:
									class_variable_names:Entity
							ACCESS:->
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				NEWLINE:$\n
				NEWLINE:$\n
				SEMICOLON:;
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:decrease
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:amount
							typeName:
								type_var:
									class:
										class_variable_names:Float
						typeName:
							type_var:
								class:
									class_variable_names:void
						body_element:
							body_line:
								SEMICOLON:;
								variable_assignment:
									EUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:amount
											OPERATOR:- 
											body_call:
												group:
													name_var:
														exact:
															WILD:value
									name_var:
										exact:
											WILD:value
						body_element:
							NEWLINE:$\n
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:inputEntity
							typeName:
								type_var:
									class:
										class_variable_names:Entity
						COMMA:,
				packageName:
					name_var:
						exact:
							WILD:misc
				DOT:.
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:doubleCast
					EQUALS:=
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:String
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											WILD:(float)(double)
				NEWLINE:$\n
				SEMICOLON:;
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:doubleCast
																			PLUS:+
																			name_var:
																				exact:
																					WILD:value
								SEMICOLON:;
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:inputEntity
							typeName:
								type_var:
									class:
										class_variable_names:Entity
						methodName:
							name_var:
								variable:
									variable_names:use
						body_element:
							NEWLINE:$\n
				className:
					variable_names:Modifier
				parentName:
					type_var:
						exact:
							variable_names:Object
							BACKSLASH:\
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:Double
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0.0
					EQUALS:=
					variableName:
						name_var:
							exact:
								WILD:value
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						variableName:
							name_var:
								exact:
									WILD:initialLeft
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialRight
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:initialRight
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
								EQUALS:=
								name_var:
									exact:
										WILD:right
					body_element:
						NEWLINE:$\n
					COMMA:,
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:left
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialLeft
								EQUALS:=
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Double
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											name_var:
												variable:
													variable_names:random
										DOT:.
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:Math
									body_call:
										group:
											name_var:
												exact:
													WILD:left
									OPERATOR:+ 
									OPERATOR:* 
									body_call:
										group:
											name_var:
												exact:
													WILD:difference
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Float
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:left
										body_call:
											group:
												name_var:
													exact:
														WILD:right
										OPERATOR:- 
								variableName:
									name_var:
										exact:
											WILD:difference
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
				typeName:
					type_var:
						class:
							class_variable_names:Float
				variableName:
					name_var:
						exact:
							WILD:right
			className:
				variable_names:Range
			NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					static:
						STA:@
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:(int)(double)result
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:top
										body_call:
											group:
												name_var:
													exact:
														WILD:bottom
										OPERATOR:- 
								variableName:
									name_var:
										exact:
											WILD:difference
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							SEMICOLON:;
					COMMA:,
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:bottom
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					methodName:
						name_var:
							variable:
								variable_names:getIntegerBetween
					body_element:
						body_line:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Double
								variableName:
									name_var:
										exact:
											WILD:result
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Math
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:random
										OPERATOR:* 
										body_call:
											group:
												name_var:
													exact:
														WILD:bottom
										body_call:
											group:
												name_var:
													exact:
														WILD:difference
										OPERATOR:+ 
							SEMICOLON:;
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:top
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:getRandom
																parameters:
											NEW:new 
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Modifier
														type_var:
															class:
																class_variable_names:Range
														ACCESS:->
							SEMICOLON:;
							RETURN:return 
					methodName:
						name_var:
							variable:
								variable_names:getModifier
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Entity
								ACCESS:->
								type_var:
									class:
										class_variable_names:Modifier
					body_element:
						NEWLINE:$\n
		class_declaration:
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			DOT:.
			className:
				variable_names:Loaddable
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:load
					typeName:
						type_var:
							class:
								class_variable_names:void
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												BODY_TYPE:Body 
											parameters:
											NEW:new 
							variableName:
								name_var:
									variable:
										variable_names:elseBody
							typeName:
								BODY_TYPE:Body 
							EQUALS:=
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							typeName:
								BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:body
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											typeName:
												BODY_TYPE:Body 
											NEW:new 
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getIfStatement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						name_var:
							variable:
								variable_names:ifStatementToken
						tokenInstance:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getBooleanStatement
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
												name_var:
													variable:
														variable_names:add
											DOT:.
											group:
												name_var:
													variable:
														variable_names:header
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:boolean_statement
							COLON::
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:element
									tokenInstance:
										tokenName:
											NAME:body_element
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:elseBody
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:context
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					COMMA:,
																				name_var:
																					exact:
																						variable_names:getBodyElement
																						BACKSLASH:\
												SEMICOLON:;
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									tokenInstance:
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													EQUALS:=
													name_var:
														variable:
															variable_names:mode
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:2
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:boolean_statement
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:context
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					COMMA:,
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBooleanStatement
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:elseHeader
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:atom
									COLON::
							NEWLINE:$\n
							tokenName:
								NAME:else_statement
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
										name_var:
											variable:
												variable_names:mode
										EQUALS:=
									SEMICOLON:;
						variableName:
							NAME:element
						COLON::
						tokenInstance:
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:body_element
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:body
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getBodyElement
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
												name_var:
													variable:
														variable_names:add
											DOT:.
									SEMICOLON:;
				body_element:
					body_line:
						variable_declaration:
							WEAK:~
							variableName:
								name_var:
									variable:
										variable_names:mode
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													NAME:
														NUMBER:0
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						SEMICOLON:;
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													conditional:
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
									SEMICOLON:;
									RETURN:return 
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0 
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
						conditional:
							IF:if
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:context
					typeName:
						CONTEXT_TYPE:Context 
				body_element:
					NEWLINE:$\n
				typeName:
					STATEMENT_TYPE:Statement
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:ifStatementToken
					typeName:
						type_var:
							class:
								class_variable_names:IToken
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:header
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
							typeName:
								STATEMENT_TYPE:Statement
				body_element:
					body_conditional:
						conditional:
							ELSE:else
						as_body:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
				COMMA:,
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													conditional:
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
											body_element:
												body_conditional:
													conditional:
														ELSE:else
														IF:if
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:elseHeader
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:2 
							OPERATOR:== 
						conditional:
							IF:if
							ELSE:else
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													conditional:
														IF:if
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
													conditional:
														ELSE:else
									SEMICOLON:;
									RETURN:return 
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:1 
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
						conditional:
							ELSE:else
							IF:if
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
							variableName:
								name_var:
									variable:
										variable_names:elseHeader
							EQUALS:=
							typeName:
								STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												STATEMENT_TYPE:Statement
											parameters:
											NEW:new 
							typeName:
								STATEMENT_TYPE:Statement
							variableName:
								name_var:
									variable:
										variable_names:ret
							EQUALS:=
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:statementToken
					typeName:
						type_var:
							class:
								class_variable_names:IToken
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getStatement
				inner:
					IN:>
				COMMA:,
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:negate
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:initialNegate
							EQUALS:=
							WEAK:~
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					body_manipulate:
						name_var:
							variable:
								variable_names:statementToken
						tokenInstance:
							COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getStatement
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:subStatement
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:subStatement
											group:
												name_var:
													variable:
														variable_names:ret
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:ret
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
															name_var:
																variable:
																	variable_names:set
												SEMICOLON:;
									conditional:
										ELSE:else
							COLON::
							NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:negateOperator
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
															name_var:
																variable:
																	variable_names:set
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:ret
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							tokenName:
								NAME:operator
						variableName:
							NAME:element
						tokenInstance:
							COLON::
							tokenName:
								NAME:variable_call
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableCall
											DOT:.
											group:
												name_var:
													variable:
														variable_names:ret
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:variableCall
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
						tokenInstance:
							COLON::
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
										OPERATOR:=! 
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
							tokenName:
								NAME:NOT
							NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:subStatement
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getStatement
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:ret
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:subStatement
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:braced
						COLON::
				variable_declaration:
					typeName:
						CONTEXT_TYPE:Context 
					variableName:
						name_var:
							variable:
								variable_names:context
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:ret
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:negate
											group:
												name_var:
													variable:
														variable_names:ret
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:negate
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:1 
							OPERATOR:&& 
							body_call:
								group:
									name_var:
										variable:
											variable_names:ret
								group:
									parameters:
									name_var:
										variable:
											variable_names:getSize
								DOT:.
							OPERATOR:== 
						conditional:
							IF:if
				COMMA:,
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					variableName:
						name_var:
							variable:
								variable_names:initialNegate
				body_element:
					NEWLINE:$\n
		class_declaration:
			DOT:.
			className:
				variable_names:Source
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:interfaces
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				INTERFACE:interface 
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				COMMA:,
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							exact:
																								WILD:variable_header
																						ACCESS:->
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						conditional:
							ELSE:else
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										access:
											name_var:
												exact:
													WILD:statement
											ACCESS:->
											name_var:
												variable:
													variable_names:variableDeclarationToken
							OPERATOR:!= 
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								WILD:variable_header
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:statement
																														name_var:
																															variable:
																																variable_names:variableDeclarationToken
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getStatement
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														EQUALS:=
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
				methodName:
					name_var:
						variable:
							variable_names:getVariableDeclaration
				body_element:
					body_line:
						variable_declaration:
							typeName:
								CONTEXT_TYPE:Context 
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
											name_var:
												variable:
													variable_names:getClassContext
										group:
											name_var:
												variable:
													variable_names:context
										DOT:.
							variableName:
								name_var:
									variable:
										variable_names:type
							EQUALS:=
						SEMICOLON:;
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:variableDeclarationToken
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:typeName
							typeName:
								type_var:
									class:
										class_variable_names:String
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:getTypeName
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:variableDeclarationToken
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:type_name
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:variable_header
				body_element:
					body_conditional:
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									body_statement:
										body_call:
											group:
												name_var:
													concat:
														name_var:
															exact:
																WILD:!
														PLUS:+
														PLUS:+
														name_var:
															exact:
																WILD:Could not find type:
														name_var:
															variable:
																variable_names:typeName
										OPERATOR:+ 
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableDeclarationToken
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
											group:
												name_var:
													exact:
														variable_names:Generator
														BACKSLASH:\
									SEMICOLON:;
									THROW:throw 
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
				variable_declaration:
					typeName:
						CONTEXT_TYPE:Context 
					variableName:
						name_var:
							variable:
								variable_names:context
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
		class_declaration:
			DOT:.
			objectType:
				CLASS:class 
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:ListMaps
			packageName:
				name_var:
					exact:
						WILD:misc
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			method_declaration:
				methodDefinition:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Event
						variableName:
							name_var:
								exact:
									WILD:event
					methodName:
						name_var:
							variable:
								variable_names:listen
					typeName:
						type_var:
							class:
								class_variable_names:void
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					exact:
						WILD:interfaces
			className:
				variable_names:Listenable
			NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:declaredCritSet
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
							NEW:new 
		method_declaration:
			methodDefinition:
				methodName:
					name_var:
						variable:
							variable_names:getStatement
				typeName:
					STATEMENT_TYPE:Statement
				COMMA:,
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:context
					typeName:
						CONTEXT_TYPE:Context 
				body_element:
					body_return:
						SEMICOLON:;
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												variable_names:getStatement
												BACKSLASH:\
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:statementToken
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:context
											COMMA:,
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:statementToken
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:declaredListSet
			inner:
				IN:>
			EQUALS:=
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:HashSet
							parameters:
							NEW:new 
		SEMICOLON:;
		method_declaration:
			methodDefinition:
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:elementToken
				COMMA:,
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						COLON::
						tokenInstance:
							tokenName:
								NAME:statement
							COLON::
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:context
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																						COMMA:,
																					name_var:
																						exact:
																							variable_names:getStatement
																							BACKSLASH:\
													SEMICOLON:;
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						tokenInstance:
							COLON::
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:return_statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_return:
													SEMICOLON:;
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								variable_names:getStatement
																								BACKSLASH:\
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:context
																							COMMA:,
													RETURN:return 
									SEMICOLON:;
						tokenInstance:
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getVariableDeclaration
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:variable_declaration
						tokenInstance:
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							tokenName:
								NAME:if_statement
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getIfStatement
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
									RETURN:return 
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:doom
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:element
																				name_var:
																					exact:
																						WILD:imposition
														COMMA:,
													name_var:
														variable:
															variable_names:getImposition
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Entity
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:doom
										method_argument:
											body_statement:
												OPERATOR:|| 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:element
																ACCESS:->
																name_var:
																	exact:
																		WILD:imposition
																name_var:
																	exact:
																		WILD:IMPOSE
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																ACCESS:->
																name_var:
																	variable:
																		variable_names:element
																name_var:
																	exact:
																		WILD:imposition
																name_var:
																	exact:
																		WILD:PLUS
												OPERATOR:!= 
												OPERATOR:!= 
									SEMICOLON:;
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:element
																					name_var:
																						exact:
																							WILD:variable_call
																					ACCESS:->
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															COMMA:,
										variableName:
											name_var:
												variable:
													variable_names:subject
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:imposition
						tokenInstance:
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:subject
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
																					name_var:
																						variable:
																							variable_names:element
							NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:acquisition
																				name_var:
																					variable:
																						variable_names:element
																				ACCESS:->
														COMMA:,
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
													name_var:
														exact:
															variable_names:getAcquisition
															BACKSLASH:\
									RETURN:return 
									SEMICOLON:;
							tokenName:
								NAME:acquisition
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
						variableName:
							NAME:element
						name_var:
							variable:
								variable_names:elementToken
				methodName:
					name_var:
						variable:
							variable_names:getBodyElement
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				variable_declaration:
					typeName:
						CONTEXT_TYPE:Context 
					variableName:
						name_var:
							variable:
								variable_names:context
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			EQUALS:=
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:declaredMapSet
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							parameters:
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
		class_declaration:
			DOT:.
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:use
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:activity
						typeName:
							type_var:
								class:
									class_variable_names:Activity
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:user
						typeName:
							type_var:
								class:
									class_variable_names:Entity
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getId
					typeName:
						type_var:
							access_multi:
								ACCESS:->
								type_var:
									class:
										class_variable_names:Usable
								type_var:
									class:
										class_variable_names:Id
			NEWLINE:$\n
			objectType:
				INTERFACE:interface 
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:EntityCriteria
					methodName:
						name_var:
							variable:
								variable_names:getTargetCriteria
			packageName:
				name_var:
					exact:
						WILD:misc
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:canChase
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Float
					methodName:
						name_var:
							variable:
								variable_names:getRange
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:user
						typeName:
							type_var:
								class:
									class_variable_names:Entity
			packageName:
				name_var:
					exact:
						WILD:interfaces
			class_declaration:
				NEWLINE:$\n
				className:
					variable_names:Id
				FORSLASH:/
				objectType:
					CLASS:class 
				FORSLASH:/
			className:
				variable_names:Usable
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
		class_declaration:
			method_declaration:
				methodDefinition:
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:false
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:satisfies
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:TypeName
						variableName:
							name_var:
								exact:
									WILD:candidate
			HID:<
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			objectType:
				CLASS:class 
			templateTypeName:
				NAME:TypeName
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			IN:>
			NEWLINE:$\n
			className:
				variable_names:Criteria
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		SEMICOLON:;
		method_declaration:
			methodDefinition:
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				COMMA:,
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getBooleanStatement
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							typeName:
								STATEMENT_TYPE:Statement
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											typeName:
												STATEMENT_TYPE:Statement
											parameters:
							variableName:
								name_var:
									variable:
										variable_names:operator
				body_element:
					NEWLINE:$\n
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:booleanStatement
				inner:
					IN:>
				variable_declaration:
					typeName:
						CONTEXT_TYPE:Context 
					variableName:
						name_var:
							variable:
								variable_names:context
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:operator
						RETURN:return 
				body_element:
					body_manipulate:
						tokenInstance:
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:element
																														name_var:
																															exact:
																																WILD:environmentName
																														ACCESS:->
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:equals
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																							name_var:
																								variable:
																									variable_names:getName
																						group:
																							name_var:
																								exact:
																									WILD:spawn
																						group:
																							name_var:
																								variable:
																									variable_names:getParent
																							parameters:
																						DOT:.
																						DOT:.
											group:
												name_var:
													variable:
														variable_names:operator
									SEMICOLON:;
							tokenName:
								NAME:spawn_statement
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
						COLON::
						tokenInstance:
							COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:statement
							NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getStatement
																			BACKSLASH:\
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		COMMA:,
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:negate
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:operator
							body_element:
								NEWLINE:$\n
						tokenInstance:
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							tokenName:
								NAME:operator
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:operator
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:&&
																		name_var:
																			variable:
																				variable_names:set
																	DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:operator
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:||
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
												conditional:
													IF:if
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:&
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:element
										OPERATOR:== 
							body_element:
								body_conditional:
									conditional:
										IF:if
										ELSE:else
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:|
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:element
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:&&
																		name_var:
																			variable:
																				variable_names:set
																	group:
																		name_var:
																			variable:
																				variable_names:operator
																	DOT:.
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													ELSE:else
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:operator
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:||
																		name_var:
																			variable:
																				variable_names:set
							body_element:
								NEWLINE:$\n
						variableName:
							NAME:element
						name_var:
							variable:
								variable_names:booleanStatement
						tokenInstance:
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:variableCall
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:variable_call
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:element
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:hasCall
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:element
														name_var:
															exact:
																WILD:NOT
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:hasCall
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getRequirement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:variableCall
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:requirement
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:negate
															COMMA:,
															COMMA:,
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:hasCall
											group:
												name_var:
													variable:
														variable_names:operator
									SEMICOLON:;
							tokenName:
								NAME:has_statement
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:operator
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getChance
																			BACKSLASH:\
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
											DOT:.
							COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:has_chance
				COMMA:,
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					variableName:
						name_var:
							variable:
								variable_names:negate
		NEWLINE:$\n
anonymous_class:
	COLON::
	DOT:.
	HID:<
	className:
		NAME:IParser
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	SEMICOLON:;
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
anonymous_class:
	SEMICOLON:;
	HID:<
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	className:
		NAME:Listnames
NEWLINE:$\n
anonymous_class:
	COLON::
	className:
		NAME:Entry
	DOT:.
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:generation
				BACKSLASH:\
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
	HID:<
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	DOT:.
	HID:<
	className:
		NAME:RegexParser
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
variable_declaration:
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:String
	variableName:
		name_var:
			variable:
				variable_names:packageName
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						exact:
							WILD:com.rem.qstnr
variable_declaration:
	inner:
		IN:>
	variableName:
		name_var:
			variable:
				variable_names:rules
	typeName:
		type_var:
			class:
				class_variable_names:List
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:Rules
				group:
					name_var:
						variable:
							variable_names:parser
				DOT:.
	EQUALS:=
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		class_declaration:
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:Event
			NEWLINE:$\n
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:events
			DOT:.
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				exact:
																					WILD:eventName
																			name_var:
																				variable:
																					variable_names:declaration
																			ACCESS:->
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:eventName
								EQUALS:=
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:cev
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														CAMEL:^
														variable_names:eventName
								typeName:
									type_var:
										class:
											class_variable_names:String
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										variableName:
											NAME:atom
										COLON::
										tokenInstance:
											tokenName:
												NAME:type_name
											body_element:
												body_manipulate:
													variable_declaration:
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:name
																						name_var:
																							variable:
																								variable_names:element
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getTypeName
													methodName:
														ADD:+=
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Events
															type_var:
																exact:
																	BACKSLASH:\
																	variable_names:cev
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												NEWLINE:$\n
								COLON::
								tokenName:
									NAME:parameter
							name_var:
								variable:
									variable_names:declaration
							COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							methodName:
								ADD:+=
							type_var:
								class:
									class_variable_names:Events
							class_declaration:
								packageName:
									name_var:
										exact:
											WILD:events
								objectType:
									CLASS:class 
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								className:
									variable_names:cev
								parentName:
									type_var:
										class:
											class_variable_names:Event
								DOT:.
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
										name_var:
											variable:
												variable_names:add
									DOT:.
							SEMICOLON:;
					inner:
						IN:>
					body_element:
						body_manipulate:
							class_declaration:
								packageName:
									name_var:
										exact:
											WILD:events
								objectType:
									CLASS:class 
								parentName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:Object
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								DOT:.
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:event
											typeName:
												type_var:
													class:
														class_variable_names:Event
										methodName:
											name_var:
												variable:
													variable_names:listen
										typeName:
											type_var:
												class:
													class_variable_names:void
								NEWLINE:$\n
								className:
									variable_names:Listener
								interfaceName:
									type_var:
										class:
											class_variable_names:Listenable
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Events
									type_var:
										exact:
											BACKSLASH:\
											variable_names:cev
									ACCESS:->
							methodName:
								ADD:+=
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:declaration
					body_element:
						NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			className:
				variable_names:Events
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Set
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:eventNameSet
				inner:
					IN:>
				method_argument:
					body_statement:
						body_call:
							group:
								parameters:
								typeName:
									type_var:
										class:
											class_variable_names:HashSet
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
								NEW:new 
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:eventName
						typeName:
							type_var:
								class:
									class_variable_names:String
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:method
						typeName:
							METHOD_TYPE:Method 
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:addParameter
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:addParameter
										parameters:
											method_argument:
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															exact:
																BACKSLASH:\
																variable_names:eventName
												SEMICOLON:;
									DOT:.
									group:
										name_var:
											variable:
												variable_names:method
					COMMA:,
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:void
			packageName:
				name_var:
					exact:
						WILD:events
			SEMICOLON:;
			objectType:
				CLASS:class 
			variable_declaration:
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								template_parameter:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Entry
											class_variable_names:List
								COMMA:,
							class_variable_names:Map
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:HashMap
											template_parameters:
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:List
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Entry
												template_parameter:
													type_var:
														class:
															class_variable_names:String
								parameters:
				EQUALS:=
				inner:
					IN:>
				variableName:
					name_var:
						variable:
							variable_names:variableDefs
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:bodiesToAdd
						typeName:
							type_var:
								class:
									class_variable_names:Map
									template_parameters:
										template_parameter:
											BODY_TYPE:Body 
										template_parameter:
											type_var:
												class:
													class_variable_names:String
										COMMA:,
					body_element:
						body_conditional:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							conditional:
								FOR:for
							as_body:
								body_element:
									body_conditional:
										as_body:
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	method_argument:
																		body_entries:
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										conditional:
											ELSE:else
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
												DOT:.
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	method_argument:
																		body_statement:
																			body_call:
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																					name_var:
																						variable:
																							variable_names:get
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
										conditional:
											IF:if
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							OPERATOR:: 
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:addEventMethods
					variable_declaration:
						typeName:
							CLASS_TYPE:Class 
						variableName:
							name_var:
								variable:
									variable_names:inputClass
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					COMMA:,
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newMethod
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
											DOT:.
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:eName
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								typeName:
									METHOD_TYPE:Method 
								variableName:
									name_var:
										variable:
											variable_names:newMethod
								method_argument:
									method_declaration:
										methodDefinition:
											typeName:
												type_var:
													class:
														class_variable_names:void
											methodName:
												name_var:
													exact:
														WILD:on
											variable_declaration:
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Events
															type_var:
																exact:
																	BACKSLASH:\
																	variable_names:eName
																	CAMEL:^
												variableName:
													name_var:
														exact:
															WILD:event
								EQUALS:=
							SEMICOLON:;
					typeName:
						CONTEXT_TYPE:Context 
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:appendToBody
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:body
									DOT:.
									group:
										name_var:
											variable:
												variable_names:establishedMethod
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:establishedMethod
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:inputClass
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newMethodName
								EQUALS:=
								typeName:
									METHOD_TYPE:Method 
							SEMICOLON:;
					methodName:
						name_var:
							variable:
								variable_names:addToEventMethod
					variable_declaration:
						typeName:
							CLASS_TYPE:Class 
						variableName:
							name_var:
								variable:
									variable_names:inputClass
					variable_declaration:
						typeName:
							BODY_TYPE:Body 
						variableName:
							name_var:
								variable:
									variable_names:body
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:inputClass
									DOT:.
									group:
										name_var:
											variable:
												variable_names:getMethod
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												variable_declaration:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Events
																ACCESS:->
																type_var:
																	exact:
																		CAMEL:^
																		variable_names:eName
																		BACKSLASH:\
													variableName:
														name_var:
															exact:
																WILD:event
												methodName:
													name_var:
														exact:
															WILD:on
												typeName:
													type_var:
														class:
															class_variable_names:void
										type_var:
											class:
												class_variable_names:inputClass
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:Listeners
																			PLUS:+
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																	name_var:
																		variable:
																			variable_names:add
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														exact:
															WILD:add
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:newListener
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	exact:
																		variable_names:eName
																		BACKSLASH:\
																		CAMEL:^
																type_var:
																	class:
																		class_variable_names:Listener
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Events
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:createList
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										variable_declaration:
											WEAK:~
											typeName:
												type_var:
													exact:
														variable_names:ListenableList
														BACKSLASH:\
											variableName:
												name_var:
													concat:
														PLUS:+
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
														name_var:
															exact:
																WILD:Listeners
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:getCurrentContext
											parameters:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:establishedMethod
			NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:addEventMethodsExclusive
					COMMA:,
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:inputClass
						typeName:
							CLASS_TYPE:Class 
					inner:
						IN:>
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:bodiesToAdd
						typeName:
							type_var:
								class:
									template_parameters:
										template_parameter:
											BODY_TYPE:Body 
										COMMA:,
										template_parameter:
											type_var:
												class:
													class_variable_names:String
									class_variable_names:Map
					body_element:
						body_conditional:
							OPERATOR:: 
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							conditional:
								FOR:for
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										conditional:
											IF:if
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												DOT:.
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
																parameters:
																	COMMA:,
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																					name_var:
																						variable:
																							variable_names:get
																				DOT:.
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	SEMICOLON:;
	COLON::
	DOT:.
	className:
		NAME:HashSet
	HID:<
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	COLON::
	SEMICOLON:;
	HID:<
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	className:
		NAME:Generator
	DOT:.
NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:environments
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					objectType:
						CLASS:class 
					className:
						variable_names:Tiles
					DOT:.
					method_declaration:
						methodDefinition:
							static:
								STA:@
							typeName:
								type_var:
									class:
										class_variable_names:Tile
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										exact:
											WILD:tileName
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					SEMICOLON:;
					parentName:
						type_var:
							class:
								template_parameters:
									template_parameter:
										type_var:
											class:
												class_variable_names:Path
								class_variable_names:ArrayList
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Path
						variableName:
							name_var:
								exact:
									WILD:goal
					NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									exact:
										variable_names:boolean
										BACKSLASH:\
							methodName:
								name_var:
									variable:
										variable_names:add
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_return:
												SEMICOLON:;
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Path
								variableName:
									name_var:
										exact:
											WILD:newPath
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:super
															group:
																name_var:
																	variable:
																		variable_names:add
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:newPath
															DOT:.
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													name_var:
														exact:
															WILD:distanceToGoal
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newPath
																	name_var:
																		variable:
																			variable_names:getDistanceTo
																group:
																	name_var:
																		exact:
																			WILD:goal
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newPath
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													exact:
														WILD:checkSet
											DOT:.
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						className:
							variable_names:Stepper
						SEMICOLON:;
						FORSLASH:/
						objectType:
							CLASS:class 
						WEAK:~
						method_declaration:
							methodDefinition:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										body_statement:
											body_call:
												group:
													parameters:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:size
											body_call:
												group:
													name_var:
														variable:
															variable_names:i
											BACKSLASH:\
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:1 
											OPERATOR:- 
											OPERATOR:>= 
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_return:
													RETURN:return 
													SEMICOLON:;
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:false
										conditional:
											IF:if
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								methodName:
									name_var:
										variable:
											variable_names:step
								body_element:
									body_conditional:
										conditional:
											ELSE:else
										as_body:
											body_element:
												body_conditional:
													conditional:
														IF:if
													as_body:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																body_statement:
																	BACKSLASH:\
																	OPERATOR:+= 
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:i
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:1
																SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:newPath
														body_call:
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:i
																name_var:
																	exact:
																		variable_names:get
																		BACKSLASH:\
														OPERATOR:!= 
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:step
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														NAME:
																															NUMBER:1
																							name_var:
																								exact:
																									variable_names:get
																									BACKSLASH:\
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:stepper
																	group:
																		name_var:
																			exact:
																				variable_names:get
																				BACKSLASH:\
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:i
																	DOT:.
														EQUALS:=
														typeName:
															type_var:
																class:
																	class_variable_names:Path
														variableName:
															name_var:
																variable:
																	variable_names:newPath
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_return:
													RETURN:return 
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:true
													SEMICOLON:;
								typeName:
									type_var:
										class:
											class_variable_names:void
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:stepper
									typeName:
										type_var:
											class:
												class_variable_names:Entity
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													NAME:
														NUMBER:0
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:i
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:environments
					NEWLINE:$\n
					NEWLINE:$\n
					interfaceName:
						type_var:
							exact:
								template_parameters:
									template_parameter:
										type_var:
											class:
												class_variable_names:Way
								BACKSLASH:\
								variable_names:Comparable
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Double
						variableName:
							name_var:
								exact:
									WILD:distanceToGoal
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0.0
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									variable_assignment:
										name_var:
											exact:
												WILD:goal
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newGoal
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Path
								variableName:
									name_var:
										exact:
											WILD:newGoal
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setGoal
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:HashSet
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:Path
						variableName:
							name_var:
								exact:
									WILD:checkSet
					className:
						variable_names:Way
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														name_var:
															variable:
																variable_names:getGoal
													DOT:.
													group:
														name_var:
															exact:
																WILD:parentWay
										EQUALS:=
										name_var:
											exact:
												WILD:goal
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Way
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										FOR:for
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:parentWay
									OPERATOR::
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:path
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Path
										variableName:
											name_var:
												exact:
													WILD:path
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Way
								variableName:
									name_var:
										exact:
											WILD:parentWay
							body_element:
								NEWLINE:$\n
							methodName:
								NAME:
									AS_METHOD_NAME:*
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:size
																								parameters:
																						body_call:
																							group:
																								name_var:
																									exact:
																										NAME:
																											NUMBER:1
																						OPERATOR:- 
																			name_var:
																				exact:
																					BACKSLASH:\
																					variable_names:get
														name_var:
															variable:
																variable_names:getDistanceTo
													group:
														name_var:
															exact:
																WILD:goal
										name_var:
											exact:
												WILD:distanceToGoal
										EQUALS:=
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:(int)(double)distance
												SEMICOLON:;
									conditional:
										ELSE:else
							methodName:
								name_var:
									variable:
										variable_names:compareTo
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Double
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:otherWay
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getDistanceToGoal
														parameters:
												body_call:
													group:
														name_var:
															exact:
																WILD:distanceToGoal
												OPERATOR:- 
										variableName:
											name_var:
												exact:
													WILD:distance
									SEMICOLON:;
							typeName:
								type_var:
									exact:
										BACKSLASH:\
										variable_names:int
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													ELSE:else
												as_body:
													body_element:
														body_return:
															RETURN:return 
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:1
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													OPERATOR:&& 
													body_call:
														group:
															name_var:
																exact:
																	WILD:checkSet
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:otherWay
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getCheckSet
															name_var:
																variable:
																	variable_names:containsAll
													OPERATOR:== 
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:size
															parameters:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:size
															parameters:
														group:
															name_var:
																exact:
																	WILD:otherWay
														DOT:.
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:0
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											group:
												name_var:
													exact:
														WILD:(int)(double)distance
										OPERATOR:== 
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Way
								variableName:
									name_var:
										exact:
											WILD:otherWay
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
												RETURN:return 
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:isEmpty
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:destination
								typeName:
									type_var:
										class:
											class_variable_names:Path
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:at
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:isStopper
															parameters:
														group:
															parameters:
																method_argument:
																	body_statement:
																		OPERATOR:- 
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:1
																		body_call:
																			group:
																				parameters:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:size
															name_var:
																exact:
																	variable_names:get
																	BACKSLASH:\
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															SEMICOLON:;
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
												conditional:
													IF:if
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:destination
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:get
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							NAME:
																								NUMBER:1
																			OPERATOR:- 
																			body_call:
																				group:
																					name_var:
																						exact:
																							variable_names:size
																							BACKSLASH:\
																					parameters:
														OPERATOR:== 
												RETURN:return 
												SEMICOLON:;
				class_declaration:
					variable_declaration:
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:numberOfAliveGeneratedEntities
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					class_declaration:
						NEWLINE:$\n
						packageName:
							name_var:
								exact:
									WILD:environments
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						className:
							variable_names:Listener
						class_declaration:
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:environments
							parentName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Listener
										ACCESS:->
										type_var:
											class:
												class_variable_names:Die
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
							NEWLINE:$\n
							className:
								variable_names:Die
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Tile
								variableName:
									name_var:
										exact:
											WILD:host
							objectType:
								CLASS:class 
							SEMICOLON:;
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:host
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:decreaseAliveGeneratedEntities
											SEMICOLON:;
									typeName:
										type_var:
											class:
												class_variable_names:void
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:event
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Die
													ACCESS:->
													type_var:
														class:
															class_variable_names:Events
						NEWLINE:$\n
						objectType:
							CLASS:class 
						DOT:.
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						WEAK:~
						variableName:
							name_var:
								exact:
									WILD:width
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1f
						EQUALS:=
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:isPath
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Tile
									methodName:
										ADD:+=
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												NEWLINE:$\n
												body_call:
													NEWLINE:$\n
													group:
														NEW:new 
														parameters:
														typeName:
															type_var:
																class:
																	class_variable_names:ArrayList
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:entityFactory
										WEAK:~
										variableName:
											name_var:
												exact:
													WILD:onTickEntityFactories
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:entityFactory
													class_variable_names:List
							body_element:
								body_manipulate:
									variable_declaration:
										WEAK:~
										variableName:
											name_var:
												exact:
													WILD:associations
										typeName:
											type_var:
												access_multi:
													type_var:
														exact:
															variable_names:_Association
															BACKSLASH:\
													ACCESS:->
													type_var:
														exact:
															variable_names:IdMap
															BACKSLASH:\
									type_var:
										class:
											class_variable_names:Tile
									methodName:
										ADD:+=
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:entityFactory
										typeName:
											CLASS_TYPE:Class 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Entity
																ACCESS:->
																name_var:
																	variable:
																		variable_names:Factory
									SEMICOLON:;
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									variable_declaration:
										WEAK:~
										typeName:
											type_var:
												class:
													class_variable_names:List
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:entityFactory
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															type_var:
																class:
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:entityFactory
																	class_variable_names:ArrayList
													NEWLINE:$\n
												NEWLINE:$\n
												BACKSLASH:\
										variableName:
											name_var:
												exact:
													WILD:onLoadEntityFactories
									type_var:
										class:
											class_variable_names:Tile
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:data
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:createMap
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Association
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Association
																			name_var:
																				variable:
																					variable_names:Id
													COMMA:,
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Loaddable
					SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:isWithin
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Environment
											type_var:
												class:
													class_variable_names:Position
											ACCESS:->
								variableName:
									name_var:
										exact:
											WILD:otherPosition
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:super
															BACKSLASH:\
												DOT:.
												group:
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:otherPosition
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:height
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:4f 
																OPERATOR:/
																OPERATOR:+ 
																BACKSLASH:\
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:4f
																OPERATOR:/
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:width
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				variable_names:Math
																				BACKSLASH:\
																	group:
																		name_var:
																			variable:
																				variable_names:PI
																	DOT:.
																OPERATOR:* 
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:2.0
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0
													name_var:
														variable:
															variable_names:isWithin
									SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Double
								variableName:
									name_var:
										variable:
											variable_names:millisSinceLastFrame
							methodName:
								name_var:
									variable:
										variable_names:tick
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:> 
										OPERATOR:&& 
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0.05 
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:random
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Math
										body_call:
											group:
												name_var:
													exact:
														WILD:numberOfAliveGeneratedEntities
										OPERATOR:< 
										body_call:
											group:
												name_var:
													exact:
														WILD:limit
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:Math
																group:
																	name_var:
																		variable:
																			variable_names:random
																	parameters:
																DOT:.
															OPERATOR:* 
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:onTickEntityFactories
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:size
																	parameters:
													variableName:
														name_var:
															variable:
																variable_names:randomIndex
													typeName:
														type_var:
															class:
																class_variable_names:Double
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:setSpawn
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														group:
															name_var:
																variable:
																	variable_names:newEntity
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															variable:
																variable_names:newEntity
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		exact:
																			WILD:onTickEntityFactories
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:create
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:(int)(double)randomIndex
																	name_var:
																		variable:
																			variable_names:get
													EQUALS:=
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:newEntity
														group:
															name_var:
																variable:
																	variable_names:getLocation
															parameters:
														group:
															name_var:
																variable:
																	variable_names:moveTo
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														DOT:.
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	WILD:numberOfAliveGeneratedEntities
													BACKSLASH:\
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newEntity
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Tile
																							type_var:
																								class:
																									class_variable_names:Listener
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Die
															name_var:
																variable:
																	variable_names:add
														DOT:.
												SEMICOLON:;
									conditional:
										IF:if
					packageName:
						name_var:
							exact:
								WILD:environments
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:limit
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:5
						EQUALS:=
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											group:
												name_var:
													exact:
														WILD:parent
										OPERATOR:!=
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:parent
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:getClosestPath
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:this
							typeName:
								type_var:
									class:
										class_variable_names:Path
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
												SEMICOLON:;
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getClosestPath
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1f
						variableName:
							name_var:
								exact:
									WILD:height
						EQUALS:=
						WEAK:~
					className:
						variable_names:Tile
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:decreaseAliveGeneratedEntities
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:-= 
										BACKSLASH:\
										body_call:
											group:
												name_var:
													exact:
														WILD:numberOfAliveGeneratedEntities
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1
					parentName:
						type_var:
							access_multi:
								ACCESS:->
								type_var:
									class:
										class_variable_names:Position
								type_var:
									class:
										class_variable_names:Environment
					NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						EQUALS:=
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						variableName:
							name_var:
								variable:
									variable_names:isPath
					interfaceName:
						type_var:
							class:
								class_variable_names:Tickable
					class_declaration:
						objectType:
							INTERFACE:interface 
						NEWLINE:$\n
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:environments
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						className:
							variable_names:Factory
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:create
								typeName:
									type_var:
										class:
											class_variable_names:Tile
						NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Association
							COMMA:,
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Id
											ACCESS:->
											type_var:
												class:
													class_variable_names:Association
								variableName:
									name_var:
										variable:
											variable_names:id
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:associations
												group:
													name_var:
														variable:
															variable_names:get
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:factory
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
												DOT:.
							methodName:
								name_var:
									variable:
										variable_names:get
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Factory
											ACCESS:->
											type_var:
												class:
													class_variable_names:Association
								variableName:
									name_var:
										variable:
											variable_names:factory
							body_element:
								NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Area
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								variable:
									variable_names:area
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:load
					NEWLINE:$\n
				class_declaration:
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												variable_assignment:
													name_var:
														exact:
															WILD:downPath
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newDown
													EQUALS:=
												SEMICOLON:;
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:setUp
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														group:
															name_var:
																exact:
																	WILD:newDown
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:newDown
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													exact:
														WILD:downPath
							methodName:
								name_var:
									variable:
										variable_names:setDown
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:updateStatus
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:newDown
								typeName:
									type_var:
										class:
											class_variable_names:Path
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					parentName:
						type_var:
							class:
								class_variable_names:Tile
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
						variableName:
							name_var:
								exact:
									WILD:leftPath
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Path
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Path
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:this
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:stepper
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:getLocation
																	parameters:
												name_var:
													variable:
														variable_names:isWithin
											DOT:.
									as_body:
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
																name_var:
																	variable:
																		variable_names:moved
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:move
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0f
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:speed
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:1f 
																					OPERATOR:* 
																			COMMA:,
																	group:
																		name_var:
																			exact:
																				WILD:stepper
																	group:
																		name_var:
																			variable:
																				variable_names:getLocation
																		parameters:
																	DOT:.
																	DOT:.
												conditional:
													ELSE:else
													IF:if
												body_statement:
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:rightPath
													body_call:
														group:
															name_var:
																variable:
																	variable_names:next
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:next
													body_call:
														group:
															name_var:
																variable:
																	variable_names:upPath
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:stepper
																	group:
																		name_var:
																			variable:
																				variable_names:move
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:speed
																					OPERATOR:* 
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:1f 
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0f
																			COMMA:,
																	group:
																		name_var:
																			variable:
																				variable_names:getLocation
																		parameters:
																	DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	variable:
																		variable_names:moved
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
												conditional:
													ELSE:else
													IF:if
										body_element:
											body_conditional:
												body_statement:
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:leftPath
													body_call:
														group:
															name_var:
																variable:
																	variable_names:next
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:stepper
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:move
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:-1f 
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:speed
																					OPERATOR:* 
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0f
																			COMMA:,
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getLocation
																		parameters:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	variable:
																		variable_names:moved
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
															SEMICOLON:;
												conditional:
													IF:if
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	variable:
																		variable_names:moved
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
																EQUALS:=
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:getLocation
																		parameters:
																	DOT:.
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:stepper
																	group:
																		name_var:
																			variable:
																				variable_names:move
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0f
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:speed
																					OPERATOR:* 
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:-1f 
																			COMMA:,
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
													IF:if
												body_statement:
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:next
													body_call:
														group:
															name_var:
																variable:
																	variable_names:downPath
									conditional:
										IF:if
							methodName:
								name_var:
									variable:
										variable_names:step
							COMMA:,
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:stepper
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:this
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
										variableName:
											name_var:
												variable:
													variable_names:moved
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										WEAK:~
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Path
								variableName:
									name_var:
										variable:
											variable_names:next
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:next
												SEMICOLON:;
												RETURN:return 
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:next
														group:
															parameters:
															name_var:
																variable:
																	variable_names:isStopper
														DOT:.
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:stepper
																	DOT:.
																	group:
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:next
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:this
																		name_var:
																			variable:
																				variable_names:rememberIncomingPath
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:stepper
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getLocation
																DOT:.
												name_var:
													variable:
														variable_names:isWithin
											DOT:.
											group:
												name_var:
													variable:
														variable_names:next
									conditional:
										IF:if
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:speed
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getWalkingSpeed
														parameters:
													group:
														name_var:
															variable:
																variable_names:stepper
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:Float
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:stepper
														group:
															name_var:
																variable:
																	variable_names:move
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		OPERATOR:* 
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:speed
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:sin
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:direction
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:Math
																			DOT:.
																method_argument:
																	body_statement:
																		OPERATOR:* 
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:cos
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:direction
																			group:
																				name_var:
																					exact:
																						variable_names:Math
																						BACKSLASH:\
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:speed
														group:
															name_var:
																variable:
																	variable_names:getLocation
															parameters:
														DOT:.
														DOT:.
												SEMICOLON:;
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:Double
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:getLocation
																	parameters:
																group:
																	name_var:
																		variable:
																			variable_names:getDirectionTo
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:next
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:stepper
																DOT:.
													variableName:
														name_var:
															variable:
																variable_names:direction
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:moved
									conditional:
										IF:if
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:isStop
						WEAK:~
					method_declaration:
						methodDefinition:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Path
								variableName:
									name_var:
										exact:
											WILD:newUp
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:newUp
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
															name_var:
																variable:
																	variable_names:setDown
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														exact:
															WILD:upPath
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newUp
													EQUALS:=
												SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:upPath
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													exact:
														WILD:newUp
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:updateStatus
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setUp
					objectType:
						CLASS:class 
					variable_declaration:
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:rightPath
						typeName:
							type_var:
								class:
									class_variable_names:Path
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setRight
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													exact:
														WILD:newRight
										body_call:
											group:
												name_var:
													exact:
														WILD:rightPath
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:newRight
														group:
															name_var:
																variable:
																	variable_names:setLeft
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newRight
													EQUALS:=
													name_var:
														exact:
															WILD:rightPath
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Path
								variableName:
									name_var:
										exact:
											WILD:newRight
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:updateStatus
														BACKSLASH:\
												parameters:
							typeName:
								type_var:
									class:
										class_variable_names:void
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:isPath
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:isPath
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						WEAK:~
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Path
						variableName:
							name_var:
								exact:
									WILD:downPath
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					NEWLINE:$\n
					DOT:.
					className:
						variable_names:Path
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:count
										WEAK:~
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:Integer
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													exact:
														WILD:leftPath
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:count
													OPERATOR:+= 
													BACKSLASH:\
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
												SEMICOLON:;
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													exact:
														WILD:downPath
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													BACKSLASH:\
													body_call:
														group:
															name_var:
																exact:
																	WILD:count
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
									conditional:
										IF:if
							methodName:
								name_var:
									exact:
										BACKSLASH:\
										variable_names:updateStatus
							body_element:
								body_line:
									variable_assignment:
										EQUALS:=
										name_var:
											exact:
												WILD:isStop
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:2
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															exact:
																WILD:count
									SEMICOLON:;
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													exact:
														WILD:rightPath
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:count
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													BACKSLASH:\
												SEMICOLON:;
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													BACKSLASH:\
													body_call:
														group:
															name_var:
																exact:
																	WILD:count
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:upPath
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
									conditional:
										IF:if
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:upPath
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Path
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:isStop
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:isStopper
					packageName:
						name_var:
							exact:
								WILD:environments
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Path
								variableName:
									name_var:
										exact:
											WILD:newLeft
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:newLeft
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
															name_var:
																variable:
																	variable_names:setRight
														DOT:.
												SEMICOLON:;
										body_element:
											body_line:
												variable_assignment:
													name_var:
														exact:
															WILD:leftPath
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newLeft
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													exact:
														WILD:leftPath
										body_call:
											group:
												name_var:
													exact:
														WILD:newLeft
							methodName:
								name_var:
									variable:
										variable_names:setLeft
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:updateStatus
												parameters:
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:ways
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															type_var:
																exact:
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:Way
																	BACKSLASH:\
																	variable_names:TreeSet
														NEW:new 
														parameters:
										EQUALS:=
										typeName:
											type_var:
												exact:
													BACKSLASH:\
													variable_names:TreeSet
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Way
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Path
								variableName:
									name_var:
										variable:
											variable_names:goalPath
							COMMA:,
							body_element:
								body_conditional:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:ways
											group:
												name_var:
													variable:
														variable_names:isEmpty
												parameters:
										OPERATOR:&&! 
										OPERATOR:< 
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:50 
										body_call:
											group:
												name_var:
													variable:
														variable_names:count
									conditional:
										WHILE:while
									as_body:
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:way
																		name_var:
																			variable:
																				variable_names:add
																	group:
																		name_var:
																			variable:
																				variable_names:result
															SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:way
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:goalPath
															name_var:
																variable:
																	variable_names:at
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:ways
																group:
																	name_var:
																		variable:
																			variable_names:pollFirst
																	parameters:
																DOT:.
													typeName:
														type_var:
															class:
																class_variable_names:Way
													variableName:
														name_var:
															variable:
																variable_names:way
													EQUALS:=
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																				NEW:new 
																				typeName:
																					type_var:
																						class:
																							class_variable_names:HashSet
																							template_parameters:
																								template_parameter:
																									type_var:
																										class:
																											class_variable_names:Path
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:currentStopper
																typeName:
																	type_var:
																		class:
																			class_variable_names:Set
																			template_parameters:
																				template_parameter:
																					type_var:
																						class:
																							class_variable_names:Path
													body_element:
														body_line:
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:get
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:1
																							body_call:
																								group:
																									parameters:
																									name_var:
																										variable:
																											variable_names:size
																								DOT:.
																								group:
																									name_var:
																										variable:
																											variable_names:way
																							OPERATOR:- 
																			group:
																				name_var:
																					variable:
																						variable_names:way
																			DOT:.
																variableName:
																	name_var:
																		variable:
																			variable_names:currentPath
																EQUALS:=
																typeName:
																	type_var:
																		class:
																			class_variable_names:Path
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															body_statement:
																OPERATOR:&& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:currentStopper
																	group:
																		name_var:
																			variable:
																				variable_names:contains
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:currentPath
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:rightPath
																	DOT:.
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:currentPath
																	group:
																		name_var:
																			variable:
																				variable_names:rightPath
																OPERATOR:!= 
															conditional:
																IF:if
															as_body:
																body_element:
																	body_line:
																		variable_declaration:
																			variableName:
																				name_var:
																					variable:
																						variable_names:newWay
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Way
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							NEW:new 
																							typeName:
																								type_var:
																									class:
																										class_variable_names:Way
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:way
																			EQUALS:=
																		SEMICOLON:;
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:ways
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:newWay
																								name_var:
																									variable:
																										variable_names:add
																							DOT:.
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																		body_statement:
																			body_call:
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										name_var:
																											variable:
																												variable_names:currentPath
																									group:
																										name_var:
																											variable:
																												variable_names:rightPath
																					name_var:
																						variable:
																							variable_names:add
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:newWay
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:stoppers
																	group:
																		name_var:
																			variable:
																				variable_names:containsKey
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:currentPath
																	DOT:.
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		variable_assignment:
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:stoppers
																						group:
																							name_var:
																								variable:
																									variable_names:get
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:currentPath
																			name_var:
																				variable:
																					variable_names:currentStopper
																			EQUALS:=
																		SEMICOLON:;
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																OPERATOR:&& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:contains
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:upPath
																						group:
																							name_var:
																								variable:
																									variable_names:currentPath
																						DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:currentStopper
																	DOT:.
																OPERATOR:!= 
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:currentPath
																	group:
																		name_var:
																			variable:
																				variable_names:upPath
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		variable_declaration:
																			EQUALS:=
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Way
																			variableName:
																				name_var:
																					variable:
																						variable_names:newWay
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							typeName:
																								type_var:
																									class:
																										class_variable_names:Way
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:way
																							NEW:new 
																		SEMICOLON:;
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:newWay
																								name_var:
																									variable:
																										variable_names:add
																							group:
																								name_var:
																									variable:
																										variable_names:ways
																			body_element:
																				NEWLINE:$\n
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:add
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:upPath
																									group:
																										name_var:
																											variable:
																												variable_names:currentPath
																									DOT:.
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:newWay
																body_element:
																	NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:currentPath
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:leftPath
																OPERATOR:&& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:currentPath
																						group:
																							name_var:
																								variable:
																									variable_names:leftPath
																						DOT:.
																		name_var:
																			variable:
																				variable_names:contains
																	group:
																		name_var:
																			variable:
																				variable_names:currentStopper
																OPERATOR:!= 
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:ways
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:newWay
																								name_var:
																									variable:
																										variable_names:add
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																		conditional:
																			IF:if
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:newWay
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										name_var:
																											variable:
																												variable_names:leftPath
																									group:
																										name_var:
																											variable:
																												variable_names:currentPath
																					name_var:
																						variable:
																							variable_names:add
																				DOT:.
																body_element:
																	body_line:
																		variable_declaration:
																			variableName:
																				name_var:
																					variable:
																						variable_names:newWay
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							typeName:
																								type_var:
																									class:
																										class_variable_names:Way
																							NEW:new 
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:way
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Way
																			EQUALS:=
																		SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:downPath
																	group:
																		name_var:
																			variable:
																				variable_names:currentPath
																OPERATOR:&& 
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:currentPath
																						group:
																							name_var:
																								variable:
																									variable_names:downPath
																		name_var:
																			variable:
																				variable_names:contains
																	group:
																		name_var:
																			variable:
																				variable_names:currentStopper
																OPERATOR:!= 
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		SEMICOLON:;
																		variable_declaration:
																			variableName:
																				name_var:
																					variable:
																						variable_names:newWay
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							NEW:new 
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:way
																							typeName:
																								type_var:
																									class:
																										class_variable_names:Way
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Way
																			EQUALS:=
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:newWay
																				group:
																					name_var:
																						variable:
																							variable_names:add
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										name_var:
																											variable:
																												variable_names:currentPath
																									group:
																										name_var:
																											variable:
																												variable_names:downPath
																				DOT:.
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:ways
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:newWay
																								name_var:
																									variable:
																										variable_names:add
																							DOT:.
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
															conditional:
																IF:if
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:count
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													BACKSLASH:\
													OPERATOR:+= 
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:List
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:Way
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:firstWay
										typeName:
											type_var:
												class:
													class_variable_names:Way
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														typeName:
															type_var:
																class:
																	class_variable_names:Way
														NEW:new 
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getWaysTo
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:this
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:firstWay
											DOT:.
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:firstWay
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:goalPath
												name_var:
													variable:
														variable_names:setGoal
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:result
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											template_parameters:
												COMMA:,
												template_parameter:
													type_var:
														class:
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Path
															class_variable_names:Set
												template_parameter:
													type_var:
														class:
															class_variable_names:Path
											class_variable_names:Map
								variableName:
									name_var:
										variable:
											variable_names:stoppers
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:ways
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:firstWay
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:result
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:List
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Way
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															type_var:
																class:
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:Way
																	class_variable_names:ArrayList
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:count
										typeName:
											type_var:
												class:
													class_variable_names:Integer
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
										WEAK:~
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
				NEWLINE:$\n
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:traits
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
									RETURN:return 
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:hasRequirements
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:candidate
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								NEWLINE:$\n
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					SEMICOLON:;
					className:
						variable_names:Trait
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:mods
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Trait
										type_var:
											class:
												class_variable_names:Id
							methodName:
								name_var:
									variable:
										variable_names:getId
					DOT:.
					class_declaration:
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:mods
						packageName:
							name_var:
								exact:
									WILD:entities
						NEWLINE:$\n
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						DOT:.
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:traits
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
				class_declaration:
					DOT:.
					className:
						variable_names:Traits
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:traits
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					packageName:
						name_var:
							exact:
								WILD:mods
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							typeName:
								type_var:
									class:
										class_variable_names:Trait
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:traitName
								typeName:
									type_var:
										class:
											class_variable_names:String
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:eventBodies
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:loss
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:lossBody
													COMMA:,
												name_var:
													variable:
														variable_names:put
											DOT:.
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addEventMethodsExclusive
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:eventBodies
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:Traits
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:traitName
																			ACCESS:->
											DOT:.
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										tokenName:
											NAME:impose
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:lossBody
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			group:
																				name_var:
																					variable:
																						variable_names:getImposition
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																					COMMA:,
															name_var:
																variable:
																	variable_names:add
												SEMICOLON:;
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:true
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																				name_var:
																					variable:
																						variable_names:getImposition
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
														group:
															name_var:
																variable:
																	variable_names:gainBody
														DOT:.
												SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
								typeName:
									type_var:
										class:
											class_variable_names:IToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:gainBody
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:gain
												name_var:
													variable:
														variable_names:put
											DOT:.
											group:
												name_var:
													variable:
														variable_names:eventBodies
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Traits
									class_declaration:
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:traitName
														RETURN:return 
														SEMICOLON:;
												methodName:
													name_var:
														variable:
															variable_names:getName
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:traits
										DOT:.
										variable_declaration:
											EQUALS:=
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Trait
											variableName:
												name_var:
													exact:
														WILD:id
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Trait
															NEW:new 
											static:
												STA:@
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:entities
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
												methodName:
													name_var:
														variable:
															variable_names:hasRequirements
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															exact:
																WILD:candidate
										parentName:
											type_var:
												class:
													class_variable_names:Trait
										className:
											variable_names:traitName
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:mods
										NEWLINE:$\n
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										DOT:.
										SEMICOLON:;
										objectType:
											CLASS:class 
										NEWLINE:$\n
									methodName:
										ADD:+=
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:candidate
										variableName:
											name_var:
												variable:
													variable_names:candidate
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													template_parameters:
														COMMA:,
														template_parameter:
															type_var:
																class:
																	class_variable_names:String
														template_parameter:
															BODY_TYPE:Body 
													class_variable_names:Map
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															type_var:
																class:
																	template_parameters:
																		template_parameter:
																			BODY_TYPE:Body 
																		COMMA:,
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:String
																	class_variable_names:HashMap
														parameters:
														NEW:new 
										variableName:
											name_var:
												variable:
													variable_names:eventBodies
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:requirement
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:getMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasRequirements
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						body_return:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																							RETURN:return 
																							SEMICOLON:;
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:element
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:candidate
																													COMMA:,
																													COMMA:,
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:false
																												name_var:
																													exact:
																														BACKSLASH:\
																														variable_names:getRequirement
														group:
															name_var:
																access:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:traitName
																	name_var:
																		variable:
																			variable_names:Traits
																	ACCESS:->
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:lossBody
										typeName:
											BODY_TYPE:Body 
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:traitName
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:traitName
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
																ACCESS:->
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										variableName:
											name_var:
												variable:
													variable_names:gainBody
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
											group:
												name_var:
													variable:
														variable_names:Traits
											DOT:.
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:traitName
																											type_var:
																												class:
																													class_variable_names:Traits
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:traitName
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:traitName
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:eventHost
										method_argument:
											as_statement:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:event
														group:
															name_var:
																variable:
																	variable_names:getHost
															parameters:
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											BODY_TYPE:Body 
										variableName:
											name_var:
												variable:
													variable_names:requirementsBody
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
														parameters:
									SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																name_var:
																	variable:
																		variable_names:Traits
													group:
														name_var:
															variable:
																variable_names:id
													DOT:.
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								STATEMENT_TYPE:Statement
							methodName:
								name_var:
									variable:
										variable_names:getId
					NEWLINE:$\n
					DOT:.
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					NEWLINE:$\n
					className:
						variable_names:Affinity
					packageName:
						name_var:
							exact:
								WILD:entities
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:affinities
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					objectType:
						CLASS:class 
					DOT:.
					DOT:.
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Affinity
					packageName:
						name_var:
							exact:
								WILD:mods
					class_declaration:
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
						DOT:.
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						packageName:
							name_var:
								exact:
									WILD:mods
						packageName:
							name_var:
								exact:
									WILD:affinities
						NEWLINE:$\n
						DOT:.
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:modify
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:defender
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0.0
									RETURN:return 
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:Double
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Double
								variableName:
									name_var:
										exact:
											WILD:damage
							body_element:
								NEWLINE:$\n
							COMMA:,
					NEWLINE:$\n
				NEWLINE:$\n
		class_declaration:
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			NEWLINE:$\n
			objectType:
				CLASS:class 
			className:
				variable_names:Int
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:amount
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								OPERATOR:+= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:amount
								BACKSLASH:\
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
					methodName:
						name_var:
							variable:
								variable_names:increase
			method_declaration:
				methodDefinition:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:newValue
					methodName:
						name_var:
							variable:
								variable_names:setValue
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newValue
								EQUALS:=
								name_var:
									variable:
										variable_names:value
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:Integer
				variableName:
					name_var:
						variable:
							variable_names:value
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0
			SEMICOLON:;
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				class_declaration:
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										tokenName:
											NAME:variableIndex
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															variable:
																variable_names:variableName
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							concat:
																								PLUS:+
																								name_var:
																									variable:
																										variable_names:index
																								name_var:
																									exact:
																										WILD:_
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:append
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					concat:
																						name_var:
																							exact:
																								WILD:\"+_
																						PLUS:+
																						PLUS:+
																						name_var:
																							variable:
																								variable_names:variableName
																						name_var:
																							exact:
																								WILD:+\"
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:descriptionBuilder
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															variable:
																variable_names:index
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
													EQUALS:=
												SEMICOLON:;
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Reasons
														ACCESS:->
														type_var:
															class:
																class_variable_names:Relationship
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:variableName
										body_element:
											NEWLINE:$\n
									tokenInstance:
										tokenName:
											NAME:description
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:descriptionBuilder
														group:
															name_var:
																variable:
																	variable_names:append
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
														DOT:.
												SEMICOLON:;
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:descriptionBuilder
										typeName:
											type_var:
												class:
													class_variable_names:StringBuilder
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															type_var:
																class:
																	class_variable_names:StringBuilder
														parameters:
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										access_multi:
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:reasonName
											type_var:
												class:
													class_variable_names:Reasons
											ACCESS:->
											ACCESS:->
											type_var:
												class:
													class_variable_names:Relationship
									methodName:
										ADD:+=
									class_declaration:
										DOT:.
										className:
											variable_names:Factory
										parentName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Reason
													type_var:
														class:
															class_variable_names:Relationship
													ACCESS:->
													type_var:
														class:
															class_variable_names:Factory
													ACCESS:->
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										packageName:
											name_var:
												exact:
													WILD:entities
										objectType:
											CLASS:class 
										NEWLINE:$\n
										DOT:.
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Relationship
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Reason
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																		NEW:new 
																		typeName:
																			type_var:
																				access_multi:
																					type_var:
																						class:
																							class_variable_names:Reasons
																					ACCESS:->
																					ACCESS:->
																					type_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:reasonName
																					type_var:
																						class:
																							class_variable_names:Relationship
														RETURN:return 
														SEMICOLON:;
												methodName:
													name_var:
														variable:
															variable_names:create
										packageName:
											name_var:
												exact:
													WILD:relations
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Relationship
											type_var:
												class:
													class_variable_names:Reasons
											ACCESS:->
									class_declaration:
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										parentName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Relationship
													ACCESS:->
													type_var:
														class:
															class_variable_names:Reason
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:relations
										DOT:.
										className:
											variable_names:reasonClassName
										objectType:
											CLASS:class 
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:entities
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Relationship
														ACCESS:->
														name_var:
															variable:
																variable_names:Reasons
										body_call:
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Reasons
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Relationship
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:reasonClassName
																								parameters:
																				SEMICOLON:;
																				RETURN:return 
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:reasonName
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:reasonName
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:reasonName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:replace
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:reasonClassName
																				name_var:
																					variable:
																						variable_names:equals
																			DOT:.
																		OPERATOR:|| 
											group:
												name_var:
													exact:
														WILD:create
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:reasonClassName
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:reasonName
													DOT:.
													group:
														name_var:
															variable:
																variable_names:replace
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD: 
															COMMA:,
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:IToken
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					name_var:
																						exact:
																							WILD:reasonName
																					ACCESS:->
										variableName:
											name_var:
												variable:
													variable_names:reasonName
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:reasonName
														ACCESS:->
														name_var:
															variable:
																variable_names:Reasons
														name_var:
															variable:
																variable_names:Relationship
														ACCESS:->
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:description
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																		OPERATOR:== 
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:descriptionBuilder
																					name_var:
																						exact:
																							WILD:description
																					EQUALS:=
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:name
																		OPERATOR:== 
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:reasonName
																					name_var:
																						exact:
																							WILD:name
																					EQUALS:=
																				SEMICOLON:;
																	conditional:
																		IF:if
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
					SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:relations
					NEWLINE:$\n
					DOT:.
					variable_declaration:
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:influence
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
					objectType:
						CLASS:class 
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:createListMap
														BACKSLASH:\
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Int
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:Relationship
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Reason
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
								variableName:
									name_var:
										variable:
											variable_names:data
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Relationship
									methodName:
										ADD:+=
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:influences
										WEAK:~
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:ListMaps
													type_var:
														exact:
															variable_names:_Int
															BACKSLASH:\
													ACCESS:->
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Reasons
													ACCESS:->
					NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						NEWLINE:$\n
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						class_declaration:
							objectType:
								CLASS:class 
							packageName:
								name_var:
									exact:
										WILD:entities
							packageName:
								name_var:
									exact:
										WILD:relations
							className:
								variable_names:Factory
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
									methodName:
										name_var:
											variable:
												variable_names:create
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Reason
												ACCESS:->
												type_var:
													class:
														class_variable_names:Relationship
									body_element:
										NEWLINE:$\n
							DOT:.
							DOT:.
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							NEWLINE:$\n
						DOT:.
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
						packageName:
							name_var:
								exact:
									WILD:relations
						NEWLINE:$\n
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							WEAK:~
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:name
							typeName:
								type_var:
									class:
										class_variable_names:String
						method_declaration:
							methodDefinition:
								typeName:
									type_var:
										exact:
											variable_names:boolean
											BACKSLASH:\
								body_element:
									body_return:
										method_argument:
											body_statement:
												OPERATOR:&& 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															variable:
																variable_names:otherReason
												body_call:
													group:
														name_var:
															variable:
																variable_names:equals
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:name
													DOT:.
													group:
														name_var:
															exact:
																WILD:name
													group:
														name_var:
															exact:
																WILD:((Reason)otherReason)
													DOT:.
										RETURN:return 
										SEMICOLON:;
								variable_declaration:
									typeName:
										type_var:
											exact:
												BACKSLASH:\
												variable_names:Object
									variableName:
										name_var:
											variable:
												variable_names:otherReason
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								methodName:
									name_var:
										variable:
											variable_names:equals
						NEWLINE:$\n
						variable_declaration:
							EQUALS:=
							WEAK:~
							typeName:
								type_var:
									class:
										class_variable_names:String
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							variableName:
								name_var:
									variable:
										variable_names:description
						SEMICOLON:;
						SEMICOLON:;
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:hashCode
								typeName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:int
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														name_var:
															variable:
																variable_names:hashCode
													group:
														name_var:
															exact:
																WILD:name
													DOT:.
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
						className:
							variable_names:Reason
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:reason
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:amount
																	NEW:new 
																	typeName:
																		type_var:
																			class:
																				class_variable_names:Int
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													exact:
														WILD:influences
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:amount
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Relationship
											type_var:
												class:
													class_variable_names:Reason
											ACCESS:->
								variableName:
									name_var:
										variable:
											variable_names:reason
							COMMA:,
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:influence
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:amount
										body_call:
											group:
												name_var:
													variable:
														variable_names:influence
										OPERATOR:+= 
										BACKSLASH:\
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					class_declaration:
						packageName:
							name_var:
								exact:
									WILD:entities
						NEWLINE:$\n
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:relations
						className:
							variable_names:Reasons
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:create
								static:
									STA:@
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										SEMICOLON:;
										RETURN:return 
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Relationship
											type_var:
												class:
													class_variable_names:Reason
											ACCESS:->
								body_element:
									NEWLINE:$\n
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:reasonName
									typeName:
										type_var:
											class:
												class_variable_names:String
								body_element:
									NEWLINE:$\n
						DOT:.
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					className:
						variable_names:Relationship
				NEWLINE:$\n
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
						class_declaration:
							objectType:
								CLASS:class 
							class_declaration:
								FORSLASH:/
								NEWLINE:$\n
								objectType:
									CLASS:class 
								className:
									variable_names:Id
								FORSLASH:/
							NEWLINE:$\n
							DOT:.
							NEWLINE:$\n
							DOT:.
							className:
								variable_names:Association
							DOT:.
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:add
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:add
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:newMember
													group:
														name_var:
															variable:
																variable_names:members
													DOT:.
									typeName:
										type_var:
											class:
												class_variable_names:void
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:newMember
										typeName:
											type_var:
												class:
													class_variable_names:Entity
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Entity
											class_variable_names:List
								method_argument:
									body_statement:
										body_call:
											group:
												typeName:
													type_var:
														class:
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Entity
															class_variable_names:ArrayList
												parameters:
												NEW:new 
								WEAK:~
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:members
							packageName:
								name_var:
									exact:
										WILD:associations
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:relations
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							SEMICOLON:;
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:Association
									methodName:
										name_var:
											variable:
												variable_names:getId
									body_element:
										NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:entities
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							class_declaration:
								objectType:
									INTERFACE:interface 
								NEWLINE:$\n
								FORSLASH:/
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:Association
										methodName:
											name_var:
												variable:
													variable_names:create
								NEWLINE:$\n
								FORSLASH:/
								className:
									variable_names:Factory
						NEWLINE:$\n
				NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			className:
				variable_names:Entities
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:entityName
					static:
						STA:@
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Entity
					methodName:
						name_var:
							variable:
								variable_names:createEntity
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
			method_declaration:
				methodDefinition:
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									type_var:
										exact:
											variable_names:entityName
											BACKSLASH:\
									type_var:
										class:
											class_variable_names:Entities
									ACCESS:->
							class_declaration:
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								DOT:.
								NEWLINE:$\n
								className:
									variable_names:Factory
								objectType:
									CLASS:class 
								interfaceName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Factory
											ACCESS:->
											type_var:
												class:
													class_variable_names:Entity
								packageName:
									name_var:
										exact:
											WILD:entities
								NEWLINE:$\n
								parentName:
									type_var:
										exact:
											variable_names:Object
											BACKSLASH:\
								method_declaration:
									methodDefinition:
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																NEW:new 
																typeName:
																	type_var:
																		access_multi:
																			ACCESS:->
																			type_var:
																				class:
																					class_variable_names:Entities
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:entityName
																parameters:
												RETURN:return 
										body_element:
											NEWLINE:$\n
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:create
							methodName:
								ADD:+=
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:entityName
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:toString
											group:
												name_var:
													variable:
														variable_names:entityNameBuilder
								typeName:
									type_var:
										class:
											class_variable_names:String
								EQUALS:=
							SEMICOLON:;
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:entityName
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:entityNameBuilder
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:element
													name_var:
														variable:
															variable_names:append
										SEMICOLON:;
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:declarationToken
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												access:
													ACCESS:->
													ACCESS:->
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:entityName
													name_var:
														variable:
															variable_names:Factory
													name_var:
														variable:
															variable_names:Entities
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:StringBuilder
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:entityNameBuilder
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												parameters:
												typeName:
													type_var:
														class:
															class_variable_names:StringBuilder
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:declarationToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:declarationToken
							COLON::
							tokenInstance:
								COLON::
								body_element:
									body_manipulate:
										tokenInstance:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		typeName:
																			BODY_TYPE:Body 
																		parameters:
														typeName:
															BODY_TYPE:Body 
														variableName:
															name_var:
																variable:
																	variable_names:eventBody
											body_element:
												body_manipulate:
													COLON::
													variableName:
														NAME:quark
													name_var:
														variable:
															variable_names:atom
													tokenInstance:
														tokenName:
															NAME:body_element
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eventBody
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:add
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:eventContext
																								name_var:
																									exact:
																										variable_names:getBodyElement
																										BACKSLASH:\
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
														COLON::
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															DOT:.
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													variable:
																														variable_names:atom
																												ACCESS:->
																												name_var:
																													exact:
																														WILD:event_names
																	COMMA:,
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:eventBody
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							ACCESS:->
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:entityName
																							name_var:
																								variable:
																									variable_names:Entities
																name_var:
																	variable:
																		variable_names:addToEventMethod
															group:
																name_var:
																	variable:
																		variable_names:Events
											body_element:
												body_line:
													variable_declaration:
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:addToEventMethod
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:entityName
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:Entities
																			COMMA:,
																			COMMA:,
																			method_argument:
																				body_entries:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:event_names
																														name_var:
																															variable:
																																variable_names:atom
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	DOT:.
														typeName:
															CONTEXT_TYPE:Context 
														variableName:
															name_var:
																variable:
																	variable_names:eventContext
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:event
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											COLON::
										name_var:
											variable:
												variable_names:element
										COLON::
										variableName:
											NAME:atom
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										variableName:
											NAME:atom
										COLON::
										tokenInstance:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:arguments
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																		typeName:
																			STATEMENT_TYPE:Statement
																		NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														EQUALS:=
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:arguments
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:,
																name_var:
																	variable:
																		variable_names:set
											tokenName:
												NAME:skill
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		ACCESS:->
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													NEW:new 
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_method:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:arguments
																													typeName:
																														type_var:
																															access_multi:
																																ACCESS:->
																																type_var:
																																	class:
																																		class_variable_names:Skills
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						access:
																																							name_var:
																																								variable:
																																									variable_names:atom
																																							ACCESS:->
																																							CAMEL:^
																																							name_var:
																																								exact:
																																									WILD:skill_names
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:this
																					SEMICOLON:;
													SEMICOLON:;
											COLON::
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:getContext
																		parameters:
																	group:
																		name_var:
																			variable:
																				variable_names:Entity
																	DOT:.
														variableName:
															name_var:
																variable:
																	variable_names:bodyContext
														EQUALS:=
														typeName:
															CONTEXT_TYPE:Context 
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													tokenInstance:
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																SEMICOLON:;
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:add
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getStatement
																								parameters:
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:bodyContext
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																		group:
																			name_var:
																				variable:
																					variable_names:arguments
														body_element:
															NEWLINE:$\n
														tokenName:
															NAME:statement
														COLON::
													name_var:
														variable:
															variable_names:atom
													variableName:
														NAME:quark
													COLON::
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										variableName:
											NAME:atom
										tokenInstance:
											COLON::
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													typeName:
																														type_var:
																															access_multi:
																																type_var:
																																	class:
																																		class_variable_names:Affinities
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							CAMEL:^
																																							variable_names:atom
																																ACCESS:->
																													NEW:new 
																													parameters:
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							DOT:.
																					SEMICOLON:;
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
											tokenName:
												NAME:affinity_names
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										COLON::
								tokenName:
									NAME:entity_definition
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										variableName:
											NAME:atom
										tokenInstance:
											body_element:
												body_conditional:
													as_body:
														body_element:
															body_line:
																variable_assignment:
																	EQUALS:=
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													variable:
																														variable_names:atom
																												ACCESS:->
																												name_var:
																													exact:
																														WILD:left
																	name_var:
																		variable:
																			variable_names:rightBound
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
													conditional:
														IF:if
													body_statement:
														OPERATOR:!= 
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:atom
																		name_var:
																			exact:
																				WILD:right
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
											COLON::
											body_element:
												body_line:
													variable_declaration:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										exact:
																											WILD:left
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:atom
														typeName:
															type_var:
																class:
																	class_variable_names:String
														EQUALS:=
														variableName:
															name_var:
																variable:
																	variable_names:leftBound
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:atom
																									ACCESS:->
																									name_var:
																										exact:
																											WILD:hero_stats
																	DOT:.
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:toLowerCase
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:heroStatName
														EQUALS:=
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:statRange
											body_element:
												body_line:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:rightBound
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_conditional:
													as_body:
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																variable_assignment:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:leftBound
																	EQUALS:=
																	name_var:
																		variable:
																			variable_names:rightBound
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
													conditional:
														ELSE:else
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:setValue
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												DOT:.
																												group:
																													name_var:
																														variable:
																															variable_names:Range
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:leftBound
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:rightBound
																														COMMA:,
																													name_var:
																														variable:
																															variable_names:getIntegerBetween
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							DOT:.
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:heroStatName
																							DOT:.
																					SEMICOLON:;
										COLON::
										name_var:
											variable:
												variable_names:element
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Entities
							methodName:
								ADD:+=
							class_declaration:
								className:
									variable_names:entityName
								parentName:
									type_var:
										class:
											class_variable_names:Entity
								DOT:.
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								objectType:
									CLASS:class 
								packageName:
									name_var:
										exact:
											WILD:entities
								NEWLINE:$\n
					typeName:
						CLASS_TYPE:Class 
			packageName:
				name_var:
					exact:
						WILD:entities
		imports:
			IMPORT_CLASS:
				class_declaration:
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:name
					NEWLINE:$\n
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						variableName:
							name_var:
								variable:
									variable_names:failed
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						EQUALS:=
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Event
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:Failed
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:host
														group:
															name_var:
																variable:
																	variable_names:loses
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getId
																			group:
																				name_var:
																					variable:
																						variable_names:this
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
												name_var:
													exact:
														variable_names:hasFailed
														BACKSLASH:\
									conditional:
										IF:if
										ELSE:else
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
												name_var:
													exact:
														variable_names:hasSucceeded
														BACKSLASH:\
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Event
																							type_var:
																								exact:
																									variable_names:Success
																									BACKSLASH:\
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:host
														group:
															name_var:
																variable:
																	variable_names:loses
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getId
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Events
											ACCESS:->
											type_var:
												exact:
													BACKSLASH:\
													variable_names:Tick
								variableName:
									name_var:
										variable:
											variable_names:event
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
													group:
														name_var:
															variable:
																variable_names:event
										variableName:
											name_var:
												variable:
													variable_names:host
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Event
																							ACCESS:->
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:Idle
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:step
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:==
									conditional:
										ELSE:else
										IF:if
					class_declaration:
						objectType:
							INTERFACE:interface 
						NEWLINE:$\n
						className:
							variable_names:Factory
						NEWLINE:$\n
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:create
								typeName:
									type_var:
										class:
											class_variable_names:Activity
						FORSLASH:/
						FORSLASH:/
					method_declaration:
						methodDefinition:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:hasSucceeded
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
					DOT:.
					SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:activities
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:hasTarget
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											OPERATOR:!= 
											body_call:
												group:
													name_var:
														variable:
															variable_names:targetEntity
									SEMICOLON:;
									RETURN:return 
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:to
								typeName:
									type_var:
										class:
											class_variable_names:Path
							methodName:
								name_var:
									variable:
										variable_names:rememberIncomingPath
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:put
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:in
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																				typeName:
																					type_var:
																						class:
																							template_parameters:
																								template_parameter:
																									type_var:
																										class:
																											class_variable_names:Path
																							class_variable_names:HashSet
														group:
															name_var:
																variable:
																	variable_names:pathStoppers
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:pathStoppers
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:in
												name_var:
													variable:
														variable_names:containsKey
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Path
								variableName:
									name_var:
										variable:
											variable_names:in
							COMMA:,
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:to
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:get
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:in
											DOT:.
											DOT:.
											group:
												name_var:
													variable:
														variable_names:pathStoppers
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						NEWLINE:$\n
						FORSLASH:/
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							variable_declaration:
								typeName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:EntityCriteria
								variableName:
									name_var:
										variable:
											variable_names:targetCriteria
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:host
												DOT:.
												group:
													parameters:
													name_var:
														variable:
															variable_names:getLocation
												group:
													name_var:
														variable:
															variable_names:getClosestEntity
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:targetCriteria
									RETURN:return 
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:getTarget
							COMMA:,
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Map
									template_parameters:
										COMMA:,
										template_parameter:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Path
													class_variable_names:Set
										template_parameter:
											type_var:
												class:
													class_variable_names:Path
						method_argument:
							body_statement:
								body_call:
									group:
										NEW:new 
										parameters:
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Path
														template_parameter:
															type_var:
																class:
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:Path
																	class_variable_names:Set
														COMMA:,
													class_variable_names:HashMap
						variableName:
							name_var:
								variable:
									variable_names:pathStoppers
						WEAK:~
						EQUALS:=
					packageName:
						name_var:
							exact:
								WILD:entities
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:description
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						WEAK:~
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:targetEntity
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								class:
									class_variable_names:Entity
					DOT:.
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Entity
													class_variable_names:List
										variableName:
											name_var:
												variable:
													variable_names:entitiesToTarget
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:event
													group:
														name_var:
															variable:
																variable_names:getEntitiesWithin
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:20
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
													group:
														name_var:
															variable:
																variable_names:getLocation
														parameters:
													DOT:.
													DOT:.
									SEMICOLON:;
							body_element:
								body_line:
									variable_assignment:
										name_var:
											variable:
												variable_names:failed
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:entitiesToTarget
									as_body:
										body_element:
											body_conditional:
												OPERATOR:: 
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															as_body:
																body_element:
																	body_line:
																		SEMICOLON:;
																		body_statement:
																			body_call:
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:event
																				group:
																					name_var:
																						variable:
																							variable_names:start
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										typeName:
																											type_var:
																												access_multi:
																													ACCESS:->
																													type_var:
																														exact:
																															BACKSLASH:\
																															variable_names:ChaseEntity
																													type_var:
																														class:
																															class_variable_names:Activities
																										parameters:
																											COMMA:,
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:usable
																														group:
																															name_var:
																																variable:
																																	variable_names:getRange
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:getHost
																																				parameters:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:event
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	NAME:
																																		NUMBER:25
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:candidate
																											COMMA:,
																										NEW:new 
																				group:
																					name_var:
																						variable:
																							variable_names:getHost
																					parameters:
																				DOT:.
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_return:
																		RETURN:return 
																		SEMICOLON:;
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:true
															conditional:
																IF:if
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:satisfies
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:candidate
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	DOT:.
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getTargetCriteria
																		parameters:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
												conditional:
													FOR:for
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:candidate
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									OPERATOR:: 
									conditional:
										FOR:for
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:event
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Events
											ACCESS:->
											type_var:
												exact:
													variable_names:Idle
													BACKSLASH:\
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					SEMICOLON:;
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:failed
									SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:hasFailed
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
					className:
						variable_names:Activity
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:step
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Event
								variableName:
									name_var:
										variable:
											variable_names:host
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_conditional:
															as_body:
																body_element:
																	body_return:
																		RETURN:return 
																		SEMICOLON:;
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:true
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															conditional:
																IF:if
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:host
																	group:
																		name_var:
																			variable:
																				variable_names:getFocusSkill
																		parameters:
																	DOT:.
																OPERATOR:!=
																OPERATOR:&& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	group:
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:this
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																		name_var:
																			variable:
																				variable_names:use
																	DOT:.
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												OPERATOR:: 
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
												conditional:
													FOR:for
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
									body_statement:
										OPERATOR:|| 
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:getUsables
											group:
												name_var:
													variable:
														variable_names:containsKey
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getId
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getFocusSkill
																DOT:.
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:== 
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:host
											group:
												name_var:
													variable:
														variable_names:getFocusSkill
												parameters:
										body_call:
											group:
												name_var:
													variable:
														variable_names:host
											group:
												name_var:
													variable:
														variable_names:getFocusSkill
												parameters:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:use
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:this
											DOT:.
										OPERATOR:==
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:== 
										OPERATOR:|| 
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getDestination
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:Tile
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Activity
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:activities
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:data
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_entries:
													COMMA:,
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:success
											DOT:.
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:createCriteria
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
									SEMICOLON:;
							inner:
								IN:>
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													COMMA:,
													method_argument:
														body_entries:
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
											group:
												parameters:
													COMMA:,
													method_argument:
														body_entries:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:idle
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
													COMMA:,
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:load
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
												name_var:
													variable:
														variable_names:addToEventMethod
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Entity
											group:
												name_var:
													variable:
														variable_names:addGainLoss
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Usable
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					className:
						variable_names:Activities
					method_declaration:
						methodDefinition:
							static:
								STA:@
							methodName:
								name_var:
									variable:
										variable_names:create
							typeName:
								type_var:
									class:
										class_variable_names:Activity
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:activityName
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:description
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:description
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:on
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									typeName:
																										type_var:
																											access_multi:
																												type_var:
																													exact:
																														BACKSLASH:\
																														variable_names:Load
																												ACCESS:->
																												type_var:
																													class:
																														class_variable_names:Events
																									NEW:new 
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:host
																	SEMICOLON:;
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
																name_var:
																	exact:
																		WILD:activityName
										variableName:
											name_var:
												variable:
													variable_names:activityName
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:variable
													typeName:
														VARIABLE_TYPE:Variable 
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:variable_header
																								name_var:
																									variable:
																										variable_names:element
																								ACCESS:->
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																								name_var:
																									variable:
																										variable_names:Activities
																		COMMA:,
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:addVariableHeader
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		exact:
																			WILD:statement
																	name_var:
																		variable:
																			variable_names:element
																	ACCESS:->
												conditional:
													IF:if
												as_body:
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:variable
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getStatement
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:statement
																														name_var:
																															variable:
																																variable_names:element
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:activityName
																														name_var:
																															variable:
																																variable_names:Activities
																											group:
																												parameters:
																												name_var:
																													variable:
																														variable_names:getContext
																											DOT:.
																								COMMA:,
																		name_var:
																			variable:
																				variable_names:setAssignment
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										tokenName:
											NAME:variable_declaration
										body_element:
											NEWLINE:$\n
										COLON::
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																		name_var:
																			variable:
																				variable_names:appendToBody
																	group:
																		name_var:
																			exact:
																				WILD:getTarget[Entity,EntityCriteria]
																	DOT:.
													tokenName:
														NAME:body_element
												name_var:
													variable:
														variable_names:element
										tokenName:
											NAME:getTarget
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												method_declaration:
													methodDefinition:
														variable_declaration:
															typeName:
																type_var:
																	class:
																		class_variable_names:Entity
															variableName:
																name_var:
																	variable:
																		variable_names:host
														methodName:
															name_var:
																variable:
																	variable_names:getTarget
														COMMA:,
														variable_declaration:
															variableName:
																name_var:
																	variable:
																		variable_names:targetCriteria
															typeName:
																type_var:
																	exact:
																		variable_names:EntityCriteria
																		BACKSLASH:\
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														type_var:
															class:
																class_variable_names:Activities
												methodName:
													ADD:+=
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															OPERATOR:->*
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Activities
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
																			ACCESS:->
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:getCurrentContext
																	parameters:
																group:
																	name_var:
																		exact:
																			WILD:getTarget[Entity,EntityCriteria]
													typeName:
														CONTEXT_TYPE:Context 
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													EQUALS:=
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_line:
												variable_declaration:
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:Events
																group:
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																	parameters:
																		method_argument:
																			body_entries:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:Activities
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																		COMMA:,
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													name_var:
																														variable:
																															variable_names:element
																													ACCESS:->
																													name_var:
																														exact:
																															WILD:event_names
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventBody
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Activities
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												variable:
																													variable_names:element
																											name_var:
																												exact:
																													WILD:event_names
																											ACCESS:->
																COMMA:,
																COMMA:,
															name_var:
																variable:
																	variable_names:addToEventMethod
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:Events
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		BODY_TYPE:Body 
																	NEW:new 
																	parameters:
													typeName:
														BODY_TYPE:Body 
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:eventBody
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												COLON::
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:eventBody
													tokenName:
														NAME:body_element
										body_element:
											NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:IToken
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:create
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Activities
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:activityName
																											ACCESS:->
																								parameters:
																				RETURN:return 
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																				name_var:
																					variable:
																						variable_names:equals
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:activityName
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
										body_call:
											group:
												name_var:
													variable:
														variable_names:Activities
										OPERATOR:->*
									SEMICOLON:;
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										tokenName:
											NAME:variable_header
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:addVariableHeader
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
												SEMICOLON:;
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Activities
									methodName:
										ADD:+=
									class_declaration:
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:allUsables
														RETURN:return 
														SEMICOLON:;
												typeName:
													type_var:
														class:
															class_variable_names:List
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Usable
												methodName:
													name_var:
														variable:
															variable_names:getUsables
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											variableName:
												name_var:
													variable:
														variable_names:host
											EQUALS:=
										NEWLINE:$\n
										NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Activity
										className:
											variable_names:activityName
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:false
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:host
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												methodName:
													name_var:
														variable:
															variable_names:hasSucceeded
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														SEMICOLON:;
														RETURN:return 
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Id
															type_var:
																class:
																	class_variable_names:Activity
															ACCESS:->
												methodName:
													name_var:
														variable:
															variable_names:getId
												body_element:
													NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														RETURN:return 
														SEMICOLON:;
												typeName:
													type_var:
														class:
															class_variable_names:String
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
										SEMICOLON:;
										SEMICOLON:;
										NEWLINE:$\n
										variable_declaration:
											EQUALS:=
											variableName:
												name_var:
													variable:
														variable_names:allUsables
											typeName:
												type_var:
													class:
														class_variable_names:List
														template_parameters:
															template_parameter:
																type_var:
																	class:
																		class_variable_names:Usable
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	class:
																		class_variable_names:ArrayList
																		template_parameters:
																			template_parameter:
																				type_var:
																					class:
																						class_variable_names:Usable
															parameters:
											static:
												STA:@
										objectType:
											CLASS:class 
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:host
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:hasFailed
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:false
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activityName
														RETURN:return 
														SEMICOLON:;
										SEMICOLON:;
										NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Activity
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
															NEW:new 
															parameters:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Activity
											variableName:
												name_var:
													variable:
														variable_names:id
											static:
												STA:@
											EQUALS:=
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Entity
													body_call:
														group:
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:allUsables
																						DOT:.
																						group:
																							name_var:
																								access:
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:Activities
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																						DOT:.
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:source
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													as_string:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:variableName
																								COMMA:,
																							name_var:
																								variable:
																									variable_names:add
																		body_element:
																			NEWLINE:$\n
															name_var:
																variable:
																	variable_names:appendToBody
														DOT:.
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
													OPERATOR:->*
												SEMICOLON:;
										body_element:
											body_line:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															variable:
																variable_names:methodName
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:element
																			PLUS:+
																			PLUS:+
																			name_var:
																				exact:
																					WILD:gain[
																			name_var:
																				exact:
																					WILD:,Source]
												SEMICOLON:;
										tokenName:
											NAME:className
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																group:
																	name_var:
																		variable:
																			variable_names:toLowerCase
																	parameters:
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															variable:
																variable_names:variableName
										COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Activities
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getDestination
														variable_declaration:
															typeName:
																type_var:
																	class:
																		class_variable_names:Entity
															variableName:
																name_var:
																	variable:
																		variable_names:host
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												tokenInstance:
													tokenName:
														NAME:body_element
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								COMMA:,
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																	group:
																		name_var:
																			exact:
																				WILD:getDestination[Entity]
																	DOT:.
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
										tokenName:
											NAME:getDestination
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													typeName:
														CONTEXT_TYPE:Context 
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		exact:
																			WILD:getDestination[Entity]
																group:
																	name_var:
																		variable:
																			variable_names:getCurrentContext
																	parameters:
															OPERATOR:->*
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Activities
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
										body_element:
											NEWLINE:$\n
										COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:endState
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		variable:
																			variable_names:element
																	ACCESS:->
																	name_var:
																		exact:
																			WILD:SUCCEED
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:successContext
																typeName:
																	CONTEXT_TYPE:Context 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Activities
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																						ACCESS:->
																		OPERATOR:->*
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:getCurrentContext
																				parameters:
																			group:
																				name_var:
																					exact:
																						WILD:hasSucceeded[Entity]
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																OPERATOR:->*
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										RETURN:return 
																										SEMICOLON:;
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:successContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:element
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						ACCESS:->
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:appendToBody
																	group:
																		name_var:
																			exact:
																				WILD:hasSucceeded[Entity]
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													ELSE:else
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:hasFailed[Entity]
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:element
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						ACCESS:->
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:failContext
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										RETURN:return 
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																										SEMICOLON:;
																							conditional:
																								IF:if
																		name_var:
																			variable:
																				variable_names:appendToBody
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																typeName:
																	CONTEXT_TYPE:Context 
																variableName:
																	name_var:
																		variable:
																			variable_names:failContext
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:getCurrentContext
																				parameters:
																			group:
																				name_var:
																					exact:
																						WILD:hasFailed[Entity]
																			DOT:.
													body_element:
														NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:behaviours
					DOT:.
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:setEnder
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		parameters:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:getValue
											DOT:.
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:getContext
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Item
														name_var:
															variable:
																variable_names:Modifier
														ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:createList
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Aspect
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
								variableName:
									name_var:
										variable:
											variable_names:data
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Entity
											group:
												name_var:
													variable:
														variable_names:addGainLoss
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Item
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Aspect
											DOT:.
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:setup
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_manipulate:
									tokenInstance:
										COLON::
										tokenName:
											NAME:value
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	exact:
																		WILD:value
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Item
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Modifier
																				NEW:new 
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											variable_names:this
																											BACKSLASH:\
												type_var:
													access_multi:
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
														ACCESS:->
														ACCESS:->
														type_var:
															class:
																class_variable_names:Items
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
									COLON::
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								comment:
									WILD:>	itemToken : element : animation { > Items->\className->* += { \image = `Images.animation(element)`;} }
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
									tokenInstance:
										COLON::
										tokenName:
											NAME:attack
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																EQUALS:=
																name_var:
																	exact:
																		WILD:dmg
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Item
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Modifier
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													DOT:.
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											variable_names:this
																											BACKSLASH:\
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:change_item
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							variable_names:getItem
																							BACKSLASH:\
																					parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Items
																						ACCESS:->
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:className
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Aspects
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:change_item
															name_var:
																variable:
																	variable_names:gain
														DOT:.
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:gain_aspect
										COLON::
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:itemToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:itemToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										tokenName:
											NAME:weight
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															exact:
																variable_names:className
																BACKSLASH:\
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														ACCESS:->
														type_var:
															class:
																class_variable_names:Items
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											variable_names:this
																											BACKSLASH:\
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																					COMMA:,
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Modifier
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Item
																name_var:
																	exact:
																		WILD:weight
																EQUALS:=
															SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:itemToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										tokenName:
											NAME:gain_attack
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Attacks
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:equip
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getHost
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:className
																						name_var:
																							variable:
																								variable_names:Items
																COMMA:,
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:unequip
															name_var:
																variable:
																	variable_names:gain
														DOT:.
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:this
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
									tokenInstance:
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															exact:
																variable_names:className
																BACKSLASH:\
														ACCESS:->
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	exact:
																		WILD:def
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													DOT:.
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Modifier
																							type_var:
																								class:
																									class_variable_names:Item
																							ACCESS:->
										tokenName:
											NAME:defense
										COLON::
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													variable:
														variable_names:Items
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Items
																											ACCESS:->
																											type_var:
																												exact:
																													variable_names:className
																													BACKSLASH:\
																								NEW:new 
																								parameters:
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:itemName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:className
																	conditional:
																		IF:if
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
											group:
												name_var:
													exact:
														WILD:create
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Items
														ACCESS:->
														name_var:
															exact:
																variable_names:className
																BACKSLASH:\
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_line:
																	variable_assignment:
																		EQUALS:=
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_quote:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													ACCESS:->
																													name_var:
																														exact:
																															WILD:itemName
																													name_var:
																														variable:
																															variable_names:itemToken
																		name_var:
																			exact:
																				WILD:name
																	SEMICOLON:;
										OPERATOR:->*.
									SEMICOLON:;
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		BODY_TYPE:Body 
																	parameters:
													typeName:
														BODY_TYPE:Body 
													variableName:
														name_var:
															variable:
																variable_names:bodyElementList
												SEMICOLON:;
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Events
																DOT:.
																group:
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:bodyElementList
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:className
																								name_var:
																									variable:
																										variable_names:Items
																		COMMA:,
																	name_var:
																		variable:
																			variable_names:addToEventMethod
													variableName:
														name_var:
															variable:
																variable_names:context
													EQUALS:=
													typeName:
														CONTEXT_TYPE:Context 
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												tokenInstance:
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:bodyElementList
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
																								COMMA:,
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																		name_var:
																			variable:
																				variable_names:add
													tokenName:
														NAME:body_element
												variableName:
													NAME:atom
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:bodyElementList
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Items
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:className
																						ACCESS:->
																COMMA:,
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:Events
									COLON::
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:itemToken
																ACCESS:->
																CAMEL:^
																name_var:
																	exact:
																		WILD:itemName
										variableName:
											name_var:
												variable:
													variable_names:className
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								body_manipulate:
									tokenInstance:
										COLON::
										body_element:
											body_manipulate:
												body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
																							ACCESS:->
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													DOT:.
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																name_var:
																	exact:
																		WILD:maxHp
																EQUALS:=
															SEMICOLON:;
												methodName:
													ADD:+=
												type_var:
													access_multi:
														ACCESS:->
														ACCESS:->
														type_var:
															class:
																class_variable_names:Items
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:hp
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													DOT:.
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
																							ACCESS:->
																name_var:
																	exact:
																		WILD:hp
																EQUALS:=
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
														type_var:
															class:
																class_variable_names:Items
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														ACCESS:->
										body_element:
											NEWLINE:$\n
									COLON::
									name_var:
										variable:
											variable_names:itemToken
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Items
									class_declaration:
										NEWLINE:$\n
										objectType:
											CLASS:class 
										className:
											variable_names:className
										DOT:.
										parentName:
											type_var:
												class:
													class_variable_names:Item
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:items
										NEWLINE:$\n
										SEMICOLON:;
										packageName:
											name_var:
												exact:
													WILD:entities
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Items
														type_var:
															class:
																class_variable_names:Id
											variableName:
												name_var:
													exact:
														variable_names:id
														BACKSLASH:\
											EQUALS:=
											static:
												STA:@
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Items
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	variable_names:this
																	BACKSLASH:\
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							variable_names:getHost
																							BACKSLASH:\
																					parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Traits
																COMMA:,
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Items
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:className
																						ACCESS:->
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:equip
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:unequip
															name_var:
																variable:
																	variable_names:gain
										COLON::
										tokenName:
											NAME:gain_trait
									COLON::
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:IToken
								variableName:
									name_var:
										variable:
											variable_names:itemToken
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:create
							typeName:
								type_var:
									class:
										class_variable_names:Item
							static:
								STA:@
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										exact:
											WILD:itemName
					packageName:
						name_var:
							exact:
								WILD:items
					className:
						variable_names:Items
					class_declaration:
						packageName:
							name_var:
								exact:
									WILD:entities
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						DOT:.
						objectType:
							CLASS:class 
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:items
						className:
							variable_names:Id
						NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:gainToken
								typeName:
									type_var:
										class:
											class_variable_names:IToken
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:gainEventName
								typeName:
									type_var:
										class:
											class_variable_names:String
							body_element:
								NEWLINE:$\n
							COMMA:,
							COMMA:,
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:loseEventName
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:idClass
										typeName:
											CLASS_TYPE:Class 
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:Id
																name_var:
																	variable:
																		variable_names:gainClass
									SEMICOLON:;
							inner:
								IN:>
							COMMA:,
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																CAMEL:^
																variable_names:gainToken
										variableName:
											name_var:
												variable:
													variable_names:specificClassName
										EQUALS:=
									SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:subject
								typeName:
									STATEMENT_TYPE:Statement
							COMMA:,
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:itemClass
								typeName:
									CLASS_TYPE:Class 
							COMMA:,
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getName
														parameters:
													DOT:.
													DOT:.
													group:
														name_var:
															variable:
																variable_names:gainClass
													group:
														name_var:
															variable:
																variable_names:toLowerCase
														parameters:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:asList
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:gainEventName
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:itemClass
																method_argument:
																	body_entries:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:event
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:subject
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:gain
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																												typeName:
																													type_var:
																														class:
																															class_variable_names:specificClass
																												NEW:new 
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:this
																						DOT:.
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
															name_var:
																variable:
																	variable_names:addToEventMethod
														group:
															name_var:
																variable:
																	variable_names:Events
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:loseEventName
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:event
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:lose
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											DOT:.
																											group:
																												name_var:
																													variable:
																														variable_names:specificClass
																											group:
																												name_var:
																													exact:
																														WILD:id
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														variable_names:this
																														BACKSLASH:\
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:subject
																						DOT:.
																						DOT:.
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:itemClass
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
										body_element:
											NEWLINE:$\n
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:boolean_statement
														name_var:
															variable:
																variable_names:gainToken
														ACCESS:->
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										variableName:
											name_var:
												variable:
													variable_names:loseContext
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			parameters:
																			typeName:
																				BODY_TYPE:Body 
																			NEW:new 
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:loseEventName
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:itemClass
															COMMA:,
														name_var:
															variable:
																variable_names:addToEventMethod
													group:
														name_var:
															variable:
																variable_names:Events
													DOT:.
										EQUALS:=
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:gainContext
										EQUALS:=
										typeName:
											CONTEXT_TYPE:Context 
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:gainEventName
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:itemClass
															COMMA:,
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			NEW:new 
																			parameters:
																			typeName:
																				BODY_TYPE:Body 
														name_var:
															variable:
																variable_names:addToEventMethod
													DOT:.
													group:
														name_var:
															variable:
																variable_names:Events
									SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:gainClass
								typeName:
									CLASS_TYPE:Class 
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:specificClass
										EQUALS:=
										typeName:
											CLASS_TYPE:Class 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:specificClassName
																name_var:
																	variable:
																		variable_names:gainClass
																ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:gain
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:gainToken
												COLON::
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	group:
																		name_var:
																			variable:
																				variable_names:addToEventMethod
																		parameters:
																			COMMA:,
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																COMMA:,
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:gainContext
																								OPERATOR:&& 
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:subject
																									group:
																										name_var:
																											exact:
																												WILD:event
																									DOT:.
																									DOT:.
																									group:
																										name_var:
																											exact:
																												variable_names:has
																												BACKSLASH:\
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:specificClass
																														group:
																															name_var:
																																exact:
																																	WILD:id
																														DOT:.
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									body_line:
																										body_statement:
																											body_call:
																												DOT:.
																												group:
																													name_var:
																														exact:
																															WILD:event
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:subject
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				WILD:id
																																	DOT:.
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:specificClass
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				BACKSLASH:\
																																				variable_names:this
																													name_var:
																														exact:
																															BACKSLASH:\
																															variable_names:lose
																												DOT:.
																										SEMICOLON:;
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:loseEventName
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:itemClass
																			COMMA:,
																	DOT:.
															SEMICOLON:;
													body_element:
														body_line:
															variable_declaration:
																typeName:
																	STATEMENT_TYPE:Statement
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:gainContext
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBooleanStatement
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:gainHeader
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:loseHeader
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:getBooleanStatement
																						BACKSLASH:\
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:loseContext
																typeName:
																	STATEMENT_TYPE:Statement
													tokenName:
														NAME:boolean_statement
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:addToEventMethod
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:gainEventName
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:itemClass
																			COMMA:,
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_line:
																										SEMICOLON:;
																										body_statement:
																											body_call:
																												DOT:.
																												DOT:.
																												group:
																													name_var:
																														exact:
																															BACKSLASH:\
																															variable_names:gain
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		parameters:
																																		typeName:
																																			type_var:
																																				class:
																																					class_variable_names:specificClass
																																		NEW:new 
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				BACKSLASH:\
																																				variable_names:this
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:subject
																												group:
																													name_var:
																														exact:
																															WILD:event
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:subject
																									DOT:.
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															name_var:
																																exact:
																																	WILD:id
																														group:
																															name_var:
																																variable:
																																	variable_names:specificClass
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:has
																									group:
																										name_var:
																											exact:
																												WILD:event
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:gainContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:false
																																COMMA:,
																								OPERATOR:&&! 
																							conditional:
																								IF:if
																					body_element:
																						NEWLINE:$\n
																			COMMA:,
																	group:
																		name_var:
																			variable:
																				variable_names:Events
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
					objectType:
						CLASS:class 
				class_declaration:
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:items
					SEMICOLON:;
					SEMICOLON:;
					NEWLINE:$\n
					DOT:.
					className:
						variable_names:Item
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Entity
						variableName:
							name_var:
								exact:
									WILD:equipper
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:maxHp
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Modifier
									type_var:
										class:
											class_variable_names:Item
									ACCESS:->
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					DOT:.
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												exact:
													variable_names:Equip
													BACKSLASH:\
											ACCESS:->
											type_var:
												class:
													class_variable_names:Events
								variableName:
									name_var:
										exact:
											WILD:event
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
													group:
														name_var:
															exact:
																WILD:event
													DOT:.
										EQUALS:=
										name_var:
											exact:
												WILD:equipper
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:dmg
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Item
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										EQUALS:=
										name_var:
											exact:
												WILD:equipper
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:on
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:event
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Events
											type_var:
												exact:
													BACKSLASH:\
													variable_names:Unequip
											ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:hp
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Item
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					SEMICOLON:;
					NEWLINE:$\n
					class_declaration:
						SEMICOLON:;
						className:
							variable_names:Modifier
						method_declaration:
							methodDefinition:
								body_element:
									NEWLINE:$\n
								typeName:
									type_var:
										class:
											class_variable_names:Float
								methodName:
									name_var:
										variable:
											variable_names:getValue
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:host
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:getEquipper
																			parameters:
														name_var:
															variable:
																variable_names:use
													group:
														name_var:
															exact:
																WILD:range
													DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Item
							EQUALS:=
							variableName:
								name_var:
									exact:
										WILD:host
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
						NEWLINE:$\n
						NEWLINE:$\n
						method_declaration:
							methodDefinition:
								body_element:
									NEWLINE:$\n
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:inputEntity
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								typeName:
									type_var:
										class:
											class_variable_names:Float
								methodName:
									name_var:
										variable:
											variable_names:use
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:use
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:inputEntity
													DOT:.
													group:
														name_var:
															exact:
																WILD:range
								body_element:
									NEWLINE:$\n
						interfaceName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Entity
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
						NEWLINE:$\n
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:items
						variable_declaration:
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Entity
										ACCESS:->
										type_var:
											class:
												class_variable_names:Modifier
							variableName:
								name_var:
									exact:
										WILD:range
						DOT:.
						method_declaration:
							methodDefinition:
								COMMA:,
								typeName:
									type_var:
										class:
											class_variable_names:void
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:inputEntity
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:amount
									typeName:
										type_var:
											class:
												class_variable_names:Float
								methodName:
									name_var:
										variable:
											variable_names:decrease
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:range
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:amount
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:inputEntity
														COMMA:,
													name_var:
														variable:
															variable_names:decrease
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
						NEWLINE:$\n
						SEMICOLON:;
						parentName:
							type_var:
								exact:
									variable_names:Object
									BACKSLASH:\
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:weight
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Modifier
									ACCESS:->
									type_var:
										class:
											class_variable_names:Item
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Modifier
									ACCESS:->
									type_var:
										class:
											class_variable_names:Item
						variableName:
							name_var:
								exact:
									WILD:value
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												exact:
													BACKSLASH:\
													variable_names:ChangeItem
											ACCESS:->
											type_var:
												class:
													class_variable_names:Events
								variableName:
									name_var:
										exact:
											WILD:event
							methodName:
								name_var:
									variable:
										variable_names:on
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Item
									type_var:
										class:
											class_variable_names:Modifier
									ACCESS:->
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:def
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:entities
				imports:
					IMPORT_CLASS:
						class_declaration:
							interfaceName:
								type_var:
									class:
										class_variable_names:Source
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:getId
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:Aspect
									body_element:
										body_return:
											RETURN:return 
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
							DOT:.
							NEWLINE:$\n
							class_declaration:
								objectType:
									CLASS:class 
								DOT:.
								packageName:
									name_var:
										exact:
											WILD:items
								DOT:.
								NEWLINE:$\n
								DOT:.
								className:
									variable_names:Id
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								packageName:
									name_var:
										exact:
											WILD:aspects
								packageName:
									name_var:
										exact:
											WILD:entities
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							NEWLINE:$\n
							SEMICOLON:;
							NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:description
								typeName:
									type_var:
										class:
											class_variable_names:String
							DOT:.
							className:
								variable_names:Aspect
							packageName:
								name_var:
									exact:
										WILD:entities
							NEWLINE:$\n
							objectType:
								CLASS:class 
							packageName:
								name_var:
									exact:
										WILD:items
							parentName:
								type_var:
									exact:
										BACKSLASH:\
										variable_names:Object
							packageName:
								name_var:
									exact:
										WILD:aspects
							DOT:.
						NEWLINE:$\n
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:skills
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Skill
										type_var:
											class:
												class_variable_names:Id
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:entity
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:getRange
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
													name_var:
														variable:
															variable_names:use
												group:
													name_var:
														exact:
															WILD:range
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										EQUALS:=
										name_var:
											exact:
												WILD:hasEntityFocus
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:newFocus
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
					NEWLINE:$\n
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:behaviours
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:true
									RETURN:return 
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:canChase
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								variableName:
									name_var:
										exact:
											WILD:newFocus
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
										name_var:
											exact:
												WILD:hasEntityFocus
							methodName:
								name_var:
									variable:
										variable_names:setFocus
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:cooldown
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getDescription
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getName
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
					NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:event
								typeName:
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Events
											type_var:
												exact:
													BACKSLASH:\
													variable_names:Tick
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										OPERATOR:> 
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													BACKSLASH:\
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					className:
						variable_names:Skill
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:targetCriteria
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								exact:
									variable_names:EntityCriteria
									BACKSLASH:\
						EQUALS:=
						WEAK:~
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:use
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_conditional:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:hasTarget
												parameters:
											group:
												name_var:
													variable:
														variable_names:activity
									as_body:
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_return:
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:getTargetEntity
																							parameters:
																						group:
																							name_var:
																								variable:
																									variable_names:activity
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:satisfies
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:getTargetEntity
																				parameters:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:activity
														group:
															name_var:
																variable:
																	variable_names:targetCriteria
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
									conditional:
										IF:if
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								variableName:
									name_var:
										variable:
											variable_names:activity
							COMMA:,
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:isOffCooldown
												parameters:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:user
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_conditional:
												conditional:
													FOR:for
												OPERATOR:: 
												body_statement:
													body_call:
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:targetCriteria
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getRange
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
															name_var:
																variable:
																	variable_names:getEntitiesWithin
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:user
														group:
															name_var:
																variable:
																	variable_names:getLocation
															parameters:
														DOT:.
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:potential
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															SEMICOLON:;
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															variable:
																variable_names:potential
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															SEMICOLON:;
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	OPERATOR:- 
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:hasEntityFocus
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															SEMICOLON:;
															method_argument:
																body_statement:
																	OPERATOR:- 
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		DOT:.
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
											DOT:.
											group:
												name_var:
													exact:
														WILD:otherSkill
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:otherSkill
															DOT:.
															group:
																name_var:
																	exact:
																		WILD:cooldown
														OPERATOR:- 
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Skill
								variableName:
									name_var:
										exact:
											WILD:otherSkill
							methodName:
								name_var:
									variable:
										variable_names:compareTo
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:use
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:user
							COMMA:,
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:victim
							typeName:
								type_var:
									class:
										class_variable_names:void
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:hasEntityFocus
						WEAK:~
						EQUALS:=
					DOT:.
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							typeName:
								type_var:
									class:
										class_variable_names:String
					NEWLINE:$\n
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:range
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
									type_var:
										class:
											class_variable_names:Modifier
						EQUALS:=
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											OPERATOR:== 
											body_call:
												group:
													name_var:
														exact:
															WILD:cooldown
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0
									RETURN:return 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:isOffCooldown
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getName
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:String
					NEWLINE:$\n
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:cost
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Modifier
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
						EQUALS:=
					NEWLINE:$\n
					class_declaration:
						className:
							variable_names:Id
						NEWLINE:$\n
						FORSLASH:/
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Usable
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
						objectType:
							CLASS:class 
						FORSLASH:/
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getCost
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:(int)(float)cost
												DOT:.
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:entity
					variable_declaration:
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:experience
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
					NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
						class_declaration:
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									COMMA:,
									body_element:
										body_line:
											SEMICOLON:;
											variable_declaration:
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Attack
															type_var:
																class:
																	class_variable_names:Damage
															ACCESS:->
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:getDamage
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:attacker
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:defender
												EQUALS:=
												variableName:
													name_var:
														exact:
															WILD:damage
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:attack
									body_element:
										body_line:
											SEMICOLON:;
											variable_assignment:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:getCost
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:attacker
												EQUALS:=
												name_var:
													exact:
														WILD:cooldown
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									body_element:
										body_conditional:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getHit
													group:
														name_var:
															exact:
																WILD:damage
											as_body:
												body_element:
													body_line:
														body_statement:
															body_call:
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:Events
																									type_var:
																										exact:
																											variable_names:Hit
																											BACKSLASH:\
																									ACCESS:->
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attacker
																							COMMA:,
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:defender
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:damage
																						NEW:new 
																	name_var:
																		variable:
																			variable_names:on
																group:
																	name_var:
																		exact:
																			WILD:defender
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															BACKSLASH:\
															OPERATOR:+= 
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:3
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:experience
														SEMICOLON:;
											conditional:
												IF:if
									body_element:
										body_conditional:
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		exact:
																			WILD:defender
																group:
																	name_var:
																		variable:
																			variable_names:on
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						typeName:
																							type_var:
																								access_multi:
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Events
																									type_var:
																										exact:
																											variable_names:Miss
																											BACKSLASH:\
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:defender
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:damage
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attacker
																							COMMA:,
																						NEW:new 
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:experience
															OPERATOR:+= 
															BACKSLASH:\
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
											conditional:
												ELSE:else
									body_element:
										NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:defender
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							class:
																								class_variable_names:Events
																						ACCESS:->
																						type_var:
																							exact:
																								BACKSLASH:\
																								variable_names:PostAttack
																			NEW:new 
																			parameters:
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:defender
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:damage
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:attacker
														name_var:
															variable:
																variable_names:on
													group:
														name_var:
															exact:
																WILD:attacker
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			NEW:new 
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:attacker
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:defender
																				COMMA:,
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:damage
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							class:
																								class_variable_names:Events
																						type_var:
																							exact:
																								BACKSLASH:\
																								variable_names:PreAttack
																						ACCESS:->
														name_var:
															variable:
																variable_names:on
													group:
														name_var:
															exact:
																WILD:attacker
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:attacker
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:getRange
									typeName:
										type_var:
											class:
												class_variable_names:Float
									body_element:
										body_return:
											RETURN:return 
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:range
														group:
															name_var:
																variable:
																	variable_names:use
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:entity
														DOT:.
									body_element:
										NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:entity
							objectType:
								CLASS:class 
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									methodName:
										name_var:
											variable:
												variable_names:getCost
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:entity
															name_var:
																variable:
																	variable_names:use
														group:
															name_var:
																exact:
																	WILD:(int)(float)cost
														DOT:.
											SEMICOLON:;
											RETURN:return 
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:entity
							NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Damage
												ACCESS:->
												type_var:
													class:
														class_variable_names:Attack
									COMMA:,
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:attacker
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:defender
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:getDamage
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							DOT:.
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:behaviours
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:getAttackId
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:Attack
							method_declaration:
								methodDefinition:
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																variable_names:attack
																BACKSLASH:\
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:victim
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:offender
															COMMA:,
											SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												variable:
													variable_names:victim
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:offender
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									COMMA:,
									methodName:
										name_var:
											variable:
												variable_names:use
									body_element:
										NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:skills
							NEWLINE:$\n
							NEWLINE:$\n
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:entities
							NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_conditional:
											conditional:
												IF:if
											as_body:
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
															OPERATOR:-= 
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:cooldown
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:cooldown
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0 
												OPERATOR:>
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:on
									variable_declaration:
										typeName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Events
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Tick
										variableName:
											name_var:
												exact:
													WILD:event
							class_declaration:
								className:
									variable_names:Id
								objectType:
									CLASS:class 
								NEWLINE:$\n
								FORSLASH:/
								FORSLASH:/
							class_declaration:
								NEWLINE:$\n
								FORSLASH:/
								FORSLASH:/
								NEWLINE:$\n
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:value
									typeName:
										type_var:
											class:
												class_variable_names:Float
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									EQUALS:=
								NEWLINE:$\n
								variable_declaration:
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									variableName:
										name_var:
											exact:
												WILD:hit
								NEWLINE:$\n
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Float
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									variableName:
										name_var:
											exact:
												WILD:modifier
									EQUALS:=
								NEWLINE:$\n
								NEWLINE:$\n
								NEWLINE:$\n
								SEMICOLON:;
								method_declaration:
									methodDefinition:
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newHit
													EQUALS:=
													name_var:
														exact:
															WILD:hit
										typeName:
											type_var:
												class:
													class_variable_names:void
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:newHit
											typeName:
												type_var:
													class:
														class_variable_names:Boolean
										methodName:
											name_var:
												variable:
													variable_names:setHit
								objectType:
									CLASS:class 
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:void
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													name_var:
														exact:
															WILD:value
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newValue
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Float
											variableName:
												name_var:
													exact:
														WILD:newValue
										methodName:
											name_var:
												variable:
													variable_names:setValue
										body_element:
											NEWLINE:$\n
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:getTotal
										typeName:
											type_var:
												class:
													class_variable_names:Float
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:value
														OPERATOR:* 
														body_call:
															group:
																name_var:
																	exact:
																		WILD:modifier
								SEMICOLON:;
								method_declaration:
									methodDefinition:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:setModifier
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:newModifier
											typeName:
												type_var:
													class:
														class_variable_names:Float
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newModifier
													EQUALS:=
													name_var:
														exact:
															WILD:modifier
										typeName:
											type_var:
												class:
													class_variable_names:void
								className:
									variable_names:Damage
								NEWLINE:$\n
								NEWLINE:$\n
								SEMICOLON:;
							parentName:
								type_var:
									class:
										class_variable_names:Skill
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											method_argument:
												body_statement:
													OPERATOR:== 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
											RETURN:return 
											SEMICOLON:;
									methodName:
										name_var:
											variable:
												variable_names:isOffCooldown
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									body_element:
										NEWLINE:$\n
							className:
								variable_names:Attack
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									body_element:
										body_return:
											RETURN:return 
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:getCooldown
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							packageName:
								name_var:
									exact:
										WILD:attacks
							DOT:.
							DOT:.
						NEWLINE:$\n
				imports:
					IMPORT_CLASS:
						NEWLINE:$\n
						class_declaration:
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							parentName:
								type_var:
									class:
										class_variable_names:Skill
							packageName:
								name_var:
									exact:
										WILD:behaviours
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:skills
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:Support
									methodName:
										name_var:
											variable:
												variable_names:getSupportId
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
							className:
								variable_names:Support
							NEWLINE:$\n
							DOT:.
							DOT:.
							NEWLINE:$\n
							class_declaration:
								className:
									variable_names:Id
								NEWLINE:$\n
								FORSLASH:/
								objectType:
									CLASS:class 
								FORSLASH:/
							packageName:
								name_var:
									exact:
										WILD:entities
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:supports
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										body_conditional:
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															OPERATOR:-= 
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:cooldown
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
														SEMICOLON:;
											conditional:
												IF:if
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:cooldown
												OPERATOR:>
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0 
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:on
									body_element:
										NEWLINE:$\n
									variable_declaration:
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Events
													ACCESS:->
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Tick
										variableName:
											name_var:
												exact:
													WILD:event
									typeName:
										type_var:
											class:
												class_variable_names:void
							NEWLINE:$\n
							objectType:
								CLASS:class 
						NEWLINE:$\n
				class_declaration:
					DOT:.
					objectType:
						CLASS:class 
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							typeName:
								STATEMENT_TYPE:Statement
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Skills
																name_var:
																	variable:
																		variable_names:name
																ACCESS:->
													group:
														name_var:
															variable:
																variable_names:id
									SEMICOLON:;
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					className:
						variable_names:Skills
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
												name_var:
													variable:
														variable_names:getMethod
											group:
												name_var:
													variable:
														variable_names:Skills
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				SEMICOLON:;
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:skillName
																											type_var:
																												class:
																													class_variable_names:Skills
																								NEW:new 
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:skillName
																				name_var:
																					variable:
																						variable_names:equals
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																			DOT:.
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
											DOT:.
									SEMICOLON:;
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:skillName
																ACCESS:->
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
										variableName:
											name_var:
												variable:
													variable_names:skillName
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														name_var:
															variable:
																variable_names:getCurrentContext
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Skills
																ACCESS:->
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:skillName
													DOT:.
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:use
														name_var:
															variable:
																variable_names:getMethod
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:useContext
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:description
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:+
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															exact:
																WILD:user
												body_element:
													NEWLINE:$\n
										FORSLASH:/
										FORSLASH:/
										WEAK:~
										className:
											variable_names:TargetCriteria
										NEWLINE:$\n
										parentName:
											type_var:
												exact:
													BACKSLASH:\
													variable_names:EntityCriteria
										objectType:
											CLASS:class 
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Skills
											ACCESS:->
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:skillName
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:description
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:description
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_quote:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
															name_var:
																variable:
																	variable_names:add
														DOT:.
										body_element:
											NEWLINE:$\n
									COLON::
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										variableName:
											name_var:
												variable:
													variable_names:isFirst
										WEAK:~
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:declaration
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
								typeName:
									type_var:
										class:
											class_variable_names:IToken
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Skills
									class_declaration:
										NEWLINE:$\n
										objectType:
											CLASS:class 
										parentName:
											type_var:
												class:
													class_variable_names:Skill
										FORSLASH:/
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:skillName
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getName
												typeName:
													type_var:
														class:
															class_variable_names:String
										SEMICOLON:;
										NEWLINE:$\n
										className:
											variable_names:skillName
										NEWLINE:$\n
										NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														variable:
															variable_names:use
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:user
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												COMMA:,
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															exact:
																WILD:victim
												body_element:
													NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														RETURN:return 
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Id
															type_var:
																class:
																	class_variable_names:Skill
												methodName:
													name_var:
														variable:
															variable_names:getId
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
										variable_declaration:
											static:
												STA:@
											variableName:
												name_var:
													exact:
														WILD:id
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Skill
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Skill
										NEWLINE:$\n
										NEWLINE:$\n
									methodName:
										ADD:+=
							body_element:
								body_manipulate:
									tokenInstance:
										NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:variable_header
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:addVariableHeader
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Skills
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
										body_element:
											NEWLINE:$\n
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												variableName:
													NAME:atom
												tokenInstance:
													tokenName:
														NAME:boolean_statement
													body_element:
														body_line:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:canUseContext
																typeName:
																	CONTEXT_TYPE:Context 
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																						name_var:
																							variable:
																								variable_names:Skills
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:TargetCriteria
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:getMethod
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:satisfies
																			group:
																				name_var:
																					variable:
																						variable_names:getCurrentContext
																				parameters:
																			DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:satisfies
																	group:
																		parameters:
																			method_argument:
																				as_statement:
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:canUseContext
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										SEMICOLON:;
																										RETURN:return 
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:false
																								body_element:
																									NEWLINE:$\n
																							conditional:
																								IF:if
																		name_var:
																			variable:
																				variable_names:prependToBody
																	DOT:.
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Skills
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:TargetCriteria
															SEMICOLON:;
													COLON::
										NEWLINE:$\n
										tokenName:
											NAME:require
										body_element:
											NEWLINE:$\n
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Skills
														ACCESS:->
														ACCESS:->
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																EQUALS:=
																name_var:
																	exact:
																		WILD:cost
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								DOT:.
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
												methodName:
													ADD:+=
										COLON::
										tokenName:
											NAME:cooldown
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:range
										NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Skills
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														ACCESS:->
														ACCESS:->
												body:
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	exact:
																		WILD:range
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
																								DOT:.
															SEMICOLON:;
												methodName:
													ADD:+=
									tokenInstance:
										body_element:
											body_manipulate:
												COLON::
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														body_conditional:
															conditional:
																ELSE:else
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		conditional:
																			IF:if
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					variable_assignment:
																						name_var:
																							variable:
																								variable_names:isFirst
																						EQUALS:=
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																						OPERATOR:->*
																						body_call:
																							DOT:.
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_return:
																																RETURN:return 
																																VOID:void
																																SEMICOLON:;
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													conditional:
																														IF:if
																								name_var:
																									variable:
																										variable_names:prependToBody
																							group:
																								name_var:
																									exact:
																										WILD:use
																					SEMICOLON:;
																body_element:
																	body_conditional:
																		conditional:
																			ELSE:else
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										name_var:
																											variable:
																												variable_names:Skills
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_return:
																																RETURN:return 
																																SEMICOLON:;
																																VOID:void
																													conditional:
																														IF:if
																														ELSE:else
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																								name_var:
																									variable:
																										variable_names:prependToBody
																							DOT:.
																							group:
																								name_var:
																									exact:
																										WILD:use
																						OPERATOR:->*
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:option
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																OPERATOR:!= 
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:atom
																				name_var:
																					exact:
																						WILD:boolean_statement
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
															as_body:
																body_element:
																	body_conditional:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													as_body:
																														body_element:
																															body_conditional:
																																conditional:
																																	IF:if
																																as_body:
																																	body_element:
																																		body_return:
																																			SEMICOLON:;
																																			RETURN:return 
																																			VOID:void
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																					SEMICOLON:;
																			body_element:
																				body_line:
																					variable_assignment:
																						EQUALS:=
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						name_var:
																							variable:
																								variable_names:isFirst
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																		conditional:
																			IF:if
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		SEMICOLON:;
																		variable_declaration:
																			typeName:
																				STATEMENT_TYPE:Statement
																			variableName:
																				name_var:
																					variable:
																						variable_names:bool
																			EQUALS:=
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_method:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														exact:
																															BACKSLASH:\
																															variable_names:getBooleanStatement
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			access:
																																				name_var:
																																					exact:
																																						WILD:boolean_statement
																																				name_var:
																																					variable:
																																						variable_names:atom
																																				ACCESS:->
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:useContext
																														COMMA:,
																body_element:
																	body_conditional:
																		conditional:
																			ELSE:else
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_conditional:
																																as_body:
																																	body_element:
																																		body_return:
																																			VOID:void
																																			RETURN:return 
																																			SEMICOLON:;
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																																conditional:
																																	IF:if
																																	ELSE:else
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													conditional:
																														IF:if
																								name_var:
																									variable:
																										variable_names:prependToBody
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									access:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:chance
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_method:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																access:
																																	name_var:
																																		exact:
																																			WILD:has_chance
																																	ACCESS:->
																																	name_var:
																																		variable:
																																			variable_names:atom
																										name_var:
																											exact:
																												variable_names:getChance
																												BACKSLASH:\
																typeName:
																	STATEMENT_TYPE:Statement
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:miss
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											body_manipulate:
												tokenInstance:
													NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_manipulate:
															methodName:
																ADD:+=
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Skills
																	ACCESS:->
																	as_method:
																		name_var:
																			exact:
																				WILD:use
																		ACCESS:->
																		AS_METHOD_NAME:*
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:skillName
																	ACCESS:->
															body:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				as_method:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:useContext
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getBodyElement
													body_element:
														NEWLINE:$\n
													COLON::
													tokenName:
														NAME:body_element
												COLON::
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
										tokenName:
											NAME:use
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														ACCESS:->
														name_var:
															variable:
																variable_names:Skills
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	variable_assignment:
																		EQUALS:=
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:Skills
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:skillName
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:TargetCriteria
																									ACCESS:->
																						NEW:new 
																						parameters:
																		name_var:
																			exact:
																				WILD:targetCriteria
																	SEMICOLON:;
										OPERATOR:->*.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:skills
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Skill
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:skillName
								typeName:
									type_var:
										class:
											class_variable_names:String
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
								variableName:
									name_var:
										variable:
											variable_names:data
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
												name_var:
													exact:
														variable_names:createCriteria
														BACKSLASH:\
									SEMICOLON:;
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:createList
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
		imports:
			IMPORT_CLASS:
				class_declaration:
					SEMICOLON:;
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:IN_PROGRESS
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:SUCCESS
					class_declaration:
						objectType:
							CLASS:class 
						FORSLASH:/
						NEWLINE:$\n
						FORSLASH:/
						WEAK:~
						parentName:
							type_var:
								exact:
									variable_names:EntityCriteria
									BACKSLASH:\
						method_declaration:
							methodDefinition:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								methodName:
									name_var:
										variable:
											variable_names:satisfies
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
						NEWLINE:$\n
						className:
							variable_names:TargetCriteria
					packageName:
						name_var:
							exact:
								WILD:entities
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:currentActivityIndex
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
					SEMICOLON:;
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						static:
							STA:@
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:2
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:FAIL
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newActivity
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:Success
																		type_var:
																			class:
																				class_variable_names:Quest
																		DOT:.
																		DOT:.
																		type_var:
																			class:
																				class_variable_names:Listeners
																	NEW:new 
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:size
																						parameters:
																					group:
																						name_var:
																							variable:
																								variable_names:activities
												name_var:
													variable:
														variable_names:add
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:add
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newActivity
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								variableName:
									name_var:
										variable:
											variable_names:newActivity
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:Fail
																		type_var:
																			class:
																				class_variable_names:Listeners
																		DOT:.
																		DOT:.
																		type_var:
																			class:
																				class_variable_names:Quest
																	NEW:new 
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
											DOT:.
											group:
												name_var:
													variable:
														variable_names:newActivity
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:status
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:UNSTARTED
					SEMICOLON:;
					variable_declaration:
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Activity
						variableName:
							name_var:
								variable:
									variable_names:currentActivity
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Quest
										ACCESS:->
							methodName:
								name_var:
									variable:
										variable_names:getId
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getRange
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
							body_element:
								NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:user
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Float
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:canChase
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
									SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newIndex
										OPERATOR:< 
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											DOT:.
											group:
												name_var:
													variable:
														variable_names:size
												parameters:
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:activities
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:newIndex
																	name_var:
																		variable:
																			variable_names:get
																DOT:.
													name_var:
														variable:
															variable_names:currentActivity
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													name_var:
														variable:
															variable_names:currentActivityIndex
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newIndex
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													name_var:
														variable:
															variable_names:status
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:SUCCESS
													EQUALS:=
										body_element:
											NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:advanceTo
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								variableName:
									name_var:
										variable:
											variable_names:newIndex
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													NEW:new 
													parameters:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:TargetCriteria
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Quest
									SEMICOLON:;
									RETURN:return 
							methodName:
								name_var:
									variable:
										variable_names:getTargetCriteria
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									exact:
										variable_names:EntityCriteria
										BACKSLASH:\
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					DOT:.
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					class_declaration:
						objectType:
							CLASS:class 
						FORSLASH:/
						FORSLASH:/
						NEWLINE:$\n
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Id
									ACCESS:->
									type_var:
										class:
											class_variable_names:Usable
						className:
							variable_names:Id
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					SEMICOLON:;
					className:
						variable_names:Quest
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:quests
					NEWLINE:$\n
					objectType:
						CLASS:class 
					variable_declaration:
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
										NEW:new 
										typeName:
											type_var:
												class:
													class_variable_names:ArrayList
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Activity
						variableName:
							name_var:
								variable:
									variable_names:activities
						EQUALS:=
						typeName:
							type_var:
								class:
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:Activity
									class_variable_names:List
					parentName:
						type_var:
							class:
								class_variable_names:Object
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						variableName:
							name_var:
								variable:
									variable_names:UNSTARTED
						static:
							STA:@
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													exact:
														WILD:fulfill
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_return:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:true
																	RETURN:return 
																	SEMICOLON:;
												name_var:
													variable:
														variable_names:prependToBody
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														name_var:
															variable:
																variable_names:Quests
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										WEAK:~
										typeName:
											type_var:
												class:
													class_variable_names:Integer
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
										variableName:
											name_var:
												variable:
													variable_names:tileCount
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:description
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:declarationToken
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:description
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:tileClauses
											DOT:.
											group:
												name_var:
													variable:
														variable_names:set
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:&&
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:tileClauses
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										OPERATOR:> 
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											group:
												name_var:
													variable:
														variable_names:size
												parameters:
											group:
												name_var:
													variable:
														variable_names:tileClauses
											DOT:.
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Quests
													OPERATOR:->*
													body_call:
														group:
															name_var:
																exact:
																	WILD:fulfill
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_return:
																							RETURN:return 
																							SEMICOLON:;
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:tileClauses
														DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:questName
																					name_var:
																						variable:
																							variable_names:declarationToken
										variableName:
											name_var:
												variable:
													variable_names:questName
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										tokenName:
											NAME:event
										body_element:
											body_conditional:
												body_statement:
													OPERATOR:== 
													OPERATOR:== 
													body_call:
														group:
															name_var:
																exact:
																	WILD:start
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													OPERATOR:|| 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													body_call:
														group:
															name_var:
																exact:
																	WILD:load
												as_body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	variable:
																		variable_names:eventName
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:startQuest
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
										body_element:
											body_line:
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:eventName
													typeName:
														type_var:
															class:
																class_variable_names:String
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:event_names
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:element
													WEAK:~
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:questName
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:Quests
																		method_argument:
																			body_entries:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:eventName
																		COMMA:,
																		COMMA:,
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:Events
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:eventBody
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:super
																						DOT:.
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:event
																							name_var:
																								variable:
																									variable_names:on
																				SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventBody
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:questName
																						name_var:
																							variable:
																								variable_names:Quests
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
																COMMA:,
															name_var:
																variable:
																	variable_names:addToEventMethod
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
													tokenName:
														NAME:body_element
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:eventBody
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventContext
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
																	DOT:.
												COLON::
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													typeName:
														BODY_TYPE:Body 
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:eventBody
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		BODY_TYPE:Body 
																	NEW:new 
																	parameters:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:typeDeclaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
								typeName:
									type_var:
										class:
											class_variable_names:IToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Quests
									class_declaration:
										FORSLASH:/
										FORSLASH:/
										method_declaration:
											methodDefinition:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															variable:
																variable_names:quester
												methodName:
													name_var:
														variable:
															variable_names:generateDestinations
												typeName:
													type_var:
														class:
															class_variable_names:void
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
												methodName:
													name_var:
														variable:
															variable_names:fulfill
												body_element:
													NEWLINE:$\n
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Path
													variableName:
														name_var:
															variable:
																variable_names:destinationReached
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:quester
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												body_element:
													NEWLINE:$\n
												COMMA:,
										objectType:
											CLASS:class 
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Quest
										className:
											variable_names:questName
									methodName:
										ADD:+=
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									tokenInstance:
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Quests
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	NEW:new 
																	typeName:
																		type_var:
																			class:
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Path
																				class_variable_names:HashSet
																NEWLINE:$\n
															NEWLINE:$\n
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					PLUS:+
																					name_var:
																						variable:
																							variable_names:tileCount
																					name_var:
																						exact:
																							WILD:toVisit
													typeName:
														type_var:
															class:
																class_variable_names:Set
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Path
													WEAK:~
													EQUALS:=
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variable_declaration:
													EQUALS:=
													WEAK:~
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					name_var:
																						exact:
																							WILD:visited
																					name_var:
																						variable:
																							variable_names:tileCount
																					PLUS:+
													typeName:
														type_var:
															class:
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Path
																class_variable_names:Set
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	parameters:
																	typeName:
																		type_var:
																			class:
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Path
																				class_variable_names:HashSet
																NEWLINE:$\n
															NEWLINE:$\n
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
														type_var:
															class:
																class_variable_names:Quests
												methodName:
													ADD:+=
										tokenName:
											NAME:quest_destination
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													typeName:
														STATEMENT_TYPE:Statement
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	typeName:
																		STATEMENT_TYPE:Statement
																	NEW:new 
													variableName:
														name_var:
															variable:
																variable_names:tileClause
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:set
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:||
														group:
															name_var:
																variable:
																	variable_names:tileClause
														DOT:.
												SEMICOLON:;
										COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileClause
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:brace
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileCount
													BACKSLASH:\
													OPERATOR:+= 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					STATEMENT_TYPE:Statement
																				parameters:
																				NEW:new 
																typeName:
																	STATEMENT_TYPE:Statement
																variableName:
																	name_var:
																		variable:
																			variable_names:tileNameClause
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:fulfill
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_line:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			concat:
																																				name_var:
																																					exact:
																																						WILD:visited
																																				name_var:
																																					variable:
																																						variable_names:tileCount
																																				PLUS:+
																												DOT:.
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				WILD:destinationReached
																													name_var:
																														variable:
																															variable_names:add
																										SEMICOLON:;
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	WILD:destinationReached
																										name_var:
																											variable:
																												variable_names:contains
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	PLUS:+
																																	name_var:
																																		exact:
																																			WILD:toVisit
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																					body_element:
																						NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:prependToBody
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
															SEMICOLON:;
													COLON::
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:negatedOperator
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
													body_element:
														body_line:
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:atom
																											name_var:
																												exact:
																													WILD:mapName
																			group:
																				name_var:
																					variable:
																						variable_names:replace
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					COMMA:,
																			DOT:.
																variableName:
																	name_var:
																		variable:
																			variable_names:mapName
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:quest_tile_description
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														access:
																															name_var:
																																variable:
																																	variable_names:atom
																															name_var:
																																exact:
																																	WILD:INTEGER
																															ACCESS:->
																		name_var:
																			variable:
																				variable_names:add
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tileClause
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:tileNameClause
																	DOT:.
															SEMICOLON:;
													body_element:
														body_line:
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																				name_var:
																					variable:
																						variable_names:replace
																			DOT:.
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												variable:
																													variable_names:atom
																											name_var:
																												exact:
																													WILD:tileName
																											ACCESS:->
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																variableName:
																	name_var:
																		variable:
																			variable_names:tileName
																EQUALS:=
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:negateOperator
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																ACCESS:->
																																name_var:
																																	exact:
																																		WILD:ORDINAL
																																name_var:
																																	variable:
																																		variable_names:atom
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																variableName:
																	name_var:
																		variable:
																			variable_names:negatedOperator
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						body_line:
																							SEMICOLON:;
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	PLUS:+
																																	name_var:
																																		exact:
																																			WILD:toVisited
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				parameters:
																																				name_var:
																																					variable:
																																						variable_names:getLocation
																																			group:
																																				name_var:
																																					exact:
																																						WILD:quester
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												concat:
																																													name_var:
																																														variable:
																																															variable_names:tileName
																																													PLUS:+
																																													name_var:
																																														variable:
																																															variable_names:mapName
																																						name_var:
																																							variable:
																																								variable_names:Tiles
																																COMMA:,
																															name_var:
																																variable:
																																	variable_names:getPathFromId
																														DOT:.
																														group:
																															name_var:
																																exact:
																																	WILD:quester
																														group:
																															name_var:
																																variable:
																																	variable_names:getEnvironment
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:mapName
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:Environments
																																			DOT:.
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:getLocation
																															parameters:
																										name_var:
																											variable:
																												variable_names:add
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																	group:
																		name_var:
																			exact:
																				WILD:generateDestinations
																OPERATOR:->*
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	group:
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														concat:
																															name_var:
																																exact:
																																	WILD:visited
																															PLUS:+
																															name_var:
																																variable:
																																	variable_names:tileCount
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:size
																								parameters:
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
												COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:tileClause
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:tileClauses
												SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:entities
					packageName:
						name_var:
							exact:
								WILD:behaviours
					method_declaration:
						methodDefinition:
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:setup
							typeName:
								type_var:
									class:
										class_variable_names:void
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
								variableName:
									name_var:
										variable:
											variable_names:data
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:IN_PROGRESS
																					EQUALS:=
																					name_var:
																						variable:
																							variable_names:status
																		body_element:
																			body_line:
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:currentActivity
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activities
																								DOT:.
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															exact:
																																NAME:
																																	NUMBER:0
																									name_var:
																										variable:
																											variable_names:get
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:0
																					name_var:
																						variable:
																							variable_names:currentActivityIndex
																					EQUALS:=
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:activities
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:isEmpty
																				parameters:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:false
																		OPERATOR:==
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	conditional:
																		ELSE:else
																	as_body:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:status
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:FAIL
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:startQuest
													COMMA:,
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
												name_var:
													variable:
														variable_names:addToEventMethod
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					objectType:
						CLASS:class 
					DOT:.
					DOT:.
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:quests
					DOT:.
					className:
						variable_names:Quests
					NEWLINE:$\n
					NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	SEMICOLON:;
	className:
		NAME:Arrays
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	HID:<
	DOT:.
NEWLINE:$\n
NEWLINE:$\n
SEMICOLON:;
method_declaration:
	methodDefinition:
		typeName:
			type_var:
				class:
					class_variable_names:void
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:data
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
		methodName:
			name_var:
				variable:
					variable_names:setup
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
variable_declaration:
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				DOT:.
				group:
					name_var:
						variable:
							variable_names:GeneralTokens
				group:
					name_var:
						variable:
							variable_names:NAME
	inner:
		IN:>
	variableName:
		name_var:
			variable:
				variable_names:lazyNameParser
	typeName:
		type_var:
			class:
				class_variable_names:RegexParser
NEWLINE:$\n
anonymous_class:
	COLON::
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	className:
		NAME:List
anonymous_class:
	HID:<
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
	className:
		NAME:LinkedList
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
variable_declaration:
	method_argument:
		body_statement:
			body_call:
				DOT:.
				group:
					name_var:
						variable:
							variable_names:base
				group:
					name_var:
						variable:
							variable_names:Rules
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:IParser
	EQUALS:=
	variableName:
		name_var:
			variable:
				variable_names:rootParser
NEWLINE:$\n
SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	SEMICOLON:;
	DOT:.
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	className:
		NAME:ArrayList
	HID:<
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:../Questineer/src
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:root
				tokenInstance:
					tokenName:
						NAME:import_any
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												variable_names:importAny
												BACKSLASH:\
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:imports
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				variable_declaration:
					EQUALS:=
					variableName:
						name_var:
							variable:
								variable_names:root
					method_argument:
						body_statement:
							body_call:
								DOT:.
								group:
									parameters:
									name_var:
										variable:
											variable_names:getRoot
								group:
									name_var:
										variable:
											variable_names:data
					typeName:
						type_var:
							class:
								class_variable_names:IToken
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Entity
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Activities
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Aspects
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:import_events
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:import_events
										COLON::
										variableName:
											NAME:element
										tokenInstance:
											tokenName:
												NAME:event_declaration
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:Events
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:declaration
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:element
											COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:IMPORT_EVENT
								COLON::
							name_var:
								variable:
									variable_names:imports
							COLON::
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:import_any
				name_var:
					variable:
						variable_names:root
				variableName:
					NAME:imports
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Conditions
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Environment
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Tile
						DOT:.
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Items
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Skills
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						DOT:.
				SEMICOLON:;
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
			variableName:
				name_var:
					variable:
						variable_names:data
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								exact:
									BACKSLASH:\
									variable_names:output
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Relationship
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
				SEMICOLON:;
		methodName:
			name_var:
				variable:
					variable_names:generate
comment:
	WILD:import images/image.clws
anonymous_class:
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	DOT:.
	COLON::
	className:
		NAME:Map
anonymous_class:
	DOT:.
	SEMICOLON:;
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	className:
		NAME:ListEntry
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	HID:<
	DOT:.
	packageName:
		name_var:
			exact:
				variable_names:rem
				BACKSLASH:\
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	DOT:.
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lang
	className:
		NAME:StringBuilder
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	HID:<
	COLON::
NEWLINE:$\n
anonymous_class:
	className:
		NAME:Iterator
	HID:<
	COLON::
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
anonymous_class:
	HID:<
	COLON::
	className:
		NAME:File
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	packageName:
		name_var:
			exact:
				variable_names:io
				BACKSLASH:\
	DOT:.
NEWLINE:$\n
anonymous_class:
	COLON::
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:lists
				BACKSLASH:\
	SEMICOLON:;
	className:
		NAME:HeroStats
NEWLINE:$\n
anonymous_class:
	className:
		NAME:ParseContext
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	HID:<
	DOT:.
	COLON::
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				variable_names:parser
				BACKSLASH:\
NEWLINE:$\n
anonymous_class:
	className:
		NAME:HashMap
	DOT:.
	HID:<
	COLON::
	packageName:
		name_var:
			exact:
				variable_names:util
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	SEMICOLON:;
NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	SEMICOLON:;
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	HID:<
	className:
		NAME:Rules
SEMICOLON:;
method_declaration:
	methodDefinition:
		body_element:
			body_manipulate:
				variableName:
					NAME:import_conditions
				tokenInstance:
					tokenName:
						NAME:IMPORT_CONDITION
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_conditions
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Conditions
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:condition_declaration
								COLON::
							COLON::
							variableName:
								NAME:element
					COLON::
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_items
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:item_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Items
					tokenName:
						NAME:IMPORT_ITEM
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							name_var:
								variable:
									variable_names:import_items
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														exact:
															variable_names:importAny
															BACKSLASH:\
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:import_any
					COLON::
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_items
				name_var:
					variable:
						variable_names:import_any
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:importAny
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_supports
				tokenInstance:
					tokenName:
						NAME:IMPORT_SUPPORT
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:support_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Supports
										SEMICOLON:;
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_supports
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_skills
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_skills
							tokenInstance:
								COLON::
								tokenName:
									NAME:skill_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Skills
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
							COLON::
					COLON::
					tokenName:
						NAME:IMPORT_SKILL
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_MAP
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:import_map
										name_var:
											variable:
												variable_names:declaration
									group:
										name_var:
											variable:
												variable_names:Environment
				variableName:
					NAME:import_map
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_association
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_ASSOCIATION
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Associations
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
										SEMICOLON:;
								tokenName:
									NAME:association_declaration
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_association
							COLON::
				COLON::
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_quests
							tokenInstance:
								tokenName:
									NAME:quest_declaration
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:typeDeclaration
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Quests
										SEMICOLON:;
							COLON::
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_QUEST
					COLON::
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_quests
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				variableName:
					NAME:import_events
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:event_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Events
										SEMICOLON:;
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_events
							COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_EVENT
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							COLON::
							name_var:
								variable:
									variable_names:import_reason
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:reason_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Relationship
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
								body_element:
									NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_REASON
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_reason
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_attacks
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Attacks
										SEMICOLON:;
								tokenName:
									NAME:attack_declaration
								body_element:
									NEWLINE:$\n
								COLON::
							COLON::
					tokenName:
						NAME:IMPORT_ATTACK
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_attacks
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_activities
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_ACTIVITY
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								tokenName:
									NAME:activity_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Activities
												DOT:.
										SEMICOLON:;
								COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_activities
							COLON::
				COLON::
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_traits
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Traits
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
										SEMICOLON:;
								tokenName:
									NAME:trait_declaration
							variableName:
								NAME:element
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_TRAIT
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_traits
				COLON::
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:import_any
			typeName:
				type_var:
					class:
						class_variable_names:IToken
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					tokenName:
						NAME:IMPORT_ASPECT
					COLON::
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Aspects
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								tokenName:
									NAME:aspect_declaration
								body_element:
									NEWLINE:$\n
								COLON::
							COLON::
							name_var:
								variable:
									variable_names:import_aspects
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				COLON::
				variableName:
					NAME:import_aspects
				name_var:
					variable:
						variable_names:import_any
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			body_manipulate:
				tokenInstance:
					tokenName:
						NAME:IMPORT_AFFINITY
					COLON::
					body_element:
						body_manipulate:
							tokenInstance:
								tokenName:
									NAME:affinity_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Affinities
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
										SEMICOLON:;
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_affinities
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_affinities
				COLON::
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:context
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
		body_element:
			NEWLINE:$\n
		COMMA:,
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:context
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:HeroStats
												parameters:
							name_var:
								variable:
									variable_names:retainList
		methodName:
			name_var:
				variable:
					variable_names:assignListElementNames
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:void
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:root
		body_element:
			NEWLINE:$\n
anonymous_class:
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:java
				BACKSLASH:\
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	COLON::
	DOT:.
	SEMICOLON:;
	className:
		NAME:Set
NEWLINE:$\n
NEWLINE:$\n
SEMICOLON:;
variable_declaration:
	variableName:
		name_var:
			variable:
				variable_names:listnames
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:parser
				group:
					name_var:
						variable:
							variable_names:Listnames
				DOT:.
	typeName:
		type_var:
			class:
				class_variable_names:List
	EQUALS:=
	inner:
		IN:>
anonymous_class:
	HID:<
	packageName:
		name_var:
			exact:
				variable_names:lists
				BACKSLASH:\
	COLON::
	className:
		NAME:GeneralTokens
	SEMICOLON:;
NEWLINE:$\n
NEWLINE:$\n
SEMICOLON:;
anonymous_class:
	packageName:
		name_var:
			exact:
				variable_names:com
				BACKSLASH:\
	DOT:.
	COLON::
	HID:<
	className:
		NAME:IToken
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	DOT:.
	SEMICOLON:;
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:token
NEWLINE:$\n<<<\n<<