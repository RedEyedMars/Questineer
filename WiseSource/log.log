entities.clws>>
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:StringBuilder
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lang
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Iterator
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:List
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:LinkedList
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:ArrayList
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Arrays
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Map
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:HashMap
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Set
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:HashSet
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:util
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:File
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:java
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:io
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Entry
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:ListEntry
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Generator
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:generation
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:IParser
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:IToken
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:token
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:ParseContext
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:RegexParser
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:com
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:rem
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	DOT:.
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:parser
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Rules
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:HeroStats
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:EventNames
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:GeneralTokens
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	SEMICOLON:;
NEWLINE:$\n
anonymous_class:
	HID:<
	className:
		NAME:Listnames
	COLON::
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	SEMICOLON:;
NEWLINE:$\n
NEWLINE:$\n
comment:
	WILD:import images/image.clws
NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		variable_declaration:
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:declaredCritSet
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
		SEMICOLON:;
		NEWLINE:$\n
		variable_declaration:
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:declaredListSet
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
		SEMICOLON:;
		NEWLINE:$\n
		class_declaration:
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			className:
				variable_names:Source
			NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			className:
				variable_names:Range
			NEWLINE:$\n
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Float
				variableName:
					name_var:
						exact:
							WILD:left
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
			SEMICOLON:;
			NEWLINE:$\n
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Float
				variableName:
					name_var:
						exact:
							WILD:right
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				inner:
					IN:>
				typeName:
					type_var:
						class:
							class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:floatCast
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:(float)(int)
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Range
					methodName:
						NAME:
							AS_METHOD_NAME:*
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialLeft
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialRight
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:left
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
																			name_var:
																				exact:
																					WILD:initialLeft
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:right
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
																			name_var:
																				exact:
																					WILD:initialRight
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Range
					methodName:
						NAME:
							AS_METHOD_NAME:*
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						variableName:
							name_var:
								exact:
									WILD:initialLeft
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialRight
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:left
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialLeft
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:right
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
																			name_var:
																				exact:
																					WILD:initialRight
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Range
					methodName:
						NAME:
							AS_METHOD_NAME:*
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:initialLeft
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						variableName:
							name_var:
								exact:
									WILD:initialRight
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:left
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
																			name_var:
																				exact:
																					WILD:initialLeft
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:right
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialRight
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Entity
								ACCESS:->
								type_var:
									class:
										class_variable_names:Modifier
					methodName:
						name_var:
							variable:
								variable_names:getModifier
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Range
														ACCESS:->
														type_var:
															class:
																class_variable_names:Modifier
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:getRandom
																parameters:
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				objectType:
					CLASS:class 
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				DOT:.
				packageName:
					name_var:
						exact:
							WILD:misc
				className:
					variable_names:Modifier
				parentName:
					type_var:
						exact:
							BACKSLASH:\
							variable_names:Object
				interfaceName:
					type_var:
						access_multi:
							type_var:
								class:
									class_variable_names:Entity
							ACCESS:->
							type_var:
								class:
									class_variable_names:Modifier
				NEWLINE:$\n
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:Double
					variableName:
						name_var:
							exact:
								WILD:value
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0.0
				SEMICOLON:;
				NEWLINE:$\n
				variable_declaration:
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:String
					variableName:
						name_var:
							variable:
								variable_names:doubleCast
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											WILD:(float)(double)
				SEMICOLON:;
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:void
						methodName:
							name_var:
								variable:
									variable_names:decrease
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									exact:
										WILD:inputEntity
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							variableName:
								name_var:
									exact:
										WILD:amount
						body_element:
							NEWLINE:$\n
						body_element:
							body_line:
								variable_assignment:
									name_var:
										exact:
											WILD:value
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:value
											OPERATOR:- 
											body_call:
												group:
													name_var:
														exact:
															WILD:amount
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						methodName:
							name_var:
								variable:
									variable_names:use
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									exact:
										WILD:inputEntity
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:doubleCast
																			PLUS:+
																			name_var:
																				exact:
																					WILD:value
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Double
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Float
								variableName:
									name_var:
										exact:
											WILD:difference
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:right
										OPERATOR:- 
										body_call:
											group:
												name_var:
													exact:
														WILD:left
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:difference
									OPERATOR:* 
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:Math
										DOT:.
										group:
											name_var:
												variable:
													variable_names:random
											parameters:
									OPERATOR:+ 
									body_call:
										group:
											name_var:
												exact:
													WILD:left
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			className:
				variable_names:Lists
			NEWLINE:$\n
			class_declaration:
				objectType:
					CLASS:class 
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				DOT:.
				packageName:
					name_var:
						exact:
							WILD:misc
				className:
					variable_names:Maps
				NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			className:
				variable_names:Criteria
			HID:<
			templateTypeName:
				NAME:TypeName
			IN:>
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:satisfies
					variable_declaration:
						typeName:
							type_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:TypeName
						variableName:
							name_var:
								exact:
									WILD:candidate
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:false
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				inner:
					IN:>
				typeName:
					STATEMENT_TYPE:Statement
				methodName:
					name_var:
						variable:
							variable_names:getBodyElement
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:elementToken
				COMMA:,
				variable_declaration:
					typeName:
						CONTEXT_TYPE:Context 
					variableName:
						name_var:
							variable:
								variable_names:context
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						name_var:
							variable:
								variable_names:elementToken
						COLON::
						variableName:
							NAME:element
						tokenInstance:
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getStatement
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						tokenInstance:
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:return_statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_return:
													RETURN:return 
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:getStatement
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:context
													SEMICOLON:;
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						tokenInstance:
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:acquisition
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:subject
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getAcquisition
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:element
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:acquisition
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						tokenInstance:
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:imposition
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:subject
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										variableName:
											name_var:
												variable:
													variable_names:doom
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:element
																ACCESS:->
																name_var:
																	exact:
																		WILD:imposition
																ACCESS:->
																name_var:
																	exact:
																		WILD:IMPOSE
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												OPERATOR:|| 
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:element
																ACCESS:->
																name_var:
																	exact:
																		WILD:imposition
																ACCESS:->
																name_var:
																	exact:
																		WILD:PLUS
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Entity
												DOT:.
												group:
													name_var:
														variable:
															variable_names:getImposition
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:element
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:imposition
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:doom
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						tokenInstance:
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:variable_declaration
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getVariableDeclaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						tokenInstance:
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:if_statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getIfStatement
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
						class_declaration:
							objectType:
								CLASS:class 
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:entities
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:items
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:aspects
							className:
								variable_names:Aspect
							parentName:
								type_var:
									exact:
										BACKSLASH:\
										variable_names:Object
							interfaceName:
								type_var:
									class:
										class_variable_names:Source
							NEWLINE:$\n
							class_declaration:
								objectType:
									CLASS:class 
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								DOT:.
								packageName:
									name_var:
										exact:
											WILD:entities
								DOT:.
								packageName:
									name_var:
										exact:
											WILD:items
								DOT:.
								packageName:
									name_var:
										exact:
											WILD:aspects
								className:
									variable_names:Id
								NEWLINE:$\n
							NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										exact:
											WILD:name
							SEMICOLON:;
							NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										exact:
											WILD:description
							SEMICOLON:;
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Aspect
												ACCESS:->
												type_var:
													class:
														class_variable_names:Id
									methodName:
										name_var:
											variable:
												variable_names:getId
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
						NEWLINE:$\n
						class_declaration:
							objectType:
								CLASS:class 
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:entities
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:items
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:aspects
							className:
								variable_names:Aspects
							NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									static:
										STA:@
									typeName:
										type_var:
											class:
												class_variable_names:Aspect
									methodName:
										name_var:
											variable:
												variable_names:createAspect
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												exact:
													WILD:aspectName
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									inner:
										IN:>
									typeName:
										type_var:
											class:
												class_variable_names:void
									methodName:
										name_var:
											variable:
												variable_names:setup
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:ParseContext
										variableName:
											name_var:
												variable:
													variable_names:data
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Events
													DOT:.
													group:
														name_var:
															variable:
																variable_names:addEventMethods
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:Aspect
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			NEW:new 
																			typeName:
																				type_var:
																					class:
																						class_variable_names:HashMap
																						template_parameters:
																							template_parameter:
																								type_var:
																									class:
																										class_variable_names:String
																							COMMA:,
																							template_parameter:
																								BODY_TYPE:Body 
																			parameters:
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									inner:
										IN:>
									typeName:
										STATEMENT_TYPE:Statement
									methodName:
										name_var:
											variable:
												variable_names:getId
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:name
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												as_statement:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Aspects
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:name
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:id
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									inner:
										IN:>
									typeName:
										type_var:
											class:
												class_variable_names:void
									methodName:
										name_var:
											variable:
												variable_names:declaration
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:IToken
										variableName:
											name_var:
												variable:
													variable_names:declarationToken
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												typeName:
													type_var:
														class:
															class_variable_names:String
												variableName:
													name_var:
														variable:
															variable_names:aspectName
												EQUALS:=
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		CAMEL:^
																		name_var:
																			variable:
																				variable_names:declarationToken
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:aspectName
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												typeName:
													type_var:
														class:
															class_variable_names:String
												variableName:
													name_var:
														variable:
															variable_names:aspectDescription
												EQUALS:=
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							name_var:
																								variable:
																									variable_names:declarationToken
																							ACCESS:->
																							name_var:
																								exact:
																									WILD:description
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										body_manipulate:
											type_var:
												class:
													class_variable_names:Aspects
											methodName:
												ADD:+=
											class_declaration:
												objectType:
													CLASS:class 
												packageName:
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:packageName
												DOT:.
												packageName:
													name_var:
														exact:
															WILD:entities
												DOT:.
												packageName:
													name_var:
														exact:
															WILD:items
												DOT:.
												packageName:
													name_var:
														exact:
															WILD:aspects
												className:
													variable_names:aspectName
												parentName:
													type_var:
														class:
															class_variable_names:Aspect
												interfaceName:
													type_var:
														class:
															class_variable_names:Source
												NEWLINE:$\n
												variable_declaration:
													static:
														STA:@
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Aspect
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Id
													variableName:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:id
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Aspect
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Id
																	parameters:
												SEMICOLON:;
												NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_manipulate:
											name_var:
												variable:
													variable_names:declarationToken
											COLON::
											variableName:
												NAME:element
											tokenInstance:
												COLON::
												tokenName:
													NAME:event
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															typeName:
																type_var:
																	class:
																		class_variable_names:String
															variableName:
																name_var:
																	variable:
																		variable_names:eventName
															EQUALS:=
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					CAMEL:^
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:event_names
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															typeName:
																CONTEXT_TYPE:Context 
															variableName:
																name_var:
																	variable:
																		variable_names:eventContext
															EQUALS:=
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:Events
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:addToEventMethod
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														access:
																															name_var:
																																variable:
																																	variable_names:element
																															ACCESS:->
																															name_var:
																																exact:
																																	WILD:event_names
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:Aspect
																				COMMA:,
																				method_argument:
																					body_entries:
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															typeName:
																METHOD_TYPE:Method 
															variableName:
																name_var:
																	variable:
																		variable_names:eventMethod
															EQUALS:=
															method_argument:
																method_declaration:
																	methodDefinition:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:void
																		methodName:
																			name_var:
																				variable:
																					variable_names:on
																		variable_declaration:
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							class:
																								class_variable_names:Events
																						ACCESS:->
																						type_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:eventName
																			variableName:
																				name_var:
																					exact:
																						WILD:event
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													body_manipulate:
														name_var:
															variable:
																variable_names:element
														COLON::
														variableName:
															NAME:atom
														tokenInstance:
															COLON::
															tokenName:
																NAME:body_element
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventMethod
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:appendToBody
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:getBodyElement
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:atom
																										COMMA:,
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:eventContext
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:Aspects
																			ACCESS:->
																			name_var:
																				exact:
																					BACKSLASH:\
																					variable_names:aspectName
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:addMethod
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:eventMethod
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Aspects
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getMethod
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:createAspect
													DOT:.
													group:
														name_var:
															variable:
																variable_names:prependToBody
														parameters:
															NEWLINE:$\n
															method_argument:
																as_statement:
																	body_element:
																		body_conditional:
																			conditional:
																				IF:if
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_quote:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:aspectName
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:equals
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:aspectName
																			as_body:
																				body_element:
																					NEWLINE:$\n
																				body_element:
																					body_return:
																						RETURN:return 
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										NEW:new 
																										typeName:
																											type_var:
																												access_multi:
																													type_var:
																														class:
																															class_variable_names:Aspects
																													ACCESS:->
																													type_var:
																														exact:
																															BACKSLASH:\
																															variable_names:aspectName
																										parameters:
																						SEMICOLON:;
																				body_element:
																					NEWLINE:$\n
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
				class_declaration:
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:skills
					className:
						variable_names:Skill
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:experience
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:cooldown
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Entity
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
						variableName:
							name_var:
								exact:
									WILD:range
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Entity
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
						variableName:
							name_var:
								exact:
									WILD:cost
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						variableName:
							name_var:
								exact:
									WILD:hasEntityFocus
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Criteria
									ACCESS:->
									type_var:
										exact:
											BACKSLASH:\
											variable_names:ofEntity
						variableName:
							name_var:
								exact:
									WILD:targetCriteria
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							methodName:
								name_var:
									variable:
										variable_names:getCost
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:entity
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:(int)(float)cost
												DOT:.
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							methodName:
								name_var:
									variable:
										variable_names:getRange
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:entity
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:range
												DOT:.
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:isOffCooldown
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:cooldown
											OPERATOR:== 
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:on
							variable_declaration:
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Events
											ACCESS:->
											type_var:
												exact:
													BACKSLASH:\
													variable_names:Tick
								variableName:
									name_var:
										exact:
											WILD:event
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										OPERATOR:> 
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
													BACKSLASH:\
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								variableName:
									name_var:
										exact:
											WILD:newFocus
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										name_var:
											exact:
												WILD:hasEntityFocus
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:use
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:user
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:isOffCooldown
												parameters:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Lists
													ACCESS:->
													type_var:
														exact:
															BACKSLASH:\
															variable_names:EntityList
										variableName:
											name_var:
												exact:
													WILD:potentialTargets
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										FOR:for
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												exact:
													WILD:potential
									OPERATOR:: 
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:user
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getLocation
												parameters:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getEntitiesWithin
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getRange
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:user
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:targetCriteria
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:satisfies
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:potential
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:user
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:potential
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:use
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:user
							COMMA:,
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:victim
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getName
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
					NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:skills
					className:
						variable_names:Skills
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inner:
								IN:>
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:setup
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:ParseContext
								variableName:
									name_var:
										variable:
											variable_names:data
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createList
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:affinities
					className:
						variable_names:Affinity
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					class_declaration:
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:mods
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:affinities
						className:
							variable_names:Id
						NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Affinity
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Double
							methodName:
								name_var:
									variable:
										variable_names:modify
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:defender
							COMMA:,
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Double
								variableName:
									name_var:
										exact:
											WILD:damage
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0.0
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:affinities
					className:
						variable_names:Affinities
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							static:
								STA:@
							typeName:
								type_var:
									class:
										class_variable_names:Affinity
							methodName:
								name_var:
									variable:
										variable_names:createAffinity
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										exact:
											WILD:affinityName
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inner:
								IN:>
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:declaration
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:IToken
								variableName:
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:affinityName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:affinityName
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:affinityClassName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																CAMEL:^
																variable_names:affinityName
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:weaknesses
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:strengths
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										tokenName:
											NAME:strength_name
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:strengths
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:hasAffinity
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											CAMEL:^
																											variable_names:element
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										tokenName:
											NAME:weakness_name
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:weaknesses
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:hasAffinity
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											CAMEL:^
																											variable_names:element
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Affinities
									methodName:
										ADD:+=
									class_declaration:
										objectType:
											CLASS:class 
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:entities
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:mods
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:affinities
										className:
											variable_names:affinityClassName
										parentName:
											type_var:
												class:
													class_variable_names:Affinity
										NEWLINE:$\n
										variable_declaration:
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Affinity
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
											variableName:
												name_var:
													exact:
														WILD:id
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Affinity
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
															parameters:
										SEMICOLON:;
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:affinityName
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Double
												methodName:
													name_var:
														variable:
															variable_names:modify
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															exact:
																WILD:defender
												COMMA:,
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Double
													variableName:
														name_var:
															exact:
																WILD:damage
												body_element:
													NEWLINE:$\n
												body_element:
													body_conditional:
														conditional:
															IF:if
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:strengths
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		OPERATOR:*= 
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_conditional:
														conditional:
															IF:if
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:weaknesses
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		OPERATOR:/= 
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:damage
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Affinities
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:createAffinity
											DOT:.
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:affinityClassName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:affinityName
																	as_body:
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Affinities
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:affinityClassName
																								parameters:
																				SEMICOLON:;
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inner:
								IN:>
							typeName:
								STATEMENT_TYPE:Statement
							methodName:
								name_var:
									variable:
										variable_names:hasAffinity
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:affinityName
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:defender
													DOT:.
													group:
														name_var:
															variable:
																variable_names:has
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:Affinities
																					ACCESS:->
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:affinityName
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:id
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inner:
								IN:>
							typeName:
								STATEMENT_TYPE:Statement
							methodName:
								name_var:
									variable:
										variable_names:getId
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Affinities
																ACCESS:->
																name_var:
																	variable:
																		variable_names:name
													DOT:.
													group:
														name_var:
															variable:
																variable_names:id
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:conditions
					className:
						variable_names:Condition
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					class_declaration:
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:mods
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:conditions
						className:
							variable_names:Id
						NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Condition
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
					SEMICOLON:;
					NEWLINE:$\n
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:traits
					className:
						variable_names:Trait
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					class_declaration:
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:mods
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:traits
						className:
							variable_names:Id
						NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Trait
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:hasRequirements
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										exact:
											WILD:candidate
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
					SEMICOLON:;
					NEWLINE:$\n
				NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			className:
				variable_names:Int
			NEWLINE:$\n
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Integer
				variableName:
					name_var:
						exact:
							WILD:value
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0
			SEMICOLON:;
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:setValue
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								exact:
									WILD:newValue
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:value
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:newValue
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:events
			className:
				variable_names:Events
			NEWLINE:$\n
			variable_declaration:
				inner:
					IN:>
				typeName:
					type_var:
						class:
							class_variable_names:Map
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
								template_parameter:
									type_var:
										class:
											class_variable_names:List
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Entry
				variableName:
					name_var:
						variable:
							variable_names:variableDefs
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:HashMap
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:List
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Entry
								parameters:
			SEMICOLON:;
			NEWLINE:$\n
			variable_declaration:
				inner:
					IN:>
				typeName:
					type_var:
						class:
							class_variable_names:Set
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:eventNameSet
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:HashSet
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
								parameters:
			SEMICOLON:;
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:declaration
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								inner:
									IN:>
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:eventName
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:declaration
																			ACCESS:->
																			name_var:
																				exact:
																					WILD:eventName
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								inner:
									IN:>
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
									DOT:.
									group:
										name_var:
											variable:
												variable_names:add
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								inner:
									IN:>
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:cev
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														CAMEL:^
														variable_names:eventName
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							IN:>
							type_var:
								class:
									class_variable_names:Events
							methodName:
								ADD:+=
							NEWLINE:$\n
							class_declaration:
								objectType:
									CLASS:class 
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								DOT:.
								packageName:
									name_var:
										exact:
											WILD:events
								className:
									variable_names:cev
								parentName:
									type_var:
										class:
											class_variable_names:Event
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							IN:>
							name_var:
								variable:
									variable_names:declaration
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:parameter
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										IN:>
										name_var:
											variable:
												variable_names:element
										COLON::
										variableName:
											NAME:atom
										tokenInstance:
											COLON::
											tokenName:
												NAME:type_name
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													IN:>
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Events
															ACCESS:->
															type_var:
																exact:
																	BACKSLASH:\
																	variable_names:cev
													methodName:
														ADD:+=
													NEWLINE:$\n
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getTypeName
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:element
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:name
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:addParameter
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:eventName
					COMMA:,
					variable_declaration:
						typeName:
							METHOD_TYPE:Method 
						variableName:
							name_var:
								variable:
									variable_names:method
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								inner:
									IN:>
								body_call:
									group:
										name_var:
											variable:
												variable_names:method
									DOT:.
									group:
										name_var:
											variable:
												variable_names:addParameter
										parameters:
											method_argument:
												variable_declaration:
													typeName:
														type_var:
															exact:
																BACKSLASH:\
																variable_names:eventName
													variableName:
														name_var:
															exact:
																WILD:event
												SEMICOLON:;
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					typeName:
						CONTEXT_TYPE:Context 
					methodName:
						name_var:
							variable:
								variable_names:addToEventMethod
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:eName
					COMMA:,
					variable_declaration:
						typeName:
							CLASS_TYPE:Class 
						variableName:
							name_var:
								variable:
									variable_names:inputClass
					COMMA:,
					variable_declaration:
						typeName:
							BODY_TYPE:Body 
						variableName:
							name_var:
								variable:
									variable_names:body
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								typeName:
									METHOD_TYPE:Method 
								variableName:
									name_var:
										variable:
											variable_names:newMethod
								EQUALS:=
								method_argument:
									method_declaration:
										methodDefinition:
											typeName:
												type_var:
													class:
														class_variable_names:void
											methodName:
												name_var:
													exact:
														WILD:on
											variable_declaration:
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Events
															ACCESS:->
															type_var:
																exact:
																	BACKSLASH:\
																	CAMEL:^
																	variable_names:eName
												variableName:
													name_var:
														exact:
															WILD:event
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newMethod
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getName
												parameters:
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:inputClass
									DOT:.
									group:
										name_var:
											variable:
												variable_names:getMethod
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														exact:
															WILD:on
												variable_declaration:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Events
																ACCESS:->
																type_var:
																	exact:
																		BACKSLASH:\
																		CAMEL:^
																		variable_names:eName
													variableName:
														name_var:
															exact:
																WILD:event
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								typeName:
									METHOD_TYPE:Method 
								variableName:
									name_var:
										variable:
											variable_names:establishedMethod
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:inputClass
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newMethodName
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:establishedMethod
									DOT:.
									group:
										name_var:
											variable:
												variable_names:appendToBody
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:body
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:establishedMethod
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getCurrentContext
											parameters:
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:addEventMethods
					variable_declaration:
						typeName:
							CLASS_TYPE:Class 
						variableName:
							name_var:
								variable:
									variable_names:inputClass
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Map
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:String
										COMMA:,
										template_parameter:
											BODY_TYPE:Body 
						variableName:
							name_var:
								variable:
									variable_names:bodiesToAdd
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								FOR:for
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							OPERATOR:: 
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										conditional:
											IF:if
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												DOT:.
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:addToEventMethod
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										conditional:
											ELSE:else
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:addToEventMethod
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	COMMA:,
																	method_argument:
																		body_entries:
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:addEventMethodsExclusive
					variable_declaration:
						typeName:
							CLASS_TYPE:Class 
						variableName:
							name_var:
								variable:
									variable_names:inputClass
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Map
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:String
										COMMA:,
										template_parameter:
											BODY_TYPE:Body 
						variableName:
							name_var:
								variable:
									variable_names:bodiesToAdd
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								FOR:for
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							OPERATOR:: 
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										conditional:
											IF:if
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												DOT:.
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:addToEventMethod
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:events
			className:
				variable_names:Event
			NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n
variable_declaration:
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:String
	variableName:
		name_var:
			variable:
				variable_names:packageName
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						exact:
							WILD:com.rem.qstnr
SEMICOLON:;
NEWLINE:$\n
variable_declaration:
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:IParser
	variableName:
		name_var:
			variable:
				variable_names:rootParser
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:Rules
				DOT:.
				group:
					name_var:
						variable:
							variable_names:base
SEMICOLON:;
NEWLINE:$\n
variable_declaration:
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:List
	variableName:
		name_var:
			variable:
				variable_names:listnames
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:Listnames
				DOT:.
				group:
					name_var:
						variable:
							variable_names:parser
SEMICOLON:;
NEWLINE:$\n
variable_declaration:
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:List
	variableName:
		name_var:
			variable:
				variable_names:rules
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:Rules
				DOT:.
				group:
					name_var:
						variable:
							variable_names:parser
SEMICOLON:;
NEWLINE:$\n
variable_declaration:
	inner:
		IN:>
	typeName:
		type_var:
			class:
				class_variable_names:RegexParser
	variableName:
		name_var:
			variable:
				variable_names:lazyNameParser
	EQUALS:=
	method_argument:
		body_statement:
			body_call:
				group:
					name_var:
						variable:
							variable_names:GeneralTokens
				DOT:.
				group:
					name_var:
						variable:
							variable_names:NAME
SEMICOLON:;
NEWLINE:$\n
method_declaration:
	methodDefinition:
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:assignListElementNames
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
			variableName:
				name_var:
					variable:
						variable_names:context
		COMMA:,
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:root
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:context
						DOT:.
						group:
							name_var:
								variable:
									variable_names:retainList
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:HeroStats
												parameters:
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:context
						DOT:.
						group:
							name_var:
								variable:
									variable_names:retainList
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:EventNames
												parameters:
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:String
		methodName:
			name_var:
				variable:
					variable_names:getDirectory
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:fileName
		COMMA:,
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:knownDirectory
		body_element:
			NEWLINE:$\n
		body_element:
			body_return:
				inner:
					IN:>
				RETURN:return 
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:../Resource/
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:setup
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
			variableName:
				name_var:
					variable:
						variable_names:data
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:generate
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:ParseContext
			variableName:
				name_var:
					variable:
						variable_names:data
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:setup
							parameters:
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					variableName:
						name_var:
							variable:
								variable_names:root
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:data
								DOT:.
								group:
									name_var:
										variable:
											variable_names:getRoot
									parameters:
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:root
				COLON::
				variableName:
					NAME:imports
				tokenInstance:
					COLON::
					tokenName:
						NAME:import_any
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:imports
							COLON::
							variableName:
								NAME:import_events
							tokenInstance:
								COLON::
								tokenName:
									NAME:IMPORT_EVENT
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:import_events
										COLON::
										variableName:
											NAME:element
										tokenInstance:
											COLON::
											tokenName:
												NAME:event_declaration
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:EventsClass
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:declaration
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:element
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Conditions
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Aspects
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Items
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Entity
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Skills
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:root
				COLON::
				variableName:
					NAME:imports
				tokenInstance:
					COLON::
					tokenName:
						NAME:import_any
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												BACKSLASH:\
												variable_names:importAny
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:output
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:../Questineer/src
								COMMA:,
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:importAny
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_events
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_EVENT
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_events
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:event_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									comment:
										WILD:>			\events.generateDeclaration(element);
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_items
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_ITEM
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_items
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:import_any
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:importAny
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_items
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:item_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Items
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_aspects
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_ASPECT
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_aspects
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:aspect_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Aspects
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_affinities
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_AFFINITY
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_affinities
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:affinity_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Affinities
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_traits
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_TRAIT
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_traits
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:trait_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Traits
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_attacks
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_ATTACK
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_attacks
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:attack_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Attacks
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_conditions
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_CONDITION
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_conditions
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:condition_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Conditions
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:String
		methodName:
			name_var:
				variable:
					variable_names:getTypeName
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IToken
			variableName:
				name_var:
					variable:
						variable_names:nameToken
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:StringBuilder
					variableName:
						name_var:
							variable:
								variable_names:nameBuilder
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									NEW:new 
									typeName:
										type_var:
											class:
												class_variable_names:StringBuilder
									parameters:
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				variable_declaration:
					WEAK:~
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					variableName:
						name_var:
							variable:
								variable_names:isFirst
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:true
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:nameToken
				COLON::
				variableName:
					NAME:element
				tokenInstance:
					COLON::
					tokenName:
						NAME:typeName
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:isFirst
								OPERATOR:==
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
												DOT:.
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										variable_assignment:
											name_var:
												variable:
													variable_names:isFirst
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:nameBuilder
									DOT:.
									group:
										name_var:
											variable:
												variable_names:append
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	CAMEL:^
																	variable_names:element
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_return:
				RETURN:return 
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
NEWLINE:$\n<<