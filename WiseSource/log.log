entities.clws>>
method_declaration:
	methodDefinition:
		inline:
			COMMA:,
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:knownDirectory
				typeName:
					type_var:
						class:
							class_variable_names:String
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:fileName
				typeName:
					type_var:
						class:
							class_variable_names:String
		methodName:
			name_var:
				variable:
					variable_names:getDirectory
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:String
		body_element:
			body_return:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:../Resource/
				inner:
					IN:>
				RETURN:return 
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		methodName:
			name_var:
				variable:
					variable_names:assignListElementNames
		typeName:
			type_var:
				class:
					class_variable_names:void
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:context
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:root
				typeName:
					type_var:
						class:
							class_variable_names:IToken
			COMMA:,
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												typeName:
													type_var:
														class:
															class_variable_names:HeroStats
												parameters:
												NEW:new 
							name_var:
								variable:
									variable_names:retainList
						group:
							name_var:
								variable:
									variable_names:context
				SEMICOLON:;
		inner:
			IN:>
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:data
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:setup
NEWLINE:$\n
method_declaration:
	methodDefinition:
		methodName:
			name_var:
				variable:
					variable_names:generate
		body_element:
			NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Quests
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						DOT:.
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Items
						DOT:.
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Entity
				SEMICOLON:;
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:data
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:output
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:root
				COLON::
				variableName:
					NAME:imports
				tokenInstance:
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
										name_var:
											exact:
												BACKSLASH:\
												variable_names:importAny
							SEMICOLON:;
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:Gui
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
										name_var:
											variable:
												variable_names:importAny
									DOT:.
							SEMICOLON:;
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Aspects
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						group:
							name_var:
								variable:
									variable_names:Activities
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Relationship
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				variableName:
					NAME:imports
				COLON::
				name_var:
					variable:
						variable_names:root
				tokenInstance:
					COLON::
					tokenName:
						NAME:import_any
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:imports
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:import_events
										variableName:
											NAME:element
										COLON::
										tokenInstance:
											tokenName:
												NAME:event_declaration
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:Events
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:declaration
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:element
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:IMPORT_EVENT
								COLON::
							COLON::
							variableName:
								NAME:import_events
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		inner:
			IN:>
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Tile
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
							name_var:
								exact:
									variable_names:setupGui
									BACKSLASH:\
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Environment
						DOT:.
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:../Questineer/src
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Conditions
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Skills
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						DOT:.
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Treasury
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				variable_declaration:
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:IToken
					method_argument:
						body_statement:
							body_call:
								group:
									parameters:
									name_var:
										variable:
											variable_names:getRoot
								group:
									name_var:
										variable:
											variable_names:data
								DOT:.
					variableName:
						name_var:
							variable:
								variable_names:root
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				typeName:
					VARIABLE_TYPE:Variable 
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableHeaderToken
																		name_var:
																			exact:
																				WILD:type_name
											name_var:
												exact:
													BACKSLASH:\
													variable_names:getTypeName
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:typeName
						SEMICOLON:;
				inner:
					IN:>
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_throw:
									body_statement:
										body_call:
											group:
												name_var:
													concat:
														name_var:
															exact:
																WILD:Could not find type:
														name_var:
															variable:
																variable_names:typeName
														name_var:
															exact:
																WILD:!
														PLUS:+
														PLUS:+
										OPERATOR:+ 
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableHeaderToken
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Generator
									THROW:throw 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
							OPERATOR:== 
				body_element:
					body_manipulate:
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:typeName
							variableName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														access:
															name_var:
																variable:
																	variable_names:variableHeaderToken
															ACCESS:->
															name_var:
																exact:
																	WILD:variableName
						type_var:
							class:
								class_variable_names:inputClass
						methodName:
							ADD:+=
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:addVariableHeader
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						SEMICOLON:;
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							variable:
																								variable_names:variableHeaderToken
										name_var:
											variable:
												variable_names:getVariable
									group:
										name_var:
											variable:
												variable_names:inputClass
									DOT:.
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:inputClass
						typeName:
							CLASS_TYPE:Class 
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:variableHeaderToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:type
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
										DOT:.
										DOT:.
										group:
											name_var:
												variable:
													variable_names:inputClass
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
											name_var:
												variable:
													variable_names:getClassContext
							typeName:
								CONTEXT_TYPE:Context 
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				inner:
					IN:>
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:elementsToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					COMMA:,
				typeName:
					BODY_TYPE:Body 
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:result
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											typeName:
												BODY_TYPE:Body 
											parameters:
				body_element:
					body_line:
						body_statement:
							body_call:
								DOT:.
								group:
									name_var:
										variable:
											variable_names:setParentContext
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
								group:
									name_var:
										variable:
											variable_names:result
						SEMICOLON:;
				body_element:
					body_manipulate:
						tokenInstance:
							body_element:
								NEWLINE:$\n
							COLON::
							tokenName:
								NAME:body_element
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:getContext
																						parameters:
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:result
																	name_var:
																		exact:
																			variable_names:getBodyElement
																			BACKSLASH:\
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:result
									SEMICOLON:;
						variableName:
							NAME:element
						name_var:
							variable:
								variable_names:elementsToken
						COLON::
				body_element:
					body_return:
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:result
						RETURN:return 
				methodName:
					name_var:
						variable:
							variable_names:getBodyElements
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						RETURN:return 
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getBodyElement
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				typeName:
					STATEMENT_TYPE:Statement
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:elementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					COMMA:,
				body_element:
					body_manipulate:
						name_var:
							variable:
								variable_names:elementToken
						variableName:
							NAME:element
						tokenInstance:
							NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																						COMMA:,
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:context
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																					name_var:
																						exact:
																							variable_names:getStatement
																							BACKSLASH:\
									SEMICOLON:;
							COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:statement
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:getForStatement
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														COMMA:,
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:for_statement
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							COLON::
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:imposition
																				name_var:
																					variable:
																						variable_names:element
																				ACCESS:->
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:doom
														COMMA:,
													name_var:
														variable:
															variable_names:getImposition
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Entity
									RETURN:return 
							tokenName:
								NAME:imposition
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:subject
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												OPERATOR:|| 
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:imposition
																ACCESS:->
																name_var:
																	exact:
																		WILD:IMPOSE
																ACCESS:->
																name_var:
																	variable:
																		variable_names:element
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:PLUS
																ACCESS:->
																name_var:
																	variable:
																		variable_names:element
																name_var:
																	exact:
																		WILD:imposition
																ACCESS:->
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												OPERATOR:!= 
												OPERATOR:!= 
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										variableName:
											name_var:
												variable:
													variable_names:doom
							COLON::
							body_element:
								NEWLINE:$\n
						tokenInstance:
							NEWLINE:$\n
							tokenName:
								NAME:if_statement
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
													name_var:
														exact:
															variable_names:getIfStatement
															BACKSLASH:\
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
																					name_var:
																						variable:
																							variable_names:element
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															COMMA:,
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:subject
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:element
																				name_var:
																					exact:
																						WILD:acquisition
																				ACCESS:->
														COMMA:,
														COMMA:,
													name_var:
														exact:
															variable_names:getAcquisition
															BACKSLASH:\
									RETURN:return 
							COLON::
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:acquisition
							body_element:
								NEWLINE:$\n
						tokenInstance:
							COLON::
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getVariableDeclaration
							tokenName:
								NAME:variable_declaration
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						COLON::
						tokenInstance:
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_return:
													RETURN:return 
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:context
																							COMMA:,
																						name_var:
																							exact:
																								variable_names:getStatement
																								BACKSLASH:\
													SEMICOLON:;
									RETURN:return 
									SEMICOLON:;
							tokenName:
								NAME:return_statement
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
						conditional:
							IF:if
						as_body:
							body_element:
								body_throw:
									SEMICOLON:;
									THROW:throw 
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableDeclarationToken
											group:
												name_var:
													exact:
														variable_names:Generator
														BACKSLASH:\
											DOT:.
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													concat:
														name_var:
															exact:
																WILD:!
														name_var:
															variable:
																variable_names:typeName
														PLUS:+
														name_var:
															exact:
																WILD:Could not find type:
														PLUS:+
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								CONTEXT_TYPE:Context 
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:context
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getClassContext
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
							variableName:
								name_var:
									variable:
										variable_names:type
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:typeName
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:type_name
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableDeclarationToken
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:variable_header
											name_var:
												exact:
													BACKSLASH:\
													variable_names:getTypeName
							EQUALS:=
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				typeName:
					STATEMENT_TYPE:Statement
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:variableDeclarationToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					COMMA:,
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getVariableDeclaration
				body_element:
					body_conditional:
						conditional:
							ELSE:else
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
														EQUALS:=
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							exact:
																								WILD:variable_header
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						conditional:
							IF:if
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:!= 
							body_call:
								group:
									name_var:
										access:
											name_var:
												variable:
													variable_names:variableDeclarationToken
											ACCESS:->
											name_var:
												exact:
													WILD:statement
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														EQUALS:=
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variable_header
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						name_var:
																							exact:
																								WILD:variableName
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getStatement
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:variableDeclarationToken
																														name_var:
																															exact:
																																WILD:statement
																														ACCESS:->
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				INTERFACE:interface 
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:load
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			className:
				variable_names:Loaddable
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			HID:<
			DOT:.
			className:
				variable_names:Listenable
			objectType:
				INTERFACE:interface 
			IN:>
			templateTypeName:
				NAME:TypeName
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:event
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:TypeName
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Double
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										as_braced:
											OPERATOR:* 
											left:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:right
													body_call:
														group:
															name_var:
																variable:
																	variable_names:left
													OPERATOR:- 
											right:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:nextDouble
														group:
															name_var:
																variable:
																	variable_names:randomizer
														DOT:.
													OPERATOR:+ 
													BACKSLASH:\
													body_call:
														group:
															name_var:
																variable:
																	variable_names:left
							RETURN:return 
							SEMICOLON:;
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getRandomFloat
					body_element:
						body_return:
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:randomizer
										group:
											name_var:
												variable:
													variable_names:nextFloat
											parameters:
							RETURN:return 
					inline:
					typeName:
						type_var:
							class:
								class_variable_names:Float
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											as_braced:
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
												right:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialLeft
								name_var:
									variable:
										variable_names:left
								EQUALS:=
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:initialRight
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:initialLeft
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
					typeName:
						type_var:
							class:
								class_variable_names:Range
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											as_braced:
												right:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialRight
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
								name_var:
									variable:
										variable_names:right
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:chance
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:percent
							typeName:
								type_var:
									class:
										class_variable_names:Float
					body_element:
						body_return:
							method_argument:
								body_statement:
									OPERATOR:<= 
									body_call:
										group:
											name_var:
												variable:
													variable_names:percent
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:nextFloat
											parameters:
										group:
											name_var:
												variable:
													variable_names:randomizer
							RETURN:return 
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:chance
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:percent
							typeName:
								type_var:
									class:
										class_variable_names:Double
					body_element:
						body_return:
							method_argument:
								body_statement:
									OPERATOR:<= 
									body_call:
										group:
											name_var:
												variable:
													variable_names:randomizer
										group:
											parameters:
											name_var:
												variable:
													variable_names:nextDouble
										DOT:.
									body_call:
										group:
											name_var:
												variable:
													variable_names:percent
							SEMICOLON:;
							RETURN:return 
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					static:
						STA:@
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:initialLeft
								name_var:
									variable:
										variable_names:left
								EQUALS:=
							SEMICOLON:;
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							variableName:
								name_var:
									variable:
										variable_names:initialLeft
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:initialRight
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											as_braced:
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
												right:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialRight
								name_var:
									variable:
										variable_names:right
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Range
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							ISTYPENAME:$
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:TT
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:collection
							typeName:
								type_var:
									class:
										class_variable_names:List
										template_parameters:
											template_parameter:
												type_var:
													exact:
														BACKSLASH:\
														variable_names:T
					body_element:
						body_conditional:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:collection
									group:
										name_var:
											variable:
												variable_names:isEmpty
										parameters:
							conditional:
								IF:if
							as_body:
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					static:
						STA:@
					methodName:
						name_var:
							variable:
								variable_names:select
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:get
											parameters:
												method_argument:
													body_statement:
														body_call:
															as_braced:
																left:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:int
																right:
																	body_statement:
																		body_call:
																			as_braced:
																				left:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:collection
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:size
																								parameters:
																						OPERATOR:*
																						body_call:
																							DOT:.
																							group:
																								parameters:
																								name_var:
																									variable:
																										variable_names:nextFloat
																							group:
																								name_var:
																									variable:
																										variable_names:randomizer
										group:
											name_var:
												variable:
													variable_names:collection
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:randomizer
				static:
					STA:@
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:Random
								parameters:
				typeName:
					type_var:
						class:
							class_variable_names:Random
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:lowerBound
							body_statement:
								OPERATOR:>= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:lowerBound
								body_call:
									group:
										name_var:
											variable:
												variable_names:upperBound
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					inline:
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:lowerBound
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:upperBound
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													as_braced:
														left:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:int
														right:
															body_statement:
																body_call:
																	as_braced:
																		right:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:lowerBound
																		left:
																			body_statement:
																				body_call:
																					as_braced:
																						OPERATOR:*
																						left:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:lowerBound
																								OPERATOR:-
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:upperBound
																						right:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:nextFloat
																										parameters:
																									DOT:.
																									group:
																										name_var:
																											variable:
																												variable_names:randomizer
																		OPERATOR:+
										RETURN:return 
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					static:
						STA:@
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:value
							typeName:
								type_var:
									class:
										class_variable_names:Double
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
										SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0.001 
								OPERATOR:> 
							conditional:
								IF:if
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
										RETURN:return 
								body_element:
									NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:normalize
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
								ELSE:else
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								OPERATOR:< 
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-0.001 
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:-1
										RETURN:return 
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
				typeName:
					type_var:
						class:
							class_variable_names:Float
				variableName:
					name_var:
						variable:
							variable_names:left
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Entity
								type_var:
									class:
										class_variable_names:Modifier
								ACCESS:->
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		variable_names:getRandom
																		BACKSLASH:\
																parameters:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Range
														ACCESS:->
														type_var:
															class:
																class_variable_names:Modifier
							SEMICOLON:;
							RETURN:return 
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getModifier
					body_element:
						NEWLINE:$\n
					inline:
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											as_braced:
												right:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialLeft
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
								name_var:
									variable:
										variable_names:left
								EQUALS:=
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:initialLeft
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:initialRight
							typeName:
								type_var:
									class:
										class_variable_names:Float
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									variable:
										variable_names:right
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:initialRight
								EQUALS:=
							SEMICOLON:;
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			DOT:.
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				parentName:
					type_var:
						exact:
							BACKSLASH:\
							variable_names:Object
				NEWLINE:$\n
				SEMICOLON:;
				DOT:.
				variable_declaration:
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0.0
					typeName:
						type_var:
							class:
								class_variable_names:Double
					variableName:
						name_var:
							variable:
								variable_names:value
				interfaceName:
					type_var:
						access_multi:
							ACCESS:->
							type_var:
								class:
									class_variable_names:Entity
							type_var:
								class:
									class_variable_names:Modifier
				method_declaration:
					methodDefinition:
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:inputEntity
								typeName:
									type_var:
										class:
											class_variable_names:Entity
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:use
						typeName:
							type_var:
								class:
									class_variable_names:Float
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											as_braced:
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
												right:
													body_statement:
														body_call:
															as_braced:
																left:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:double
																right:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:value
								RETURN:return 
								SEMICOLON:;
				objectType:
					CLASS:class 
				NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							body_line:
								variable_assignment:
									EQUALS:=
									name_var:
										variable:
											variable_names:value
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:value
											BACKSLASH:\
											OPERATOR:- 
											body_call:
												group:
													name_var:
														variable:
															variable_names:amount
								SEMICOLON:;
						typeName:
							type_var:
								class:
									class_variable_names:void
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:inputEntity
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							COMMA:,
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Float
								variableName:
									name_var:
										variable:
											variable_names:amount
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:decrease
						body_element:
							NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:misc
				className:
					variable_names:Modifier
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getIntegerBetween
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										as_braced:
											right:
												body_statement:
													body_call:
														as_braced:
															right:
																body_statement:
																	body_call:
																		as_braced:
																			left:
																				body_statement:
																					body_call:
																						as_braced:
																							right:
																								body_statement:
																									BACKSLASH:\
																									body_call:
																										DOT:.
																										group:
																											name_var:
																												variable:
																													variable_names:nextDouble
																											parameters:
																										group:
																											name_var:
																												variable:
																													variable_names:randomizer
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:bottom
																									OPERATOR:+ 
																							left:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:bottom
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:top
																									OPERATOR:- 
																							OPERATOR:* 
															left:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:double
											left:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:int
							SEMICOLON:;
							RETURN:return 
					inline:
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:top
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:bottom
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					static:
						STA:@
					body_element:
						NEWLINE:$\n
			objectType:
				CLASS:class 
			className:
				variable_names:Range
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:right
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:Float
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:declaredMapSet
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:misc
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				CLASS:class 
			DOT:.
			className:
				variable_names:ListMaps
			NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:elseBody
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											typeName:
												BODY_TYPE:Body 
											NEW:new 
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getIfStatement
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:elseHeader
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												STATEMENT_TYPE:Statement
											parameters:
											NEW:new 
							typeName:
								STATEMENT_TYPE:Statement
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:ifStatementToken
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
				body_element:
					body_line:
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												BODY_TYPE:Body 
											parameters:
											NEW:new 
							variableName:
								name_var:
									variable:
										variable_names:body
							EQUALS:=
						SEMICOLON:;
				body_element:
					body_line:
						SEMICOLON:;
						body_statement:
							body_call:
								group:
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
									name_var:
										variable:
											variable_names:setParentContext
								group:
									name_var:
										variable:
											variable_names:elseBody
								DOT:.
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						conditional:
							ELSE:else
							IF:if
						as_body:
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													conditional:
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
													conditional:
														ELSE:else
									RETURN:return 
									SEMICOLON:;
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:1 
				inner:
					IN:>
				body_element:
					body_line:
						variable_declaration:
							EQUALS:=
							typeName:
								STATEMENT_TYPE:Statement
							variableName:
								name_var:
									variable:
										variable_names:header
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
											NEW:new 
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													conditional:
														IF:if
						conditional:
							IF:if
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0 
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							WEAK:~
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													NAME:
														NUMBER:0
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:mode
						SEMICOLON:;
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:2 
						conditional:
							ELSE:else
							IF:if
						as_body:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													conditional:
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
											body_element:
												body_conditional:
													conditional:
														ELSE:else
														IF:if
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:elseHeader
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
				body_element:
					NEWLINE:$\n
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					body_manipulate:
						COLON::
						tokenInstance:
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:body_element
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:body
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getBodyElement
																			BACKSLASH:\
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:body
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:getContext
																						parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		COMMA:,
							COLON::
						name_var:
							variable:
								variable_names:ifStatementToken
						tokenInstance:
							tokenName:
								NAME:boolean_statement
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:header
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getBooleanStatement
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
																		COMMA:,
												name_var:
													variable:
														variable_names:add
							COLON::
							body_element:
								NEWLINE:$\n
						variableName:
							NAME:element
						tokenInstance:
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											variable:
												variable_names:mode
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:2
													EQUALS:=
													name_var:
														variable:
															variable_names:mode
												SEMICOLON:;
										tokenName:
											NAME:boolean_statement
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:context
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBooleanStatement
														group:
															name_var:
																variable:
																	variable_names:elseHeader
														DOT:.
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:atom
									tokenInstance:
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:getContext
																		parameters:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:elseBody
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getVariableFromHeader
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															exact:
																																WILD:variable_declaration
																														name_var:
																															exact:
																																WILD:variable_header
																														name_var:
																															variable:
																																variable_names:atom
																														ACCESS:->
																														ACCESS:->
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																												name_var:
																													variable:
																														variable_names:getContext
																											group:
																												name_var:
																													variable:
																														variable_names:elseBody
																											DOT:.
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													body_call:
														group:
															name_var:
																access:
																	ACCESS:->
																	name_var:
																		variable:
																			variable_names:atom
																	name_var:
																		exact:
																			WILD:variable_declaration
													OPERATOR:!= 
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:body_element
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBodyElement
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:elseBody
																								DOT:.
																								group:
																									parameters:
																									name_var:
																										variable:
																											variable_names:getContext
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:elseBody
														DOT:.
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:element
									COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:else_statement
							COLON::
							body_element:
								NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						body_statement:
							body_call:
								group:
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
									name_var:
										variable:
											variable_names:setParentContext
								group:
									name_var:
										variable:
											variable_names:body
								DOT:.
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
									SEMICOLON:;
						conditional:
							ELSE:else
		class_declaration:
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:Source
			DOT:.
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:Random
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			HID:<
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Tickable
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:tick
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:millisSinceLastFrame
							typeName:
								type_var:
									class:
										class_variable_names:Double
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				INTERFACE:interface 
		NEWLINE:$\n
		SEMICOLON:;
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			className:
				variable_names:Usable
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:use
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					inline:
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:activity
							typeName:
								type_var:
									class:
										class_variable_names:Activity
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									variable:
										variable_names:user
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			DOT:.
			NEWLINE:$\n
			class_declaration:
				objectType:
					CLASS:class 
				FORSLASH:/
				FORSLASH:/
				NEWLINE:$\n
				className:
					variable_names:Id
			NEWLINE:$\n
			objectType:
				INTERFACE:interface 
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getRange
					typeName:
						type_var:
							class:
								class_variable_names:Float
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:user
							typeName:
								type_var:
									class:
										class_variable_names:Entity
			method_declaration:
				methodDefinition:
					inline:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:canChase
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Usable
								type_var:
									class:
										class_variable_names:Id
								ACCESS:->
					methodName:
						name_var:
							variable:
								variable_names:getId
					inline:
			method_declaration:
				methodDefinition:
					inline:
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Criteria
								ACCESS:->
								type_var:
									class:
										class_variable_names:Target
					methodName:
						name_var:
							variable:
								variable_names:getTargetCriteria
			NEWLINE:$\n
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:<T>T
			EQUALS:=
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:TT
			typeName:
				type_var:
					class:
						class_variable_names:String
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableHeaderToken
																		name_var:
																			exact:
																				WILD:type_name
											name_var:
												exact:
													BACKSLASH:\
													variable_names:getTypeName
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:typeName
						SEMICOLON:;
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:variableHeaderToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
				typeName:
					VARIABLE_TYPE:Variable 
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								CONTEXT_TYPE:Context 
							variableName:
								name_var:
									variable:
										variable_names:type
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:context
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getClassContext
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
							EQUALS:=
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getVariableFromHeader
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						SEMICOLON:;
						method_argument:
							variable_declaration:
								typeName:
									type_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:typeName
								variableName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:variableHeaderToken
																name_var:
																	exact:
																		WILD:variableName
																ACCESS:->
							SEMICOLON:;
						RETURN:return 
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_throw:
									body_statement:
										body_call:
											group:
												name_var:
													concat:
														name_var:
															variable:
																variable_names:typeName
														name_var:
															exact:
																WILD:!
														PLUS:+
														name_var:
															exact:
																WILD:Could not find type:
														PLUS:+
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Generator
											DOT:.
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableHeaderToken
									THROW:throw 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:== 
						conditional:
							IF:if
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:declaredListSet
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							NEW:new 
							parameters:
			inner:
				IN:>
			EQUALS:=
		NEWLINE:$\n
		SEMICOLON:;
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:declaredCritSet
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			EQUALS:=
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							parameters:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:HashSet
							NEW:new 
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			DOT:.
			NEWLINE:$\n
			class_declaration:
				FORSLASH:/
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:candidate
						body_element:
							body_return:
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:satisfies
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
				objectType:
					CLASS:class 
				className:
					variable_names:Target
				FORSLASH:/
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							body_return:
								SEMICOLON:;
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:satisfies
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Tile
								variableName:
									name_var:
										variable:
											variable_names:candidate
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
				NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			HID:<
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:TypeName
							variableName:
								name_var:
									exact:
										WILD:candidate
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:satisfies
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:false
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
			objectType:
				CLASS:class 
			className:
				variable_names:Criteria
			packageName:
				name_var:
					exact:
						WILD:misc
			templateTypeName:
				NAME:TypeName
			NEWLINE:$\n
			IN:>
			NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
		class_declaration:
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
												DOT:.
												group:
													name_var:
														exact:
															WILD:idMap
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Treasury
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:PaymentType
										ACCESS:->
							variableName:
								name_var:
									variable:
										variable_names:id
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getValue
														DOT:.
														group:
															name_var:
																exact:
																	WILD:idMap
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													BACKSLASH:\
													OPERATOR:+ 
										name_var:
											variable:
												variable_names:setValue
									DOT:.
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
										name_var:
											variable:
												variable_names:get
									group:
										name_var:
											exact:
												WILD:idMap
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:get
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		NEW:new 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
												DOT:.
										SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											exact:
												WILD:idMap
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
							conditional:
								IF:if
					body_element:
						body_return:
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										DOT:.
										DOT:.
										group:
											parameters:
											name_var:
												variable:
													variable_names:getValue
										group:
											name_var:
												exact:
													WILD:idMap
										group:
											name_var:
												variable:
													variable_names:get
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:id
							RETURN:return 
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:id
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Treasury
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:PaymentType
										ACCESS:->
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:paymentTypeDec
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:typeName
																				ACCESS:->
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:longForm
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
																				CAMEL:^
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				name_var:
																					exact:
																						WILD:shortForm
																				CAMEL:^
																				ACCESS:->
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeToken
												ACCESS:->
												name_var:
													exact:
														WILD:typeName
							conditional:
								IF:if
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:typeToken
							typeName:
								type_var:
									class:
										class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:shortForm
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:longForm
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:longForm
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
																				CAMEL:^
													name_var:
														exact:
															BACKSLASH:\
															variable_names:paymentTypeDec
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:overview
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					inline:
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:typeName
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:longForm
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:shortForm
							typeName:
								type_var:
									class:
										class_variable_names:String
						COMMA:,
					body_element:
						body_manipulate:
							class_declaration:
								objectType:
									CLASS:class 
								SEMICOLON:;
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:shortForm
										typeName:
											type_var:
												class:
													class_variable_names:String
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:getShortForm
										inline:
								variable_declaration:
									method_argument:
										body_statement:
											body_call:
												group:
													NEW:new 
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:PaymentType
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Treasury
																type_var:
																	class:
																		class_variable_names:Id
													parameters:
									static:
										STA:@
									EQUALS:=
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Treasury
												type_var:
													class:
														class_variable_names:PaymentType
												ACCESS:->
												type_var:
													class:
														class_variable_names:Id
												ACCESS:->
									variableName:
										name_var:
											variable:
												variable_names:id
								NEWLINE:$\n
								className:
									variable_names:typeName
								FORSLASH:/
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:String
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:longForm
												RETURN:return 
										inline:
										methodName:
											name_var:
												variable:
													variable_names:getLongForm
										body_element:
											NEWLINE:$\n
								NEWLINE:$\n
								FORSLASH:/
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:PaymentTypes
									ACCESS:->
									type_var:
										class:
											class_variable_names:Treasury
							methodName:
								ADD:+=
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:put
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:shortForm
											COMMA:,
									group:
										name_var:
											variable:
												variable_names:shortForms
									DOT:.
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:longForms
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:longForm
											COMMA:,
										name_var:
											variable:
												variable_names:put
							SEMICOLON:;
			class_declaration:
				className:
					variable_names:PaymentType
				NEWLINE:$\n
				class_declaration:
					FORSLASH:/
					objectType:
						CLASS:class 
					FORSLASH:/
					className:
						variable_names:Id
					NEWLINE:$\n
				objectType:
					CLASS:class 
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:longForm
					typeName:
						type_var:
							class:
								class_variable_names:String
				FORSLASH:/
				NEWLINE:$\n
				SEMICOLON:;
				SEMICOLON:;
				NEWLINE:$\n
				FORSLASH:/
				NEWLINE:$\n
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:String
					variableName:
						name_var:
							variable:
								variable_names:shortForm
			NEWLINE:$\n
			class_declaration:
				objectType:
					CLASS:class 
				FORSLASH:/
				FORSLASH:/
				NEWLINE:$\n
				className:
					variable_names:PaymentTypes
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					inline:
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Treasury
										type_var:
											class:
												class_variable_names:PaymentType
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
							variableName:
								name_var:
									variable:
										variable_names:id
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:amount
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		NEW:new 
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
													name_var:
														variable:
															variable_names:put
												DOT:.
												group:
													name_var:
														exact:
															WILD:idMap
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
										name_var:
											variable:
												variable_names:containsKey
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
										name_var:
											variable:
												variable_names:get
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:idMap
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getValue
															parameters:
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
													BACKSLASH:\
													OPERATOR:+ 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:amount
										name_var:
											variable:
												variable_names:setValue
									DOT:.
									group:
										name_var:
											exact:
												WILD:idMap
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:treasuries
			class_declaration:
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				method_declaration:
					methodDefinition:
						inline:
						methodName:
							name_var:
								variable:
									variable_names:isPlacable
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
								RETURN:return 
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
				DOT:.
				packageName:
					name_var:
						exact:
							WILD:treasuries
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:overview
				NEWLINE:$\n
				DOT:.
				method_declaration:
					methodDefinition:
						inline:
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
								RETURN:return 
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Placable
									type_var:
										class:
											class_variable_names:Menu
									ACCESS:->
						methodName:
							name_var:
								variable:
									variable_names:getPlacable
						body_element:
							NEWLINE:$\n
				className:
					variable_names:Reward
				objectType:
					CLASS:class 
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Id
														name_var:
															variable:
																variable_names:PaymentType
														name_var:
															variable:
																variable_names:Treasury
														ACCESS:->
								variableName:
									name_var:
										variable:
											variable_names:idClass
								typeName:
									CLASS_TYPE:Class 
								EQUALS:=
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:data
							typeName:
								type_var:
									class:
										class_variable_names:ParseContext
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					methodName:
						name_var:
							variable:
								variable_names:setup
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Treasury
							methodName:
								ADD:+=
							variable_declaration:
								EQUALS:=
								variableName:
									name_var:
										exact:
											WILD:idMap
								method_argument:
									body_statement:
										NEWLINE:$\n
										NEWLINE:$\n
										body_call:
											NEWLINE:$\n
											NEWLINE:$\n
											group:
												NEW:new 
												parameters:
												typeName:
													type_var:
														class:
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:idClass
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Int
																COMMA:,
															class_variable_names:HashMap
								typeName:
									type_var:
										class:
											class_variable_names:Map
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Int
												template_parameter:
													type_var:
														class:
															class_variable_names:idClass
												COMMA:,
								WEAK:~
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:overview
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						inline:
						methodName:
							name_var:
								variable:
									variable_names:getType
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Treasury
									ACCESS:->
									type_var:
										class:
											class_variable_names:PaymentType
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Reward
									ACCESS:->
									type_var:
										class:
											class_variable_names:Treasury
						methodName:
							name_var:
								variable:
									variable_names:getReward
						body_element:
							body_return:
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								RETURN:return 
						inline:
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				NEWLINE:$\n
				objectType:
					CLASS:class 
				packageName:
					name_var:
						exact:
							WILD:treasuries
				NEWLINE:$\n
				DOT:.
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						inline:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:isFree
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								RETURN:return 
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
				className:
					variable_names:Cost
				DOT:.
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:treasury
								typeName:
									type_var:
										class:
											class_variable_names:Treasury
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						body_element:
							body_conditional:
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:true
											RETURN:return 
									body_element:
										NEWLINE:$\n
								conditional:
									IF:if
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:isFree
											parameters:
						methodName:
							name_var:
								variable:
									variable_names:canPay
						body_element:
							body_conditional:
								conditional:
									ELSE:else
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:treasury
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getType
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:getAmount
													OPERATOR:>= 
											SEMICOLON:;
											RETURN:return 
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getAmount
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						inline:
						body_element:
							body_return:
								RETURN:return 
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1
						body_element:
							NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:typeNameToken
							typeName:
								type_var:
									class:
										class_variable_names:IToken
					typeName:
						type_var:
							class:
								class_variable_names:String
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getTypeName
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												ACCESS:->
												name_var:
													exact:
														WILD:item_names
												name_var:
													variable:
														variable_names:typeNameToken
							as_body:
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:typeNameToken
																name_var:
																	exact:
																		WILD:item_names
																CAMEL:^
																ACCESS:->
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:get
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:payment_long_type_names
																					name_var:
																						variable:
																							variable_names:typeNameToken
																					ACCESS:->
																					CAMEL:^
													group:
														name_var:
															variable:
																variable_names:longForms
													DOT:.
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
								ELSE:else
							body_statement:
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeNameToken
												name_var:
													exact:
														WILD:payment_long_type_names
												ACCESS:->
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
								body_element:
									NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:get
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:payment_short_type_names
																					name_var:
																						variable:
																							variable_names:typeNameToken
																					ACCESS:->
																					CAMEL:^
													DOT:.
													group:
														name_var:
															variable:
																variable_names:shortForms
										RETURN:return 
										SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeNameToken
												ACCESS:->
												name_var:
													exact:
														WILD:payment_short_type_names
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
			variable_declaration:
				typeName:
					type_var:
						class:
							template_parameters:
								COMMA:,
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								template_parameter:
									type_var:
										class:
											class_variable_names:String
							class_variable_names:Map
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											template_parameters:
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashMap
				variableName:
					name_var:
						variable:
							variable_names:longForms
				inner:
					IN:>
				EQUALS:=
			variable_declaration:
				EQUALS:=
				inner:
					IN:>
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
							class_variable_names:Map
				method_argument:
					body_statement:
						body_call:
							group:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashMap
								parameters:
								NEW:new 
				variableName:
					name_var:
						variable:
							variable_names:shortForms
			className:
				variable_names:Treasury
			NEWLINE:$\n
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				CLASS:class 
			NEWLINE:$\n
			class_declaration:
				objectType:
					ENUMERATION:enum 
				className:
					variable_names:Id
				FORSLASH:/
				FORSLASH:/
			NEWLINE:$\n
			className:
				variable_names:Event
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:events
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:cev
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:eventName
														CAMEL:^
								EQUALS:=
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:declaration
																			ACCESS:->
																			name_var:
																				exact:
																					WILD:eventName
								typeName:
									type_var:
										class:
											class_variable_names:String
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:eventName
					body_element:
						body_manipulate:
							class_declaration:
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:id
									EQUALS:=
									static:
										STA:@
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Event
												type_var:
													class:
														class_variable_names:Id
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														access:
															ACCESS:->
															ACCESS:->
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
															name_var:
																variable:
																	variable_names:Event
															name_var:
																variable:
																	variable_names:Id
								DOT:.
								SEMICOLON:;
								NEWLINE:$\n
								packageName:
									name_var:
										exact:
											WILD:events
								className:
									variable_names:cev
								NEWLINE:$\n
								parentName:
									type_var:
										class:
											class_variable_names:Event
								objectType:
									CLASS:class 
							type_var:
								class:
									class_variable_names:Events
							methodName:
								ADD:+=
					methodName:
						name_var:
							variable:
								variable_names:declaration
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:IToken
							variableName:
								name_var:
									variable:
										variable_names:declaration
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										exact:
											variable_names:cev
											BACKSLASH:\
									type_var:
										class:
											class_variable_names:Events
							class_declaration:
								packageName:
									name_var:
										exact:
											WILD:events
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								parentName:
									type_var:
										exact:
											variable_names:Object
											BACKSLASH:\
								DOT:.
								className:
									variable_names:Listener
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:listen
										inline:
											variable_declaration:
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Events
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:cev
															ACCESS:->
												variableName:
													name_var:
														variable:
															variable_names:event
										typeName:
											type_var:
												class:
													class_variable_names:void
								interfaceName:
									type_var:
										class:
											class_variable_names:Listenable
											template_parameters:
												template_parameter:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Events
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:cev
															SPECIAL_ACCESS:\>
								objectType:
									CLASS:class 
								NEWLINE:$\n
							methodName:
								ADD:+=
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:declaration
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										variableName:
											NAME:atom
										tokenInstance:
											body_element:
												body_manipulate:
													variable_declaration:
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								WILD:name
																						name_var:
																							variable:
																								variable_names:element
																						ACCESS:->
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																				name_var:
																					exact:
																						variable_names:getTypeName
																						BACKSLASH:\
													methodName:
														ADD:+=
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Events
															type_var:
																exact:
																	BACKSLASH:\
																	variable_names:cev
											tokenName:
												NAME:type_name
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											COLON::
										COLON::
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:parameter
								body_element:
									NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Event
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
							methodName:
								ADD:+=
							variable_declaration:
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:void
								method_argument:
									body_statement:
										NEWLINE:$\n
										body_call:
											NEWLINE:$\n
											group:
												name_var:
													variable:
														variable_names:null
								variableName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:eventName
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:add
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
									group:
										name_var:
											variable:
												variable_names:eventNameSet
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:events
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					inline:
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:eventName
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:method
							typeName:
								METHOD_TYPE:Method 
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:method
									DOT:.
									group:
										parameters:
											method_argument:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															exact:
																variable_names:eventName
																BACKSLASH:\
										name_var:
											variable:
												variable_names:addParameter
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:addParameter
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:eventNameSet
				method_argument:
					body_statement:
						body_call:
							group:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashSet
								NEW:new 
								parameters:
				inner:
					IN:>
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:Set
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
			DOT:.
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							OPERATOR:: 
							conditional:
								FOR:for
							as_body:
								body_element:
									body_conditional:
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	method_argument:
																		body_entries:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
										conditional:
											ELSE:else
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										as_body:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:addToEventMethod
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																				DOT:.
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
												DOT:.
										conditional:
											IF:if
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
					body_element:
						NEWLINE:$\n
					inline:
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:inputClass
							typeName:
								CLASS_TYPE:Class 
						variable_declaration:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
											template_parameter:
												BODY_TYPE:Body 
											COMMA:,
										class_variable_names:Map
							variableName:
								name_var:
									variable:
										variable_names:bodiesToAdd
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:addEventMethods
					body_element:
						NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				inner:
					IN:>
				variableName:
					name_var:
						variable:
							variable_names:variableDefs
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											class_variable_names:HashMap
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												template_parameter:
													type_var:
														class:
															class_variable_names:List
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Entry
												COMMA:,
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:List
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Entry
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
							class_variable_names:Map
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:inputClass
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newMethodName
											DOT:.
								typeName:
									METHOD_TYPE:Method 
								variableName:
									name_var:
										variable:
											variable_names:establishedMethod
								EQUALS:=
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
										group:
											name_var:
												variable:
													variable_names:establishedMethod
							RETURN:return 
							SEMICOLON:;
					inner:
						IN:>
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:newMethod
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:appendToBody
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:body
									group:
										name_var:
											variable:
												variable_names:establishedMethod
									DOT:.
					methodName:
						name_var:
							variable:
								variable_names:addToEventMethod
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						CONTEXT_TYPE:Context 
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								method_argument:
									method_declaration:
										methodDefinition:
											methodName:
												name_var:
													exact:
														WILD:on
											inline:
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Events
																type_var:
																	exact:
																		CAMEL:^
																		BACKSLASH:\
																		variable_names:eName
																ACCESS:->
											typeName:
												type_var:
													class:
														class_variable_names:void
								EQUALS:=
								typeName:
									METHOD_TYPE:Method 
								variableName:
									name_var:
										variable:
											variable_names:newMethod
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								body_call:
									group:
										name_var:
											variable:
												variable_names:inputClass
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
										name_var:
											variable:
												variable_names:getMethod
									DOT:.
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										methodName:
											ADD:+=
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:List
														type_var:
															class:
																class_variable_names:Listenable
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:List
																		type_var:
																			class:
																				class_variable_names:Listenable
															NEW:new 
															parameters:
														NEWLINE:$\n
													NEWLINE:$\n
											EQUALS:=
											variableName:
												name_var:
													concat:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
														PLUS:+
														name_var:
															exact:
																WILD:Listeners
											WEAK:~
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:void
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																	name_var:
																		variable:
																			variable_names:add
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:Listeners
																			PLUS:+
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
												methodName:
													name_var:
														exact:
															WILD:add
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:newListener
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Events
																	type_var:
																		class:
																			class_variable_names:Listener
																	ACCESS:->
																	type_var:
																		exact:
																			CAMEL:^
																			BACKSLASH:\
																			variable_names:eName
																	ACCESS:->
										type_var:
											class:
												class_variable_names:inputClass
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:createList
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		exact:
																			CAMEL:^
																			BACKSLASH:\
																			variable_names:eName
																	type_var:
																		class:
																			class_variable_names:Events
														variableName:
															name_var:
																exact:
																	WILD:event
												methodName:
													name_var:
														exact:
															WILD:on
												typeName:
													type_var:
														class:
															class_variable_names:void
										methodName:
											ADD:+=
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:body
							typeName:
								BODY_TYPE:Body 
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:inputClass
							typeName:
								CLASS_TYPE:Class 
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:eName
			NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:addEventMethodsExclusive
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Map
										template_parameters:
											COMMA:,
											template_parameter:
												type_var:
													class:
														class_variable_names:String
											template_parameter:
												BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:bodiesToAdd
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							conditional:
								FOR:for
							as_body:
								body_element:
									body_conditional:
										conditional:
											IF:if
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												DOT:.
										as_body:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							OPERATOR:: 
					inner:
						IN:>
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														exact:
															WILD:add
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
																			PLUS:+
																			name_var:
																				exact:
																					WILD:Listeners
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																	name_var:
																		variable:
																			variable_names:add
														SEMICOLON:;
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	type_var:
																		exact:
																			variable_names:eName
																			CAMEL:^
																			BACKSLASH:\
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Events
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Listener
														variableName:
															name_var:
																exact:
																	WILD:newListener
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:void
										methodName:
											ADD:+=
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
													name_var:
														exact:
															BACKSLASH:\
															variable_names:createList
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										variable_declaration:
											WEAK:~
											variableName:
												name_var:
													concat:
														PLUS:+
														name_var:
															exact:
																WILD:Listeners
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:List
														type_var:
															class:
																class_variable_names:Listenable
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														NEWLINE:$\n
														group:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Listenable
																		type_var:
																			class:
																				class_variable_names:List
																		ACCESS:->
															NEW:new 
															parameters:
													NEWLINE:$\n
										methodName:
											ADD:+=
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														exact:
															WILD:on
												typeName:
													type_var:
														class:
															class_variable_names:void
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:event
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Events
																	ACCESS:->
																	type_var:
																		exact:
																			BACKSLASH:\
																			variable_names:eName
																			CAMEL:^
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:inputClass
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
										name_var:
											variable:
												variable_names:getMethod
									DOT:.
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getEventContext
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:inputClass
										DOT:.
										group:
											parameters:
											name_var:
												variable:
													variable_names:getContext
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:newMethodName
											name_var:
												variable:
													variable_names:getMethod
										DOT:.
					typeName:
						CONTEXT_TYPE:Context 
					body_element:
						body_line:
							variable_declaration:
								typeName:
									METHOD_TYPE:Method 
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:newMethod
								method_argument:
									method_declaration:
										methodDefinition:
											typeName:
												type_var:
													class:
														class_variable_names:void
											methodName:
												name_var:
													exact:
														WILD:on
											inline:
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Events
																ACCESS:->
																type_var:
																	exact:
																		variable_names:eName
																		BACKSLASH:\
																		CAMEL:^
							SEMICOLON:;
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:eName
						COMMA:,
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
								typeName:
									type_var:
										class:
											class_variable_names:String
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:newMethod
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			className:
				variable_names:Events
			NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		methodName:
			name_var:
				variable:
					variable_names:importAny
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ASPECT
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								tokenName:
									NAME:aspect_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Aspects
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_aspects
							COLON::
				variableName:
					NAME:import_aspects
				name_var:
					variable:
						variable_names:import_any
		body_element:
			body_manipulate:
				variableName:
					NAME:import_supports
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_SUPPORT
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Supports
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								tokenName:
									NAME:support_declaration
								COLON::
							name_var:
								variable:
									variable_names:import_supports
							variableName:
								NAME:element
							COLON::
				COLON::
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:import_any
				typeName:
					type_var:
						class:
							class_variable_names:IToken
		body_element:
			body_manipulate:
				variableName:
					NAME:import_activities
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ACTIVITY
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								tokenName:
									NAME:activity_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Activities
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_activities
							variableName:
								NAME:element
							COLON::
					COLON::
				COLON::
				name_var:
					variable:
						variable_names:import_any
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ITEM
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_items
							tokenInstance:
								tokenName:
									NAME:import_any
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														exact:
															BACKSLASH:\
															variable_names:importAny
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							COLON::
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Items
										SEMICOLON:;
								COLON::
								tokenName:
									NAME:item_declaration
							name_var:
								variable:
									variable_names:import_items
					COLON::
				COLON::
				variableName:
					NAME:import_items
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				variableName:
					NAME:import_quests
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_quests
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Quests
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:typeDeclaration
												DOT:.
										SEMICOLON:;
								tokenName:
									NAME:quest_declaration
								COLON::
								body_element:
									NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_QUEST
				name_var:
					variable:
						variable_names:import_any
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Relationship
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:reason_declaration
							COLON::
							name_var:
								variable:
									variable_names:import_reason
							variableName:
								NAME:element
					COLON::
					tokenName:
						NAME:IMPORT_REASON
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_reason
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_affinities
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_affinities
							COLON::
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Affinities
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:affinity_declaration
								COLON::
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
					tokenName:
						NAME:IMPORT_AFFINITY
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				variableName:
					NAME:import_events
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:event_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Events
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							COLON::
							name_var:
								variable:
									variable_names:import_events
					COLON::
					tokenName:
						NAME:IMPORT_EVENT
				COLON::
				name_var:
					variable:
						variable_names:import_any
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					tokenName:
						NAME:IMPORT_TRAIT
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_traits
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								tokenName:
									NAME:trait_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Traits
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
				variableName:
					NAME:import_traits
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							COLON::
							name_var:
								variable:
									variable_names:import_skills
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:skill_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Skills
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
					tokenName:
						NAME:IMPORT_SKILL
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_skills
				COLON::
				name_var:
					variable:
						variable_names:import_any
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_PAYMENT_TYPE
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:payment_type_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:paymentTypeDec
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Treasury
										SEMICOLON:;
							name_var:
								variable:
									variable_names:import_payment_types
							variableName:
								NAME:element
							COLON::
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_payment_types
		body_element:
			body_manipulate:
				variableName:
					NAME:import_conditions
				COLON::
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							name_var:
								variable:
									variable_names:import_conditions
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:condition_declaration
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Conditions
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_CONDITION
					COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_map
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_MAP
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:Environment
									group:
										name_var:
											variable:
												variable_names:declaration
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:import_map
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_association
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					tokenName:
						NAME:IMPORT_ASSOCIATION
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_association
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:association_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Associations
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
										SEMICOLON:;
								COLON::
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			body_manipulate:
				variableName:
					NAME:import_attacks
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ATTACK
					COLON::
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_attacks
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Attacks
										SEMICOLON:;
								tokenName:
									NAME:attack_declaration
							variableName:
								NAME:element
							COLON::
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:Listnames
			SEMICOLON:;
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:lists
						BACKSLASH:\
		anonymous_class:
			className:
				NAME:Math
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:generation
						BACKSLASH:\
			DOT:.
			HID:<
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			className:
				NAME:ListEntry
		anonymous_class:
			className:
				NAME:HashMap
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
		SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			HID:<
			DOT:.
			className:
				NAME:IParser
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			SEMICOLON:;
		anonymous_class:
			COLON::
			DOT:.
			SEMICOLON:;
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:List
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:GeneralTokens
						group:
							name_var:
								variable:
									variable_names:NAME
			EQUALS:=
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:lazyNameParser
			typeName:
				type_var:
					class:
						class_variable_names:RegexParser
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			HID:<
			DOT:.
			className:
				NAME:Map
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			className:
				NAME:Iterator
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			SEMICOLON:;
			className:
				NAME:ParseContext
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			COLON::
		anonymous_class:
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
			COLON::
			className:
				NAME:Runnable
		anonymous_class:
			DOT:.
			SEMICOLON:;
			HID:<
			className:
				NAME:Collections
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:generation
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			className:
				NAME:Entry
			HID:<
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			HID:<
			className:
				NAME:TreeSet
			SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			DOT:.
			SEMICOLON:;
			DOT:.
			className:
				NAME:RegexParser
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
		variable_declaration:
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:listnames
			EQUALS:=
			typeName:
				type_var:
					class:
						class_variable_names:List
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Listnames
						group:
							name_var:
								variable:
									variable_names:parser
						DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
			HID:<
			className:
				NAME:ArrayList
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			COLON::
			DOT:.
		NEWLINE:$\n
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:IParser
			variableName:
				name_var:
					variable:
						variable_names:rootParser
			inner:
				IN:>
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:base
						group:
							name_var:
								variable:
									variable_names:Rules
						DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			className:
				NAME:LinkedList
			DOT:.
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		anonymous_class:
			className:
				NAME:Rules
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lists
			HID:<
			COLON::
		anonymous_class:
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:io
			COLON::
			SEMICOLON:;
			className:
				NAME:File
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			HID:<
			className:
				NAME:Iterable
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			DOT:.
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			HID:<
			COLON::
			className:
				NAME:Thread
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			DOT:.
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:generation
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			className:
				NAME:Generator
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:Comparable
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			COLON::
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			COLON::
			HID:<
			className:
				NAME:Scanner
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:Graphics
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:awt
						BACKSLASH:\
			HID:<
			SEMICOLON:;
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Rules
						group:
							name_var:
								variable:
									variable_names:parser
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:rules
			typeName:
				type_var:
					class:
						class_variable_names:List
			EQUALS:=
		anonymous_class:
			SEMICOLON:;
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			className:
				NAME:HashSet
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			className:
				NAME:Collection
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
			SEMICOLON:;
			HID:<
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			SEMICOLON:;
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:javax
						BACKSLASH:\
			DOT:.
			className:
				NAME:JFrame
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:swing
		SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			className:
				NAME:Iterator
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			HID:<
		NEWLINE:$\n
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:com.rem.qstnr
			inner:
				IN:>
			EQUALS:=
			typeName:
				type_var:
					class:
						class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:packageName
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			DOT:.
			className:
				NAME:Comparator
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			COLON::
			SEMICOLON:;
			DOT:.
			HID:<
			className:
				NAME:Arrays
		NEWLINE:$\n
		anonymous_class:
			COLON::
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:token
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			DOT:.
			className:
				NAME:IToken
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			COLON::
			className:
				NAME:StringBuilder
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:lang
						BACKSLASH:\
			HID:<
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			SEMICOLON:;
			className:
				NAME:GeneralTokens
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lists
			COLON::
		anonymous_class:
			DOT:.
			HID:<
			SEMICOLON:;
			className:
				NAME:Set
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
method_declaration:
	methodDefinition:
		methodName:
			name_var:
				variable:
					variable_names:getTypeName
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:IToken
				variableName:
					name_var:
						variable:
							variable_names:nameToken
		body_element:
			body_line:
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:isFirst
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:true
					EQUALS:=
					WEAK:~
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:String
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										variable_assignment:
											EQUALS:=
											name_var:
												variable:
													variable_names:isFirst
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								ELSE:else
					COLON::
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	CAMEL:^
																	variable_names:element
										name_var:
											variable:
												variable_names:append
									group:
										name_var:
											variable:
												variable_names:nameBuilder
									DOT:.
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:==
								body_call:
									group:
										name_var:
											variable:
												variable_names:isFirst
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:nameBuilder
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:typeName
				COLON::
				name_var:
					variable:
						variable_names:nameToken
				variableName:
					NAME:element
		body_element:
			body_return:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
				SEMICOLON:;
				RETURN:return 
		body_element:
			body_line:
				variable_declaration:
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									NEW:new 
									typeName:
										type_var:
											class:
												class_variable_names:StringBuilder
									parameters:
					variableName:
						name_var:
							variable:
								variable_names:nameBuilder
					typeName:
						type_var:
							class:
								class_variable_names:StringBuilder
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
anonymous_class:
	className:
		NAME:HeroStats
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	COLON::
	HID:<
	SEMICOLON:;
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				class_declaration:
					DOT:.
					className:
						variable_names:EntryPoints
					packageName:
						name_var:
							exact:
								WILD:environments
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					objectType:
						CLASS:class 
				NEWLINE:$\n
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				class_declaration:
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					class_declaration:
						NEWLINE:$\n
						objectType:
							INTERFACE:interface 
						NEWLINE:$\n
						FORSLASH:/
						className:
							variable_names:Factory
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:create
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								inline:
						FORSLASH:/
					NEWLINE:$\n
					SEMICOLON:;
					DOT:.
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Activity
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getId
							inline:
							body_element:
								NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						EQUALS:=
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:failed
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:hasExplored
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:exploredAreas
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:area
													name_var:
														variable:
															variable_names:contains
												DOT:.
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:area
									typeName:
										type_var:
											class:
												class_variable_names:Area
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													exact:
														BACKSLASH:\
														variable_names:Idle
												type_var:
													class:
														class_variable_names:Events
									variableName:
										name_var:
											variable:
												variable_names:event
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
										name_var:
											variable:
												variable_names:failed
										EQUALS:=
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
													group:
														name_var:
															variable:
																variable_names:getEntitiesWithin
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:20f
													group:
														name_var:
															variable:
																variable_names:event
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getLocation
														parameters:
													DOT:.
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:List
													ACCESS:->
													type_var:
														class:
															class_variable_names:Entity
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:entitiesToTarget
									SEMICOLON:;
							body_element:
								body_conditional:
									conditional:
										FOR:for
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												variable:
													variable_names:candidate
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:entitiesToTarget
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												OPERATOR:: 
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:satisfies
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:candidate
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getTargetCriteria
																		parameters:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:usable
															as_body:
																body_element:
																	body_line:
																		SEMICOLON:;
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:getHost
																					parameters:
																				DOT:.
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										NEW:new 
																										typeName:
																											type_var:
																												access_multi:
																													type_var:
																														exact:
																															variable_names:ChasingEntity
																															BACKSLASH:\
																													type_var:
																														class:
																															class_variable_names:Activities
																													ACCESS:->
																										parameters:
																											COMMA:,
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:usable
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:event
																																			DOT:.
																																			group:
																																				parameters:
																																				name_var:
																																					variable:
																																						variable_names:getHost
																															name_var:
																																variable:
																																	variable_names:getRange
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	NAME:
																																		NUMBER:25
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:candidate
																											COMMA:,
																					name_var:
																						variable:
																							variable_names:start
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:event
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_return:
																		RETURN:return 
																		SEMICOLON:;
																		VOID:void
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
															parameters:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
												conditional:
													FOR:for
									OPERATOR:: 
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:failed
									RETURN:return 
									SEMICOLON:;
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:hasFailed
					SEMICOLON:;
					NEWLINE:$\n
					SEMICOLON:;
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Set
									template_parameters:
										template_parameter:
											type_var:
												access_multi:
													SPECIAL_ACCESS:\>
													type_var:
														class:
															class_variable_names:Tiles
													type_var:
														class:
															class_variable_names:EntryPoint
						variableName:
							name_var:
								variable:
									variable_names:exploredPoints
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																access_multi:
																	SPECIAL_ACCESS:\>
																	type_var:
																		class:
																			class_variable_names:Tiles
																	type_var:
																		class:
																			class_variable_names:EntryPoint
													class_variable_names:HashSet
										NEW:new 
										parameters:
					packageName:
						name_var:
							exact:
								WILD:activities
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Tile
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getDestination
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									conditional:
										ELSE:else
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:Fail
																									BACKSLASH:\
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:host
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
															name_var:
																variable:
																	variable_names:stop
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:hasFailed
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:isIdle
															parameters:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:host
												conditional:
													IF:if
												as_body:
													body_element:
														body_conditional:
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							variable_names:on
																							BACKSLASH:\
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:this
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:host
																											COMMA:,
																										typeName:
																											type_var:
																												access_multi:
																													type_var:
																														class:
																															class_variable_names:Events
																													type_var:
																														exact:
																															BACKSLASH:\
																															variable_names:Idle
																													ACCESS:->
																										NEW:new 
																		SEMICOLON:;
																body_element:
																	NEWLINE:$\n
															conditional:
																IF:if
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:step
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:false
																OPERATOR:==
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:false
																OPERATOR:&& 
																OPERATOR:== 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:failed
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getHost
													group:
														name_var:
															variable:
																variable_names:event
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										variableName:
											name_var:
												variable:
													variable_names:host
										EQUALS:=
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Events
												ACCESS:->
												type_var:
													exact:
														variable_names:Tick
														BACKSLASH:\
									variableName:
										name_var:
											variable:
												variable_names:event
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:Success
																							type_var:
																								class:
																									class_variable_names:Events
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
												SEMICOLON:;
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:host
														group:
															name_var:
																variable:
																	variable_names:stop
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
												name_var:
													exact:
														BACKSLASH:\
														variable_names:hasSucceeded
									conditional:
										IF:if
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:step
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:getFocusSkill
											group:
												name_var:
													variable:
														variable_names:host
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:|| 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:this
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
												name_var:
													variable:
														variable_names:use
											DOT:.
											DOT:.
											group:
												name_var:
													variable:
														variable_names:host
											group:
												name_var:
													variable:
														variable_names:getFocusSkill
												parameters:
										OPERATOR:==
										OPERATOR:|| 
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
												parameters:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getFocusSkill
																group:
																	name_var:
																		variable:
																			variable_names:host
																DOT:.
												name_var:
													variable:
														variable_names:contains
										OPERATOR:== 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													FOR:for
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:getUsables
															parameters:
												as_body:
													body_element:
														body_conditional:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	group:
																		name_var:
																			variable:
																				variable_names:use
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:this
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																	DOT:.
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:getFocusSkill
																		parameters:
																	group:
																		name_var:
																			variable:
																				variable_names:host
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																OPERATOR:!=
																OPERATOR:&& 
															conditional:
																IF:if
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_return:
																		SEMICOLON:;
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:true
																		RETURN:return 
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
												OPERATOR:: 
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
					NEWLINE:$\n
					class_declaration:
						objectType:
							CLASS:class 
						class_declaration:
							variable_declaration:
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								variableName:
									name_var:
										variable:
											variable_names:host
							SEMICOLON:;
							method_declaration:
								methodDefinition:
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:event
														name_var:
															variable:
																variable_names:on
													DOT:.
													group:
														name_var:
															variable:
																variable_names:host
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										NEWLINE:$\n
									inline:
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:event
											typeName:
												type_var:
													access_multi:
														type_var:
															exact:
																BACKSLASH:\
																variable_names:Fail
														ACCESS:->
														type_var:
															class:
																class_variable_names:Events
							FORSLASH:/
							NEWLINE:$\n
							NEWLINE:$\n
							FORSLASH:/
							className:
								variable_names:Fail
							parentName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Events
										type_var:
											exact:
												variable_names:Fail
												BACKSLASH:\
										ACCESS:->
										ACCESS:->
							NEWLINE:$\n
							objectType:
								CLASS:class 
						FORSLASH:/
						className:
							variable_names:Listeners
						NEWLINE:$\n
						NEWLINE:$\n
						FORSLASH:/
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newUsable
									typeName:
										type_var:
											class:
												class_variable_names:Usable
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:remove
					objectType:
						CLASS:class 
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newUsable
									typeName:
										type_var:
											class:
												class_variable_names:Usable
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:add
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Activity
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Target
												type_var:
													class:
														class_variable_names:Criteria
									variableName:
										name_var:
											variable:
												variable_names:targetCriteria
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:host
												group:
													name_var:
														variable:
															variable_names:getLocation
													parameters:
												DOT:.
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:targetCriteria
													name_var:
														variable:
															variable_names:getClosestEntity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getTarget
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getUsables
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:List
										ACCESS:->
										type_var:
											class:
												class_variable_names:Usable
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							inline:
					NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Entity
						variableName:
							name_var:
								variable:
									variable_names:targetEntity
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						WEAK:~
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:name
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Tiles
												ACCESS:->
												type_var:
													class:
														class_variable_names:EntryPoint
									variableName:
										name_var:
											variable:
												variable_names:point
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:point
											group:
												name_var:
													variable:
														variable_names:exploredPoints
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:rememberEntryPoint
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					class_declaration:
						objectType:
							CLASS:class 
						FORSLASH:/
						FORSLASH:/
						NEWLINE:$\n
						className:
							variable_names:Id
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:explore
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:exploredAreas
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newArea
											DOT:.
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newArea
									typeName:
										type_var:
											class:
												class_variable_names:Area
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:listen
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Event
												ACCESS:->
												type_var:
													class:
														class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:event
							body_element:
								NEWLINE:$\n
					variable_declaration:
						WEAK:~
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:description
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:exploredAreas
						method_argument:
							body_statement:
								body_call:
									group:
										NEW:new 
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Area
													class_variable_names:HashSet
										parameters:
						WEAK:~
						EQUALS:=
						typeName:
							type_var:
								class:
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:Area
									class_variable_names:Set
					variable_declaration:
						EQUALS:=
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Tiles
									ACCESS:->
									type_var:
										class:
											class_variable_names:MonsterDen
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:targetDen
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:hasSucceeded
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:hasTarget
							inline:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											OPERATOR:!= 
											body_call:
												group:
													name_var:
														variable:
															variable_names:targetEntity
											OPERATOR:|| 
											body_call:
												group:
													name_var:
														variable:
															variable_names:targetDen
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											OPERATOR:!= 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:pick
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:Range
															group:
																name_var:
																	variable:
																		variable_names:select
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getUsables
															DOT:.
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:isEmpty
											DOT:.
											group:
												parameters:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:true
													EQUALS:=
													name_var:
														variable:
															variable_names:failed
												SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:Usable
							inline:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:setHost
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newHost
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
				NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:load
													method_argument:
														body_entries:
													COMMA:,
											DOT:.
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_entries:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													method_argument:
														body_entries:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:idle
													COMMA:,
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
											group:
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:success
													method_argument:
														body_entries:
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
									SEMICOLON:;
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:entities
					packageName:
						name_var:
							exact:
								WILD:activities
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Activities
					DOT:.
					method_declaration:
						methodDefinition:
							static:
								STA:@
							typeName:
								type_var:
									class:
										class_variable_names:Activity
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:activityName
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:description
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:description
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Activities
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
												methodName:
													ADD:+=
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getDestination
														inline:
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
																variableName:
																	name_var:
																		variable:
																			variable_names:host
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:getDestination
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													EQUALS:=
													method_argument:
														body_statement:
															OPERATOR:->*
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:getDestination[Entity]
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:getContext
																	parameters:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:Activities
																			ACCESS:->
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
																			ACCESS:->
													typeName:
														CONTEXT_TYPE:Context 
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:getDestination[Entity]
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
																		name_var:
																			variable:
																				variable_names:appendToBody
																OPERATOR:->*
															SEMICOLON:;
													tokenName:
														NAME:body_element
													COLON::
													body_element:
														NEWLINE:$\n
												COLON::
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																								name_var:
																									variable:
																										variable_names:Activities
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:variable_header
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:element
																	name_var:
																		exact:
																			variable_names:addVariableHeader
																			BACKSLASH:\
													typeName:
														VARIABLE_TYPE:Variable 
													variableName:
														name_var:
															variable:
																variable_names:variable
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:variable_declaration
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
															name_var:
																variable:
																	variable_names:setIsWeak
														group:
															name_var:
																variable:
																	variable_names:variable
														DOT:.
												SEMICOLON:;
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:variable
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									variable_names:getStatement
																									BACKSLASH:\
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getContext
																												parameters:
																											group:
																												name_var:
																													access:
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:activityName
																														ACCESS:->
																														name_var:
																															variable:
																																variable_names:Activities
																											DOT:.
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:statement
																														name_var:
																															variable:
																																variable_names:element
																		name_var:
																			variable:
																				variable_names:setAssignment
																	DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	ACCESS:->
																	name_var:
																		exact:
																			WILD:statement
																	name_var:
																		variable:
																			variable_names:element
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																CAMEL:^
																name_var:
																	exact:
																		WILD:activityName
																name_var:
																	variable:
																		variable_names:declarationToken
																ACCESS:->
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:activityName
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													variable:
														variable_names:Activities
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Activities
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:activityName
																											ACCESS:->
																				RETURN:return 
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:activityName
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																				name_var:
																					variable:
																						variable_names:equals
															body_element:
																NEWLINE:$\n
											group:
												name_var:
													exact:
														WILD:create
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												name_var:
													variable:
														variable_names:declarationToken
												variableName:
													NAME:element
												tokenInstance:
													body_element:
														body_manipulate:
															methodName:
																ADD:+=
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:activityName
																	type_var:
																		class:
																			class_variable_names:Activities
															method_declaration:
																methodDefinition:
																	inline:
																		variable_declaration:
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Entity
																			variableName:
																				name_var:
																					variable:
																						variable_names:host
																		variable_declaration:
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							class:
																								class_variable_names:Entity
																						type_var:
																							class:
																								class_variable_names:Event
																						ACCESS:->
																			variableName:
																				name_var:
																					variable:
																						variable_names:event
																		COMMA:,
																	typeName:
																		type_var:
																			class:
																				class_variable_names:void
																	methodName:
																		name_var:
																			variable:
																				variable_names:listen
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	CONTEXT_TYPE:Context 
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:listenContext
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:listen
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
													COLON::
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElements
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:element
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:listenContext
																								COMMA:,
																		name_var:
																			variable:
																				variable_names:appendToBody
																	group:
																		name_var:
																			exact:
																				WILD:listen
																	DOT:.
													tokenName:
														NAME:listen
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:listen
														name_var:
															variable:
																variable_names:declarationToken
														ACCESS:->
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:className
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:toLowerCase
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															variable:
																variable_names:variableName
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Entity
													OPERATOR:->*
													body_call:
														group:
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:Activities
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:allUsables
																						group:
																							name_var:
																								variable:
																									variable_names:add
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													as_string:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:variableName
																						DOT:.
																		body_element:
																			NEWLINE:$\n
															name_var:
																variable:
																	variable_names:appendToBody
														DOT:.
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:element
																			PLUS:+
																			PLUS:+
																			name_var:
																				exact:
																					WILD:,Source]
																			name_var:
																				exact:
																					WILD:gain[
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:methodName
										body_element:
											NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													ELSE:else
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasFailed[Entity]
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																			DOT:.
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																		OPERATOR:->*
																EQUALS:=
																typeName:
																	CONTEXT_TYPE:Context 
																variableName:
																	name_var:
																		variable:
																			variable_names:failContext
															SEMICOLON:;
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Activities
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				ACCESS:->
																OPERATOR:->*
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:failContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						name_var:
																																							variable:
																																								variable_names:element
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																										RETURN:return 
																										SEMICOLON:;
																	group:
																		name_var:
																			exact:
																				WILD:hasFailed[Entity]
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:successContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:element
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										SEMICOLON:;
																										RETURN:return 
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																								body_element:
																									NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:hasSucceeded[Entity]
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																OPERATOR:->*
															SEMICOLON:;
													body_element:
														body_line:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:successContext
																typeName:
																	CONTEXT_TYPE:Context 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:hasSucceeded[Entity]
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																		OPERATOR:->*
																EQUALS:=
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	ACCESS:->
																	name_var:
																		variable:
																			variable_names:element
																	name_var:
																		exact:
																			WILD:SUCCEED
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
										tokenName:
											NAME:endState
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:variable_header
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:addVariableHeader
																	BACKSLASH:\
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																COMMA:,
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															exact:
																WILD:step
														name_var:
															variable:
																variable_names:declarationToken
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												tokenInstance:
													body_element:
														body_line:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:stepContext
																method_argument:
																	body_statement:
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																		body_call:
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:step
																EQUALS:=
																typeName:
																	CONTEXT_TYPE:Context 
															SEMICOLON:;
													tokenName:
														NAME:step
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_manipulate:
															type_var:
																access_multi:
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:activityName
																	type_var:
																		class:
																			class_variable_names:Activities
																	ACCESS:->
															method_declaration:
																methodDefinition:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:Boolean
																	inline:
																		variable_declaration:
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Entity
																			variableName:
																				name_var:
																					variable:
																						variable_names:host
																	methodName:
																		name_var:
																			variable:
																				variable_names:step
															methodName:
																ADD:+=
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:step
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:element
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:stepContext
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElements
												name_var:
													variable:
														variable_names:declarationToken
												COLON::
												variableName:
													NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
														ACCESS:->
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	RETURN:return 
																	SEMICOLON:;
												name_var:
													variable:
														variable_names:appendToBody
											group:
												name_var:
													exact:
														WILD:hasSucceeded[Entity]
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										objectType:
											CLASS:class 
										NEWLINE:$\n
										SEMICOLON:;
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:host
												methodName:
													name_var:
														variable:
															variable_names:hasFailed
										NEWLINE:$\n
										SEMICOLON:;
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										variable_declaration:
											EQUALS:=
											static:
												STA:@
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
																		type_var:
																			class:
																				class_variable_names:Activity
											variableName:
												name_var:
													variable:
														variable_names:id
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Activity
														ACCESS:->
										variable_declaration:
											EQUALS:=
											variableName:
												name_var:
													variable:
														variable_names:allUsables
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Usable
														type_var:
															class:
																class_variable_names:List
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:List
																		type_var:
																			class:
																				class_variable_names:Usable
															parameters:
											static:
												STA:@
										NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												inline:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getDescription
										variable_declaration:
											WEAK:~
											EQUALS:=
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											variableName:
												name_var:
													variable:
														variable_names:host
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
										method_declaration:
											methodDefinition:
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activityName
														SEMICOLON:;
												typeName:
													type_var:
														class:
															class_variable_names:String
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Activity
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:allUsables
														RETURN:return 
												methodName:
													name_var:
														variable:
															variable_names:getUsables
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:List
															type_var:
																class:
																	class_variable_names:Usable
															ACCESS:->
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														RETURN:return 
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getId
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Id
															type_var:
																class:
																	class_variable_names:Activity
												inline:
										className:
											variable_names:activityName
										SEMICOLON:;
										FORSLASH:/
										method_declaration:
											methodDefinition:
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:host
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:hasSucceeded
												body_element:
													NEWLINE:$\n
									type_var:
										class:
											class_variable_names:Activities
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:getTarget
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getContext
																group:
																	name_var:
																		exact:
																			WILD:getTarget[Entity,EntityCriteria]
																DOT:.
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
																			name_var:
																				variable:
																					variable_names:Activities
																			ACCESS:->
																			ACCESS:->
															OPERATOR:->*
													typeName:
														CONTEXT_TYPE:Context 
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getTarget
														inline:
															variable_declaration:
																typeName:
																	type_var:
																		access_multi:
																			ACCESS:->
																			type_var:
																				class:
																					class_variable_names:Criteria
																			type_var:
																				class:
																					class_variable_names:Target
																variableName:
																	name_var:
																		variable:
																			variable_names:targetCriteria
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
																variableName:
																	name_var:
																		variable:
																			variable_names:host
															COMMA:,
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Activities
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
										body_element:
											body_manipulate:
												COLON::
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:body_element
													COLON::
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:getTarget[Entity,EntityCriteria]
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								COMMA:,
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																		name_var:
																			variable:
																				variable_names:appendToBody
															SEMICOLON:;
												name_var:
													variable:
														variable_names:element
									COLON::
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	SEMICOLON:;
																	RETURN:return 
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
												name_var:
													variable:
														variable_names:appendToBody
											DOT:.
											group:
												name_var:
													exact:
														WILD:hasFailed[Entity]
									SEMICOLON:;
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										tokenName:
											NAME:event
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												variable:
																													variable_names:element
																											name_var:
																												exact:
																													WILD:event_names
																											ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventContext
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBodyElements
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
																COMMA:,
														DOT:.
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Events
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:getEventContext
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													name_var:
																														variable:
																															variable_names:element
																													ACCESS:->
																													name_var:
																														exact:
																															WILD:event_names
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:Activities
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
												SEMICOLON:;
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									COLON::
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:behaviours
				NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:entities
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:UNSTARTED
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						EQUALS:=
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:user
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getRange
					DOT:.
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:SUCCESS
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
						static:
							STA:@
					SEMICOLON:;
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:status
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:UNSTARTED
						EQUALS:=
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:quests
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					parentName:
						type_var:
							class:
								class_variable_names:Object
					DOT:.
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:activities
						method_argument:
							body_statement:
								body_call:
									group:
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:List
													ACCESS:->
													type_var:
														class:
															class_variable_names:Activity
										NEW:new 
										parameters:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Activity
									type_var:
										class:
											class_variable_names:List
						WEAK:~
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newActivity
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					exact:
																						BACKSLASH:\
																						variable_names:Success
																				type_var:
																					class:
																						class_variable_names:Listeners
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Quest
																	NEW:new 
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					DOT:.
																					group:
																						parameters:
																						name_var:
																							variable:
																								variable_names:size
																					group:
																						name_var:
																							variable:
																								variable_names:activities
											DOT:.
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:add
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newActivity
												name_var:
													variable:
														variable_names:add
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newActivity
									typeName:
										type_var:
											class:
												class_variable_names:Activity
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Listeners
																				ACCESS:->
																				type_var:
																					exact:
																						BACKSLASH:\
																						variable_names:Fail
																				type_var:
																					class:
																						class_variable_names:Quest
																				ACCESS:->
											group:
												name_var:
													variable:
														variable_names:newActivity
											DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:status
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:SUCCESS
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									variableName:
										name_var:
											variable:
												variable_names:newIndex
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:advanceTo
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:< 
										body_call:
											group:
												name_var:
													variable:
														variable_names:size
												parameters:
											group:
												name_var:
													variable:
														variable_names:activities
											DOT:.
										body_call:
											group:
												name_var:
													variable:
														variable_names:newIndex
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:currentActivityIndex
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newIndex
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													name_var:
														variable:
															variable_names:currentActivity
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:newIndex
																	name_var:
																		variable:
																			variable_names:get
																group:
																	name_var:
																		variable:
																			variable_names:activities
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					SEMICOLON:;
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Quest
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						static:
							STA:@
						variableName:
							name_var:
								variable:
									variable_names:IN_PROGRESS
						EQUALS:=
					SEMICOLON:;
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:2
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:FAIL
					variable_declaration:
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:currentActivityIndex
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:canChase
							body_element:
								NEWLINE:$\n
							inline:
					NEWLINE:$\n
					class_declaration:
						NEWLINE:$\n
						class_declaration:
							SEMICOLON:;
							NEWLINE:$\n
							SEMICOLON:;
							objectType:
								CLASS:class 
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Success
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
							NEWLINE:$\n
							FORSLASH:/
							NEWLINE:$\n
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								typeName:
									type_var:
										class:
											class_variable_names:Quest
								variableName:
									name_var:
										variable:
											variable_names:host
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:-1
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								variableName:
									name_var:
										variable:
											variable_names:nextIndex
							className:
								variable_names:Success
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:void
									inline:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															exact:
																BACKSLASH:\
																variable_names:Success
														ACCESS:->
														type_var:
															class:
																class_variable_names:Events
											variableName:
												name_var:
													variable:
														variable_names:event
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:host
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:nextIndex
														name_var:
															variable:
																variable_names:advanceTo
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							FORSLASH:/
						NEWLINE:$\n
						className:
							variable_names:Listeners
						FORSLASH:/
						class_declaration:
							className:
								variable_names:Fail
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									inline:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															exact:
																BACKSLASH:\
																variable_names:Fail
														type_var:
															class:
																class_variable_names:Events
														ACCESS:->
											variableName:
												name_var:
													variable:
														variable_names:event
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:on
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:(Events.Fail)event
													group:
														name_var:
															variable:
																variable_names:host
													DOT:.
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										NEWLINE:$\n
							FORSLASH:/
							SEMICOLON:;
							NEWLINE:$\n
							NEWLINE:$\n
							FORSLASH:/
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Quest
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								variableName:
									name_var:
										variable:
											variable_names:host
							objectType:
								CLASS:class 
							parentName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Fail
						objectType:
							CLASS:class 
						FORSLASH:/
						NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Quest
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								variable:
									variable_names:currentActivity
						typeName:
							type_var:
								class:
									class_variable_names:Activity
						WEAK:~
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:status
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:UNSTARTED
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:StartQuest
																									BACKSLASH:\
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												RETURN:return 
									conditional:
										ELSE:else
							inline:
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:activity
									typeName:
										type_var:
											class:
												class_variable_names:Activity
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:user
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:currentActivity
														group:
															name_var:
																variable:
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:Tick
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:currentActivity
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:use
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					class_declaration:
						FORSLASH:/
						method_declaration:
							methodDefinition:
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
										SEMICOLON:;
								methodName:
									name_var:
										variable:
											variable_names:satisfies
								inline:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Tile
										variableName:
											name_var:
												variable:
													variable_names:candidate
								body_element:
									NEWLINE:$\n
						WEAK:~
						NEWLINE:$\n
						NEWLINE:$\n
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Criteria
									ACCESS:->
									type_var:
										class:
											class_variable_names:Target
						FORSLASH:/
						objectType:
							CLASS:class 
						className:
							variable_names:TargetCriteria
						method_declaration:
							methodDefinition:
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
								methodName:
									name_var:
										variable:
											variable_names:satisfies
								body_element:
									NEWLINE:$\n
								inline:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:user
										typeName:
											type_var:
												class:
													class_variable_names:Entity
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								body_element:
									NEWLINE:$\n
						NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					class_declaration:
						FORSLASH:/
						NEWLINE:$\n
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						parentName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Usable
									type_var:
										class:
											class_variable_names:Id
						FORSLASH:/
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Criteria
										ACCESS:->
										type_var:
											class:
												class_variable_names:Target
							methodName:
								name_var:
									variable:
										variable_names:getTargetCriteria
							inline:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:TargetCriteria
																type_var:
																	class:
																		class_variable_names:Quest
													parameters:
													NEW:new 
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:quests
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					objectType:
						CLASS:class 
					DOT:.
					className:
						variable_names:Quests
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
							typeName:
								type_var:
									class:
										class_variable_names:void
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	variable_assignment:
																		EQUALS:=
																		name_var:
																			variable:
																				variable_names:status
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:FAIL
																	SEMICOLON:;
													COMMA:,
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:startQuest
													COMMA:,
													method_argument:
														body_entries:
															body_element:
																body_conditional:
																	conditional:
																		ELSE:else
																	as_body:
																		body_element:
																			body_line:
																				variable_assignment:
																					EQUALS:=
																					name_var:
																						variable:
																							variable_names:status
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:FAIL
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:isEmpty
																			group:
																				name_var:
																					exact:
																						WILD:activities
																			DOT:.
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:false
																		OPERATOR:==
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:currentActivity
																					method_argument:
																						body_statement:
																							body_call:
																								DOT:.
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															exact:
																																NAME:
																																	NUMBER:0
																									name_var:
																										variable:
																											variable_names:get
																								group:
																									name_var:
																										variable:
																											variable_names:activities
																					EQUALS:=
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:0
																					EQUALS:=
																					name_var:
																						variable:
																							variable_names:currentActivityIndex
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:IN_PROGRESS
																					name_var:
																						variable:
																							variable_names:status
																					EQUALS:=
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
															body_element:
																NEWLINE:$\n
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:tileClauses
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														typeName:
															STATEMENT_TYPE:Statement
														NEW:new 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										WEAK:~
										variableName:
											name_var:
												variable:
													variable_names:tileCount
										typeName:
											type_var:
												class:
													class_variable_names:Integer
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:questName
																					name_var:
																						variable:
																							variable_names:declarationToken
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:questName
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:fulfill
											DOT:.
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_return:
																	SEMICOLON:;
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:true
																	RETURN:return 
															body_element:
																NEWLINE:$\n
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Quests
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
														ACCESS:->
									SEMICOLON:;
							body_element:
								body_manipulate:
									class_declaration:
										className:
											variable_names:questName
										FORSLASH:/
										method_declaration:
											methodDefinition:
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:quester
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														variable:
															variable_names:generateDestinations
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:fulfill
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:destinationReached
														typeName:
															type_var:
																class:
																	class_variable_names:Area
													COMMA:,
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:quester
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														SEMICOLON:;
														RETURN:return 
										FORSLASH:/
										parentName:
											type_var:
												class:
													class_variable_names:Quest
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Quests
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													OPERATOR:+= 
													BACKSLASH:\
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileCount
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:tileClauses
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:tileClause
															name_var:
																variable:
																	variable_names:add
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:brace
														group:
															name_var:
																variable:
																	variable_names:tileClause
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variable_declaration:
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					PLUS:+
																					name_var:
																						variable:
																							variable_names:tileCount
																					name_var:
																						exact:
																							WILD:visited
													method_argument:
														body_statement:
															body_call:
																NEWLINE:$\n
																group:
																	NEW:new 
																	typeName:
																		type_var:
																			class:
																				class_variable_names:HashSet
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Area
																	parameters:
															NEWLINE:$\n
													typeName:
														type_var:
															class:
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Area
																class_variable_names:Set
													WEAK:~
													EQUALS:=
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Quests
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
												methodName:
													ADD:+=
										body_element:
											body_manipulate:
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																ACCESS:->
																																name_var:
																																	exact:
																																		WILD:ORDINAL
																																name_var:
																																	variable:
																																		variable_names:atom
																				name_var:
																					exact:
																						variable_names:negateOperator
																						BACKSLASH:\
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:negatedOperator
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																typeName:
																	STATEMENT_TYPE:Statement
																variableName:
																	name_var:
																		variable:
																			variable_names:tileNameClause
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				typeName:
																					STATEMENT_TYPE:Statement
																				parameters:
																EQUALS:=
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:mapName
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:atom
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																				name_var:
																					variable:
																						variable_names:replace
																variableName:
																	name_var:
																		variable:
																			variable_names:mapName
																EQUALS:=
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														access:
																															name_var:
																																exact:
																																	WILD:INTEGER
																															name_var:
																																variable:
																																	variable_names:atom
																															ACCESS:->
															SEMICOLON:;
													body_element:
														body_line:
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						body_line:
																							SEMICOLON:;
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																																	PLUS:+
																																	name_var:
																																		exact:
																																			WILD:toVisited
																									DOT:.
																									group:
																										name_var:
																											variable:
																												variable_names:add
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															name_var:
																																exact:
																																	WILD:quester
																														DOT:.
																														group:
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					exact:
																																						WILD:quester
																																			DOT:.
																																			group:
																																				parameters:
																																				name_var:
																																					variable:
																																						variable_names:getLocation
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												concat:
																																													PLUS:+
																																													name_var:
																																														variable:
																																															variable_names:mapName
																																													name_var:
																																														variable:
																																															variable_names:tileName
																																						name_var:
																																							variable:
																																								variable_names:Tiles
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																															name_var:
																																variable:
																																	variable_names:getNodeFromId
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:mapName
																																						name_var:
																																							variable:
																																								variable_names:Environments
																																						ACCESS:->
																															name_var:
																																variable:
																																	variable_names:getEnvironment
																														group:
																															name_var:
																																variable:
																																	variable_names:getLocation
																															parameters:
																														DOT:.
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:prependToBody
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:generateDestinations
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:negatedOperator
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:tileNameClause
																	group:
																		name_var:
																			variable:
																				variable_names:tileClause
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												variable:
																													variable_names:atom
																											name_var:
																												exact:
																													WILD:tileName
																											ACCESS:->
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:replace
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:tileName
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:quest_tile_description
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:size
																								parameters:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														concat:
																															PLUS:+
																															name_var:
																																exact:
																																	WILD:visited
																															name_var:
																																variable:
																																	variable_names:tileCount
																							DOT:.
																	DOT:.
															SEMICOLON:;
													body_element:
														body_line:
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:fulfill
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									body_line:
																										SEMICOLON:;
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			concat:
																																				name_var:
																																					exact:
																																						WILD:visited
																																				name_var:
																																					variable:
																																						variable_names:tileCount
																																				PLUS:+
																												DOT:.
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				WILD:destinationReached
																													name_var:
																														variable:
																															variable_names:add
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																																	name_var:
																																		exact:
																																			WILD:toVisit
																																	PLUS:+
																									group:
																										name_var:
																											variable:
																												variable_names:contains
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	WILD:destinationReached
																									DOT:.
																		name_var:
																			variable:
																				variable_names:prependToBody
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
															SEMICOLON:;
												name_var:
													variable:
														variable_names:element
												COLON::
												variableName:
													NAME:atom
										tokenName:
											NAME:quest_destination
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														STATEMENT_TYPE:Statement
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:tileClause
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		STATEMENT_TYPE:Statement
																	NEW:new 
																	parameters:
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileClause
														group:
															name_var:
																variable:
																	variable_names:set
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:||
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
														type_var:
															class:
																class_variable_names:Quests
												methodName:
													ADD:+=
												variable_declaration:
													WEAK:~
													typeName:
														type_var:
															class:
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Area
																class_variable_names:Set
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					name_var:
																						variable:
																							variable_names:tileCount
																					name_var:
																						exact:
																							WILD:toVisit
																					PLUS:+
													method_argument:
														body_statement:
															NEWLINE:$\n
															body_call:
																group:
																	NEW:new 
																	typeName:
																		type_var:
																			class:
																				class_variable_names:HashSet
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Area
																	parameters:
																NEWLINE:$\n
													EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:set
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:&&
											DOT:.
											group:
												name_var:
													variable:
														variable_names:tileClauses
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							methodName:
								name_var:
									variable:
										variable_names:typeDeclaration
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:size
												parameters:
											group:
												name_var:
													variable:
														variable_names:tileClauses
										OPERATOR:> 
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Quests
													OPERATOR:->*
													body_call:
														group:
															name_var:
																exact:
																	WILD:fulfill
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:tileClauses
																				conditional:
																					IF:if
																				as_body:
																					body_element:
																						body_return:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																							RETURN:return 
																							SEMICOLON:;
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
														DOT:.
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											body_line:
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													EQUALS:=
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Events
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_entries:
																		COMMA:,
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:questName
																								name_var:
																									variable:
																										variable_names:Quests
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:eventName
																	name_var:
																		variable:
																			variable_names:addToEventMethod
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														BODY_TYPE:Body 
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		BODY_TYPE:Body 
																	parameters:
													variableName:
														name_var:
															variable:
																variable_names:eventBody
													EQUALS:=
												SEMICOLON:;
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Quests
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:questName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventBody
															name_var:
																variable:
																	variable_names:addToEventMethod
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:event
																							name_var:
																								variable:
																									variable_names:on
																						group:
																							name_var:
																								variable:
																									variable_names:super
																						DOT:.
																				SEMICOLON:;
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:eventBody
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												variable_declaration:
													WEAK:~
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:element
																								name_var:
																									exact:
																										WILD:event_names
																								ACCESS:->
													variableName:
														name_var:
															variable:
																variable_names:eventName
												SEMICOLON:;
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	variable:
																		variable_names:eventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:startQuest
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												body_statement:
													OPERATOR:|| 
													body_call:
														group:
															name_var:
																exact:
																	WILD:load
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													body_call:
														group:
															name_var:
																exact:
																	WILD:start
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													OPERATOR:== 
												conditional:
													IF:if
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:eventBody
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventContext
															SEMICOLON:;
													COLON::
													tokenName:
														NAME:body_element
												COLON::
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:description
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
										variableName:
											name_var:
												variable:
													variable_names:description
										EQUALS:=
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
				NEWLINE:$\n
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
				class_declaration:
					objectType:
						CLASS:class 
					DOT:.
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:skillName
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Skill
							methodName:
								name_var:
									variable:
										variable_names:create
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:id
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Skills
																ACCESS:->
																name_var:
																	variable:
																		variable_names:name
									SEMICOLON:;
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:getId
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:behaviours
					packageName:
						name_var:
							exact:
								WILD:skills
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:data
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										NEWLINE:$\n
										NEWLINE:$\n
										FORSLASH:/
										className:
											variable_names:Free
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Tile
														variableName:
															name_var:
																variable:
																	variable_names:candidate
										FORSLASH:/
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:candidate
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														SEMICOLON:;
										parentName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Criteria
													type_var:
														class:
															class_variable_names:Target
													ACCESS:->
										NEWLINE:$\n
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Target
											type_var:
												class:
													class_variable_names:Criteria
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createList
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										SEMICOLON:;
										NEWLINE:$\n
										NEWLINE:$\n
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:to
											EQUALS:=
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Environment
														type_var:
															class:
																class_variable_names:Position
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
										FORSLASH:/
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Double
											variableName:
												name_var:
													variable:
														variable_names:angleLeft
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
										SEMICOLON:;
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															typeName:
																type_var:
																	class:
																		class_variable_names:Double
															method_argument:
																body_statement:
																	body_call:
																		DOT:.
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:candidate
																		group:
																			name_var:
																				variable:
																					variable_names:getDirectionTo
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:to
																		group:
																			name_var:
																				variable:
																					variable_names:getLocation
																			parameters:
															variableName:
																name_var:
																	variable:
																		variable_names:direction
															EQUALS:=
														SEMICOLON:;
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:candidate
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																OPERATOR:& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleLeft
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleRight
																OPERATOR:<= 
																OPERATOR:>= 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
										NEWLINE:$\n
										SEMICOLON:;
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Double
											variableName:
												name_var:
													variable:
														variable_names:angleRight
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
										parentName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Target
													type_var:
														class:
															class_variable_names:Criteria
										FORSLASH:/
										className:
											variable_names:AngleTo
										NEWLINE:$\n
										objectType:
											CLASS:class 
										NEWLINE:$\n
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Target
											type_var:
												class:
													class_variable_names:Criteria
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					className:
						variable_names:Skills
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_manipulate:
									tokenInstance:
										COLON::
										tokenName:
											NAME:cooldown
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
																								DOT:.
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																name_var:
																	exact:
																		WILD:cost
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Skills
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														ACCESS:->
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														ACCESS:->
														type_var:
															class:
																class_variable_names:Skills
												body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	exact:
																		WILD:range
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								DOT:.
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
															SEMICOLON:;
										COLON::
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:range
									tokenInstance:
										NEWLINE:$\n
										COLON::
										tokenName:
											NAME:variable_header
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Skills
																COMMA:,
															name_var:
																exact:
																	variable_names:addVariableHeader
																	BACKSLASH:\
												SEMICOLON:;
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
												COLON::
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:TargetCriteria
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																				name_var:
																					variable:
																						variable_names:Skills
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:satisfies[Entity]
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				as_statement:
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:canUseContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																																COMMA:,
																																COMMA:,
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									body_return:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:false
																										SEMICOLON:;
																										RETURN:return 
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:prependToBody
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:boolean_statement
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:TargetCriteria
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Skills
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																						ACCESS:->
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																			DOT:.
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:getMethod
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:satisfies[Entity]
																typeName:
																	CONTEXT_TYPE:Context 
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:canUseContext
													COLON::
										NEWLINE:$\n
										tokenName:
											NAME:require
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:use
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_manipulate:
															body:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				as_method:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:useContext
																								name_var:
																									exact:
																										variable_names:getBodyElement
																										BACKSLASH:\
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Skills
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:skillName
																	ACCESS:->
																	ACCESS:->
																	as_method:
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:use
																		AS_METHOD_NAME:*
															methodName:
																ADD:+=
													COLON::
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													NEWLINE:$\n
												name_var:
													variable:
														variable_names:element
												COLON::
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
									COLON::
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												tokenInstance:
													COLON::
													body_element:
														body_conditional:
															as_body:
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													as_body:
																														body_element:
																															body_return:
																																SEMICOLON:;
																																VOID:void
																																RETURN:return 
																													conditional:
																														ELSE:else
																														IF:if
																								name_var:
																									variable:
																										variable_names:prependToBody
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																										ACCESS:->
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																		conditional:
																			ELSE:else
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																						OPERATOR:->*
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_return:
																																RETURN:return 
																																SEMICOLON:;
																																VOID:void
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																								name_var:
																									variable:
																										variable_names:prependToBody
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						EQUALS:=
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						name_var:
																							variable:
																								variable_names:isFirst
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		conditional:
																			IF:if
															conditional:
																ELSE:else
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:chance
																typeName:
																	STATEMENT_TYPE:Statement
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_method:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																access:
																																	ACCESS:->
																																	name_var:
																																		variable:
																																			variable_names:atom
																																	name_var:
																																		exact:
																																			WILD:has_chance
																										name_var:
																											exact:
																												variable_names:getChance
																												BACKSLASH:\
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																OPERATOR:!= 
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:atom
																				name_var:
																					exact:
																						WILD:boolean_statement
																				ACCESS:->
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
															as_body:
																body_element:
																	body_conditional:
																		conditional:
																			ELSE:else
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									access:
																										name_var:
																											variable:
																												variable_names:Skills
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_conditional:
																																conditional:
																																	ELSE:else
																																	IF:if
																																as_body:
																																	body_element:
																																		body_return:
																																			SEMICOLON:;
																																			RETURN:return 
																																			VOID:void
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													conditional:
																														IF:if
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		variable_declaration:
																			EQUALS:=
																			typeName:
																				STATEMENT_TYPE:Statement
																			variableName:
																				name_var:
																					variable:
																						variable_names:bool
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_method:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														exact:
																															variable_names:getBooleanStatement
																															BACKSLASH:\
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			access:
																																				ACCESS:->
																																				name_var:
																																					variable:
																																						variable_names:atom
																																				name_var:
																																					exact:
																																						WILD:boolean_statement
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:useContext
																		SEMICOLON:;
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						EQUALS:=
																						name_var:
																							variable:
																								variable_names:isFirst
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																						OPERATOR:->*
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									exact:
																										WILD:use
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_conditional:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																																conditional:
																																	IF:if
																																as_body:
																																	body_element:
																																		body_return:
																																			RETURN:return 
																																			VOID:void
																																			SEMICOLON:;
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													conditional:
																														IF:if
																					SEMICOLON:;
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		conditional:
																			IF:if
																body_element:
																	NEWLINE:$\n
													tokenName:
														NAME:option
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
												COLON::
												name_var:
													variable:
														variable_names:element
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:miss
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_quote:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:description
														DOT:.
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:description
										body_element:
											NEWLINE:$\n
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:skillName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																CAMEL:^
																ACCESS:->
																name_var:
																	exact:
																		WILD:skillName
																name_var:
																	variable:
																		variable_names:declarationToken
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Skills
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														ACCESS:->
														ACCESS:->
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		name_var:
																			exact:
																				WILD:targetCriteria
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																						NEW:new 
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:TargetCriteria
																									type_var:
																										class:
																											class_variable_names:Skills
																									ACCESS:->
																									ACCESS:->
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:skillName
																		EQUALS:=
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:appendToBody
										OPERATOR:->*.
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										variableName:
											name_var:
												variable:
													variable_names:useContext
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:skillName
																name_var:
																	variable:
																		variable_names:Skills
																ACCESS:->
													group:
														name_var:
															variable:
																variable_names:getContext
														parameters:
													DOT:.
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:use
														name_var:
															variable:
																variable_names:getMethod
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
												name_var:
													variable:
														variable_names:getMethod
											DOT:.
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:skillName
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																			DOT:.
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:skillName
																											type_var:
																												class:
																													class_variable_names:Skills
																								parameters:
																				SEMICOLON:;
																	conditional:
																		IF:if
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Skills
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Skills
									methodName:
										ADD:+=
									class_declaration:
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:victim
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
													COMMA:,
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:user
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														variable:
															variable_names:use
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														SEMICOLON:;
												inline:
												methodName:
													name_var:
														variable:
															variable_names:getDescription
										NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Skill
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Skill
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
											static:
												STA:@
											variableName:
												name_var:
													exact:
														WILD:id
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Skill
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
															NEW:new 
															parameters:
											EQUALS:=
										SEMICOLON:;
										NEWLINE:$\n
										FORSLASH:/
										objectType:
											CLASS:class 
										className:
											variable_names:skillName
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:skillName
												inline:
										NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Skill
															type_var:
																class:
																	class_variable_names:Id
															ACCESS:->
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
												methodName:
													name_var:
														variable:
															variable_names:getId
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										WEAK:~
										variableName:
											name_var:
												variable:
													variable_names:isFirst
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
									SEMICOLON:;
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:skillName
											type_var:
												class:
													class_variable_names:Skills
									class_declaration:
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														SEMICOLON:;
														RETURN:return 
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:user
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
										NEWLINE:$\n
										WEAK:~
										className:
											variable_names:TargetCriteria
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														SEMICOLON:;
														RETURN:return 
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:user
														typeName:
															type_var:
																class:
																	class_variable_names:Tile
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:satisfies
										FORSLASH:/
										NEWLINE:$\n
										parentName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Target
													type_var:
														class:
															class_variable_names:Criteria
													ACCESS:->
										FORSLASH:/
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:description
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:+
										EQUALS:=
									SEMICOLON:;
				class_declaration:
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:event
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Events
												ACCESS:->
												type_var:
													exact:
														BACKSLASH:\
														variable_names:Tick
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										OPERATOR:> 
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													OPERATOR:+= 
													BACKSLASH:\
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
					DOT:.
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						variableName:
							name_var:
								variable:
									variable_names:hasEntityFocus
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						WEAK:~
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
										EQUALS:=
										name_var:
											exact:
												WILD:hasEntityFocus
									SEMICOLON:;
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:newFocus
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
							typeName:
								type_var:
									class:
										class_variable_names:void
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						variableName:
							name_var:
								variable:
									variable_names:cooldown
						EQUALS:=
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Skill
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
							body_element:
								NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:cost
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Entity
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getName
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							inline:
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:victim
							methodName:
								name_var:
									variable:
										variable_names:use
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getName
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														exact:
															WILD:(int)(float)cost
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getCost
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:entity
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:true
									RETURN:return 
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:canChase
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:entity
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														exact:
															WILD:range
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
													name_var:
														variable:
															variable_names:use
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getRange
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:skills
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:experience
					packageName:
						name_var:
							exact:
								WILD:behaviours
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Skill
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:isOffCooldown
							body_element:
								NEWLINE:$\n
							inline:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_return:
									method_argument:
										body_statement:
											OPERATOR:== 
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0
											body_call:
												group:
													name_var:
														exact:
															WILD:cooldown
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:user
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Activity
									variableName:
										name_var:
											variable:
												variable_names:activity
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:isOffCooldown
														BACKSLASH:\
												parameters:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
												RETURN:return 
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:activity
											DOT:.
											group:
												name_var:
													variable:
														variable_names:hasTarget
												parameters:
									as_body:
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												RETURN:return 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_return:
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															RETURN:return 
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																							name_var:
																								variable:
																									variable_names:getTargetEntity
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:activity
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:satisfies
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:activity
																			group:
																				name_var:
																					variable:
																						variable_names:getTargetEntity
																				parameters:
														group:
															name_var:
																variable:
																	variable_names:targetCriteria
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:potential
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
													body_element:
														body_return:
															RETURN:return 
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:potential
													typeName:
														type_var:
															class:
																class_variable_names:Entity
												body_statement:
													body_call:
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:user
														group:
															name_var:
																variable:
																	variable_names:getEntitiesWithin
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:targetCriteria
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																				name_var:
																					exact:
																						variable_names:getRange
																						BACKSLASH:\
																COMMA:,
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getLocation
												OPERATOR:: 
												conditional:
													FOR:for
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							inline:
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:newFocus
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
							body_element:
								body_line:
									variable_assignment:
										name_var:
											exact:
												WILD:hasEntityFocus
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setFocus
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							inline:
					NEWLINE:$\n
					class_declaration:
						className:
							variable_names:Id
						FORSLASH:/
						NEWLINE:$\n
						objectType:
							CLASS:class 
						parentName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
									type_var:
										class:
											class_variable_names:Usable
						FORSLASH:/
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Target
									type_var:
										class:
											class_variable_names:Criteria
						EQUALS:=
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								variable:
									variable_names:targetCriteria
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
									type_var:
										class:
											class_variable_names:Modifier
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:range
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										body_call:
											group:
												name_var:
													exact:
														WILD:otherSkill
											group:
												name_var:
													exact:
														WILD:cooldown
											DOT:.
										OPERATOR:== 
									conditional:
										IF:if
									as_body:
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	OPERATOR:- 
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:hasEntityFocus
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		DOT:.
																	OPERATOR:- 
															RETURN:return 
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:compareTo
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
														body_call:
															group:
																name_var:
																	exact:
																		WILD:otherSkill
															group:
																name_var:
																	exact:
																		WILD:cooldown
															DOT:.
														OPERATOR:- 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Skill
									variableName:
										name_var:
											exact:
												WILD:otherSkill
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					DOT:.
					DOT:.
					SEMICOLON:;
					SEMICOLON:;
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:mods
					className:
						variable_names:Condition
					objectType:
						CLASS:class 
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:conditions
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					class_declaration:
						packageName:
							name_var:
								exact:
									WILD:conditions
						DOT:.
						NEWLINE:$\n
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:mods
						DOT:.
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							body_element:
								NEWLINE:$\n
							inline:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Condition
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
		class_declaration:
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:newValue
					methodName:
						name_var:
							variable:
								variable_names:setValue
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newValue
								name_var:
									variable:
										variable_names:value
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:amount
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:amount
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								BACKSLASH:\
								OPERATOR:+= 
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
			DOT:.
			className:
				variable_names:Int
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:misc
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:value
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0
				typeName:
					type_var:
						class:
							class_variable_names:Integer
			NEWLINE:$\n
			NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
				class_declaration:
					className:
						variable_names:Items
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Item
							static:
								STA:@
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:itemName
									typeName:
										type_var:
											class:
												class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														ACCESS:->
														name_var:
															exact:
																BACKSLASH:\
																variable_names:className
														name_var:
															variable:
																variable_names:Items
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_line:
																	variable_assignment:
																		name_var:
																			exact:
																				WILD:name
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_quote:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													name_var:
																														exact:
																															WILD:itemName
																													ACCESS:->
																													name_var:
																														variable:
																															variable_names:itemToken
																		EQUALS:=
																	SEMICOLON:;
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:itemToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														ACCESS:->
														type_var:
															exact:
																variable_names:className
																BACKSLASH:\
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	exact:
																		WILD:maxHp
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
																							ACCESS:->
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											variable_names:this
																											BACKSLASH:\
																EQUALS:=
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Items
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														ACCESS:->
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	exact:
																		WILD:hp
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																					COMMA:,
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
																							ACCESS:->
																EQUALS:=
															SEMICOLON:;
										tokenName:
											NAME:hp
										body_element:
											NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:itemToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										className:
											variable_names:className
										NEWLINE:$\n
										objectType:
											CLASS:class 
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:items
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:entities
										DOT:.
										SEMICOLON:;
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Items
											static:
												STA:@
											variableName:
												name_var:
													exact:
														variable_names:id
														BACKSLASH:\
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
																		type_var:
																			class:
																				class_variable_names:Items
															parameters:
															NEW:new 
											EQUALS:=
										parentName:
											type_var:
												class:
													class_variable_names:Item
									type_var:
										class:
											class_variable_names:Items
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:gain_aspect
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:gain
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:change_item
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getItem
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:change_item
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Aspects
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								variable_names:className
																								BACKSLASH:\
																						name_var:
																							variable:
																								variable_names:Items
																COMMA:,
																COMMA:,
																COMMA:,
										COLON::
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:itemToken
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Treasury
											group:
												name_var:
													variable:
														variable_names:paymentTypeDec
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:className
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:className
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:className
													COMMA:,
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:attack
										body_element:
											body_manipulate:
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	exact:
																		WILD:dmg
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																													DOT:.
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Item
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Modifier
																EQUALS:=
												type_var:
													access_multi:
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														type_var:
															class:
																class_variable_names:Items
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
														ACCESS:->
												methodName:
													ADD:+=
										COLON::
									COLON::
									name_var:
										variable:
											variable_names:itemToken
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:itemToken
									tokenInstance:
										COLON::
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															exact:
																variable_names:className
																BACKSLASH:\
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
												body:
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	exact:
																		WILD:weight
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
															SEMICOLON:;
												methodName:
													ADD:+=
										tokenName:
											NAME:weight
									COLON::
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
									tokenInstance:
										body_element:
											body_manipulate:
												body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																													DOT:.
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
																EQUALS:=
																name_var:
																	exact:
																		WILD:value
															SEMICOLON:;
												type_var:
													access_multi:
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
												methodName:
													ADD:+=
										COLON::
										tokenName:
											NAME:value
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:className
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:itemToken
																ACCESS:->
																name_var:
																	exact:
																		WILD:itemName
																CAMEL:^
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:defense
										COLON::
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Items
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
														ACCESS:->
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
												body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
																name_var:
																	exact:
																		WILD:def
																EQUALS:=
															SEMICOLON:;
									name_var:
										variable:
											variable_names:itemToken
									COLON::
							body_element:
								comment:
									WILD:>	itemToken : element : animation { > Items->\className->* += { \image = `Images.animation(element)`;} }
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
									COLON::
									tokenInstance:
										tokenName:
											NAME:gain_attack
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:equip
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Attacks
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:className
																						name_var:
																							variable:
																								variable_names:Items
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:unequip
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getHost
																					parameters:
																COMMA:,
																COMMA:,
															name_var:
																variable:
																	variable_names:gain
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:this
														DOT:.
										body_element:
											NEWLINE:$\n
										COLON::
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:create
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												exact:
																													BACKSLASH:\
																													variable_names:className
																											type_var:
																												class:
																													class_variable_names:Items
																											ACCESS:->
																				SEMICOLON:;
																				RETURN:return 
																		body_element:
																			NEWLINE:$\n
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:className
																				name_var:
																					variable:
																						variable_names:equals
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:itemName
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
										body_call:
											group:
												name_var:
													variable:
														variable_names:Items
									SEMICOLON:;
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:this
														DOT:.
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Traits
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								variable_names:className
																								BACKSLASH:\
																						name_var:
																							variable:
																								variable_names:Items
																						ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:equip
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:unequip
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getHost
																COMMA:,
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
															name_var:
																variable:
																	variable_names:gain
										COLON::
										tokenName:
											NAME:gain_trait
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:itemToken
									variableName:
										NAME:element
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										body_element:
											body_line:
												variable_declaration:
													typeName:
														BODY_TYPE:Body 
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:bodyElementList
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	NEW:new 
																	typeName:
																		BODY_TYPE:Body 
												SEMICOLON:;
										body_element:
											body_manipulate:
												COLON::
												tokenInstance:
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:bodyElementList
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
																								COMMA:,
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:bodyElementList
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Items
																						name_var:
																							exact:
																								variable_names:className
																								BACKSLASH:\
																						ACCESS:->
															name_var:
																variable:
																	variable_names:addToEventMethod
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:Events
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:context
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Events
																group:
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:className
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:Items
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:bodyElementList
																		COMMA:,
																DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:itemToken
									variableName:
										NAME:element
					NEWLINE:$\n
					DOT:.
					objectType:
						CLASS:class 
					NEWLINE:$\n
					class_declaration:
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:items
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
						className:
							variable_names:Id
						NEWLINE:$\n
						DOT:.
					packageName:
						name_var:
							exact:
								WILD:items
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											CLASS_TYPE:Class 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:idClass
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:gainClass
																name_var:
																	exact:
																		variable_names:Id
																		BACKSLASH:\
																ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:gain
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:gainContext
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Events
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:itemClass
															method_argument:
																body_statement:
																	body_call:
																		group:
																			parameters:
																			typeName:
																				BODY_TYPE:Body 
																			NEW:new 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:gainEventName
															COMMA:,
															COMMA:,
														name_var:
															variable:
																variable_names:addToEventMethod
													DOT:.
										EQUALS:=
										typeName:
											CONTEXT_TYPE:Context 
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:loseEventName
									typeName:
										type_var:
											class:
												class_variable_names:String
								COMMA:,
								variable_declaration:
									typeName:
										CLASS_TYPE:Class 
									variableName:
										name_var:
											variable:
												variable_names:itemClass
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:gainEventName
								COMMA:,
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:gainToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
								variable_declaration:
									typeName:
										CLASS_TYPE:Class 
									variableName:
										name_var:
											variable:
												variable_names:gainClass
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:subject
									typeName:
										STATEMENT_TYPE:Statement
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:specificClass
										EQUALS:=
										typeName:
											CLASS_TYPE:Class 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:gainClass
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:specificClassName
																ACCESS:->
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:specificClassName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:gainToken
																CAMEL:^
										typeName:
											type_var:
												class:
													class_variable_names:String
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:loseContext
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Events
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:loseEventName
															method_argument:
																body_statement:
																	body_call:
																		group:
																			NEW:new 
																			typeName:
																				BODY_TYPE:Body 
																			parameters:
															COMMA:,
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:itemClass
														name_var:
															variable:
																variable_names:addToEventMethod
										typeName:
											CONTEXT_TYPE:Context 
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:gainToken
														ACCESS:->
														name_var:
															exact:
																WILD:boolean_statement
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:itemClass
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:event
																						DOT:.
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:subject
																						DOT:.
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:lose
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:specificClass
																											group:
																												name_var:
																													exact:
																														WILD:id
																											DOT:.
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														BACKSLASH:\
																														variable_names:this
																								COMMA:,
																				SEMICOLON:;
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:loseEventName
																COMMA:,
															name_var:
																variable:
																	variable_names:addToEventMethod
														DOT:.
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:event
																						DOT:.
																						DOT:.
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:subject
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:gain
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:this
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												typeName:
																													type_var:
																														class:
																															class_variable_names:specificClass
																												parameters:
																												NEW:new 
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:itemClass
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:gainEventName
														group:
															name_var:
																variable:
																	variable_names:Events
												SEMICOLON:;
									conditional:
										IF:if
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:addToEventMethod
																		parameters:
																			COMMA:,
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							body_statement:
																								OPERATOR:&& 
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:gainContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																COMMA:,
																								body_call:
																									DOT:.
																									group:
																										name_var:
																											exact:
																												WILD:event
																									DOT:.
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:subject
																									group:
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:has
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:specificClass
																														group:
																															name_var:
																																exact:
																																	WILD:id
																														DOT:.
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_line:
																										SEMICOLON:;
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														exact:
																															BACKSLASH:\
																															variable_names:lose
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				variable_names:this
																																				BACKSLASH:\
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				WILD:id
																																	DOT:.
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:specificClass
																												DOT:.
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:subject
																												group:
																													name_var:
																														exact:
																															WILD:event
																												DOT:.
																								body_element:
																									NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:loseEventName
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:itemClass
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	DOT:.
													tokenName:
														NAME:boolean_statement
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:gainContext
																					COMMA:,
																				name_var:
																					exact:
																						variable_names:getBooleanStatement
																						BACKSLASH:\
																typeName:
																	STATEMENT_TYPE:Statement
																variableName:
																	name_var:
																		variable:
																			variable_names:gainHeader
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	group:
																		name_var:
																			variable:
																				variable_names:addToEventMethod
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:gainEventName
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:itemClass
																			COMMA:,
																			COMMA:,
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							body_statement:
																								OPERATOR:&&! 
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:false
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:gainContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																COMMA:,
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																								body_call:
																									group:
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:has
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:specificClass
																														group:
																															name_var:
																																exact:
																																	WILD:id
																									group:
																										name_var:
																											exact:
																												WILD:event
																									DOT:.
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:subject
																									DOT:.
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_line:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:subject
																												group:
																													name_var:
																														exact:
																															WILD:event
																												DOT:.
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		parameters:
																																		NEW:new 
																																		typeName:
																																			type_var:
																																				class:
																																					class_variable_names:specificClass
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				BACKSLASH:\
																																				variable_names:this
																														COMMA:,
																													name_var:
																														exact:
																															variable_names:gain
																															BACKSLASH:\
																												DOT:.
																										SEMICOLON:;
																					body_element:
																						NEWLINE:$\n
													COLON::
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																typeName:
																	STATEMENT_TYPE:Statement
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:loseContext
																					COMMA:,
																				name_var:
																					exact:
																						variable_names:getBooleanStatement
																						BACKSLASH:\
																variableName:
																	name_var:
																		variable:
																			variable_names:loseHeader
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												name_var:
													variable:
														variable_names:gainToken
												COLON::
												variableName:
													NAME:atom
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:gainClass
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:toLowerCase
													group:
														parameters:
														name_var:
															variable:
																variable_names:getName
													DOT:.
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:asList
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:setup
							inner:
								IN:>
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Aspect
												name_var:
													exact:
														variable_names:createList
														BACKSLASH:\
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Item
														name_var:
															variable:
																variable_names:Modifier
														ACCESS:->
											group:
												name_var:
													variable:
														variable_names:getContext
												parameters:
											DOT:.
											group:
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:getValue
																		parameters:
												name_var:
													variable:
														variable_names:setEnder
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:addGainLoss
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Aspect
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Item
											group:
												name_var:
													variable:
														variable_names:Entity
											DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
				NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					class_declaration:
						DOT:.
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:mods
						NEWLINE:$\n
						DOT:.
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						className:
							variable_names:Id
						packageName:
							name_var:
								exact:
									WILD:affinities
						packageName:
							name_var:
								exact:
									WILD:entities
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Affinity
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
							inline:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0.0
									RETURN:return 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:modify
							typeName:
								type_var:
									class:
										class_variable_names:Double
							inline:
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Double
									variableName:
										name_var:
											exact:
												WILD:damage
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:defender
					packageName:
						name_var:
							exact:
								WILD:mods
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:entities
					SEMICOLON:;
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:affinities
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					DOT:.
					className:
						variable_names:Affinity
					NEWLINE:$\n
					DOT:.
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:affinityName
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:defender
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:Affinities
																					ACCESS:->
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:affinityName
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:id
														name_var:
															variable:
																variable_names:has
													DOT:.
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:hasAffinity
							typeName:
								STATEMENT_TYPE:Statement
					NEWLINE:$\n
					DOT:.
					className:
						variable_names:Affinities
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Affinities
																ACCESS:->
																name_var:
																	variable:
																		variable_names:name
													group:
														name_var:
															variable:
																variable_names:id
													DOT:.
									RETURN:return 
							inner:
								IN:>
							typeName:
								STATEMENT_TYPE:Statement
					DOT:.
					NEWLINE:$\n
					objectType:
						CLASS:class 
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											CAMEL:^
																											variable_names:element
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:hasAffinity
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:weaknesses
														DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:weakness_name
										body_element:
											NEWLINE:$\n
										COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:weaknesses
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
														typeName:
															STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:affinityClassName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:affinityName
																CAMEL:^
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:affinityName
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					name_var:
																						exact:
																							WILD:affinityName
																					ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:strength_name
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:strengths
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											CAMEL:^
																											variable_names:element
																				name_var:
																					exact:
																						variable_names:hasAffinity
																						BACKSLASH:\
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										parentName:
											type_var:
												class:
													class_variable_names:Affinity
										NEWLINE:$\n
										className:
											variable_names:affinityClassName
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:mods
										variable_declaration:
											EQUALS:=
											variableName:
												name_var:
													exact:
														WILD:id
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Affinity
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
																		type_var:
																			class:
																				class_variable_names:Affinity
															NEW:new 
											static:
												STA:@
										packageName:
											name_var:
												exact:
													WILD:entities
										NEWLINE:$\n
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:affinities
										NEWLINE:$\n
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										SEMICOLON:;
										DOT:.
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:affinityName
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												inline:
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Double
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:modify
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_conditional:
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		OPERATOR:/= 
															body_element:
																NEWLINE:$\n
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:weaknesses
														conditional:
															IF:if
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:damage
														SEMICOLON:;
														RETURN:return 
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:defender
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Double
														variableName:
															name_var:
																exact:
																	WILD:damage
													COMMA:,
												body_element:
													body_conditional:
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
																		OPERATOR:*= 
																	SEMICOLON:;
														conditional:
															IF:if
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:strengths
												body_element:
													NEWLINE:$\n
										DOT:.
									type_var:
										class:
											class_variable_names:Affinities
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:affinityClassName
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:affinityName
																			DOT:.
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Affinities
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:affinityClassName
																				SEMICOLON:;
											group:
												name_var:
													variable:
														variable_names:Affinities
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
											DOT:.
									SEMICOLON:;
							inner:
								IN:>
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:strengths
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:affinities
					packageName:
						name_var:
							exact:
								WILD:entities
					packageName:
						name_var:
							exact:
								WILD:mods
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							static:
								STA:@
							typeName:
								type_var:
									class:
										class_variable_names:Affinity
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											exact:
												WILD:affinityName
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
		imports:
			IMPORT_CLASS:
				class_declaration:
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:name
									typeName:
										type_var:
											class:
												class_variable_names:String
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:id
													DOT:.
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Traits
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																ACCESS:->
									RETURN:return 
					NEWLINE:$\n
					objectType:
						CLASS:class 
					className:
						variable_names:Traits
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:traits
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									class_declaration:
										DOT:.
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												inline:
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:traitName
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:traits
										packageName:
											name_var:
												exact:
													WILD:entities
										parentName:
											type_var:
												class:
													class_variable_names:Trait
										SEMICOLON:;
										DOT:.
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:hasRequirements
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:candidate
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
										packageName:
											name_var:
												exact:
													WILD:mods
										className:
											variable_names:traitName
										NEWLINE:$\n
										DOT:.
										variable_declaration:
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Trait
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
											variableName:
												name_var:
													exact:
														WILD:id
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Trait
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
										NEWLINE:$\n
										NEWLINE:$\n
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										objectType:
											CLASS:class 
									type_var:
										class:
											class_variable_names:Traits
									methodName:
										ADD:+=
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:Map
													template_parameters:
														COMMA:,
														template_parameter:
															type_var:
																class:
																	class_variable_names:String
														template_parameter:
															BODY_TYPE:Body 
										variableName:
											name_var:
												variable:
													variable_names:eventBodies
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															type_var:
																class:
																	template_parameters:
																		COMMA:,
																		template_parameter:
																			BODY_TYPE:Body 
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:String
																	class_variable_names:HashMap
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															BODY_TYPE:Body 
										typeName:
											BODY_TYPE:Body 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:requirementsBody
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:eventHost
										method_argument:
											as_statement:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:event
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getHost
										EQUALS:=
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:requirement
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														DOT:.
														group:
															name_var:
																access:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:traitName
																	name_var:
																		variable:
																			variable_names:Traits
																	ACCESS:->
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						body_return:
																							SEMICOLON:;
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																							RETURN:return 
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:element
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:false
																													COMMA:,
																													COMMA:,
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:candidate
																												name_var:
																													exact:
																														variable_names:getRequirement
																														BACKSLASH:\
														group:
															name_var:
																variable:
																	variable_names:getMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasRequirements
										COLON::
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:traitName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:traitName
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
																ACCESS:->
									SEMICOLON:;
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:gainBody
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:getImposition
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:true
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					COMMA:,
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			DOT:.
															name_var:
																variable:
																	variable_names:add
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			DOT:.
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																				name_var:
																					variable:
																						variable_names:getImposition
														group:
															name_var:
																variable:
																	variable_names:lossBody
														DOT:.
										tokenName:
											NAME:impose
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:candidate
										variableName:
											name_var:
												variable:
													variable_names:candidate
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:put
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:loss
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:lossBody
											DOT:.
											group:
												name_var:
													variable:
														variable_names:eventBodies
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										variableName:
											name_var:
												variable:
													variable_names:lossBody
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															BODY_TYPE:Body 
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Traits
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:traitName
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:eventBodies
												name_var:
													variable:
														variable_names:addEventMethodsExclusive
											DOT:.
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:gainBody
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														typeName:
															BODY_TYPE:Body 
														NEW:new 
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:gain
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:gainBody
													COMMA:,
												name_var:
													variable:
														variable_names:put
											group:
												name_var:
													variable:
														variable_names:eventBodies
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Traits
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:traitName
																											type_var:
																												class:
																													class_variable_names:Traits
																								NEW:new 
																				RETURN:return 
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:traitName
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:traitName
																				name_var:
																					variable:
																						variable_names:equals
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							static:
								STA:@
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											exact:
												WILD:traitName
							typeName:
								type_var:
									class:
										class_variable_names:Trait
				class_declaration:
					DOT:.
					DOT:.
					class_declaration:
						DOT:.
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:mods
						NEWLINE:$\n
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:entities
						packageName:
							name_var:
								exact:
									WILD:traits
						className:
							variable_names:Id
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							inline:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Trait
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
					packageName:
						name_var:
							exact:
								WILD:mods
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:traits
					NEWLINE:$\n
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					className:
						variable_names:Trait
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
					NEWLINE:$\n
					DOT:.
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					NEWLINE:$\n
					objectType:
						CLASS:class 
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:candidate
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:hasRequirements
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
					NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
NEWLINE:$\n
comment:
	WILD:import images/image.clws
imports:
	IMPORT_CLASS:
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:String[]
			variableName:
				name_var:
					variable:
						variable_names:mainStringArgs
			inner:
				IN:>
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:listen
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Move
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
							variableName:
								name_var:
									variable:
										variable_names:event
			SEMICOLON:;
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Area
				variableName:
					name_var:
						variable:
							variable_names:focusArea
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
				WEAK:~
				EQUALS:=
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:game
			NEWLINE:$\n
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Tile
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
				WEAK:~
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:mosiac
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Double
				variableName:
					name_var:
						variable:
							variable_names:lastTick
				EQUALS:=
				method_argument:
					body_statement:
						OPERATOR:/
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:1000.0
						body_call:
							group:
								name_var:
									exact:
										variable_names:System
										BACKSLASH:\
							DOT:.
							group:
								name_var:
									variable:
										variable_names:currentTimeMillis
								parameters:
				WEAK:~
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:focusArea
									DOT:.
									group:
										parameters:
										name_var:
											variable:
												variable_names:display
							SEMICOLON:;
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:30
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
												group:
													name_var:
														variable:
															variable_names:renderer
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
														COMMA:,
													name_var:
														variable:
															variable_names:moveView
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:19
										name_var:
											variable:
												variable_names:pressedKeys
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:focusArea
												group:
													name_var:
														variable:
															variable_names:undisplay
													parameters:
												DOT:.
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:thisTick
								name_var:
									variable:
										variable_names:lastTick
								EQUALS:=
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:32
										name_var:
											variable:
												variable_names:pressedKeys
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
												group:
													name_var:
														variable:
															variable_names:renderer
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:-0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					methodName:
						name_var:
							variable:
								variable_names:update
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:hero
									group:
										name_var:
											variable:
												variable_names:getArea
										parameters:
									DOT:.
									group:
										parameters:
										name_var:
											variable:
												variable_names:getLocation
								body_call:
									group:
										name_var:
											variable:
												variable_names:focusArea
								OPERATOR:!= 
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										variable_assignment:
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getArea
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getLocation
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:hero
											name_var:
												variable:
													variable_names:focusArea
								body_element:
									body_conditional:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											body_call:
												group:
													name_var:
														variable:
															variable_names:focusArea
											OPERATOR:!= 
										conditional:
											IF:if
										as_body:
											body_element:
												body_line:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:focusArea
															group:
																parameters:
																name_var:
																	variable:
																		variable_names:undisplay
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:17
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:renderer
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:-0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
														COMMA:,
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:renderer
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
												group:
													name_var:
														variable:
															variable_names:Gui
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:31
										name_var:
											variable:
												variable_names:pressedKeys
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:environment
												group:
													name_var:
														variable:
															variable_names:tick
													parameters:
														method_argument:
															body_statement:
																OPERATOR:-
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:lastTick
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:thisTick
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:environment
								typeName:
									type_var:
										class:
											class_variable_names:Environment
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
							conditional:
								FOR:for
							OPERATOR::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									variable:
										variable_names:thisTick
								EQUALS:=
								method_argument:
									body_statement:
										OPERATOR:/
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1000.0
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:System
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:currentTimeMillis
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											OPERATOR:= 
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
											body_call:
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
												group:
													name_var:
														variable:
															variable_names:isRunning
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Entity
				EQUALS:=
				WEAK:~
				variableName:
					name_var:
						variable:
							variable_names:hero
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
			className:
				variable_names:Game
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:main
					static:
						STA:@
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										typeName:
											type_var:
												class:
													class_variable_names:Gui
										parameters:
										NEW:new 
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:args
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:mainStringArgs
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:InputHandler
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
										name_var:
											variable:
												variable_names:addMouseListener
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Environments
																		type_var:
																			exact:
																				BACKSLASH:\
																				variable_names:Forest
															NEW:new 
										name_var:
											variable:
												variable_names:add
									group:
										name_var:
											variable:
												variable_names:environments
									DOT:.
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:hero
									group:
										name_var:
											variable:
												variable_names:changeState
										parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:ImageStates
														group:
															name_var:
																variable:
																	variable_names:male
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									DOT:.
									DOT:.
									group:
										name_var:
											variable:
												variable_names:accept
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:hero
									group:
										name_var:
											variable:
												variable_names:getEntryPoint
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
									group:
										name_var:
											variable:
												variable_names:getArea
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
										name_var:
											variable:
												variable_names:get
									group:
										name_var:
											variable:
												variable_names:environments
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Environments
																		type_var:
																			exact:
																				variable_names:Town
																				BACKSLASH:\
																		ACCESS:->
										name_var:
											variable:
												variable_names:add
									group:
										name_var:
											variable:
												variable_names:environments
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:hero
									DOT:.
									group:
										name_var:
											variable:
												variable_names:load
										parameters:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:load
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:hero
									DOT:.
									group:
										name_var:
											variable:
												variable_names:setSpawn
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
															name_var:
																variable:
																	variable_names:getEntryPoint
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:environments
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
															name_var:
																variable:
																	variable_names:get
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
															name_var:
																variable:
																	variable_names:getArea
							SEMICOLON:;
					body_element:
						body_conditional:
							conditional:
								FOR:for
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
													name_var:
														variable:
															variable_names:load
												group:
													name_var:
														variable:
															variable_names:environment
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
							OPERATOR::
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:environment
								typeName:
									type_var:
										class:
											class_variable_names:Environment
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:changeState
										parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:ImageStates
														group:
															name_var:
																variable:
																	variable_names:idle
									DOT:.
									group:
										name_var:
											variable:
												variable_names:hero
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Hero
															type_var:
																class:
																	class_variable_names:Entities
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:male_hero_base
																group:
																	name_var:
																		variable:
																			variable_names:Images
																DOT:.
								EQUALS:=
								name_var:
									variable:
										variable_names:hero
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:InputHandler
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
										name_var:
											variable:
												variable_names:addKeyboardListener
							SEMICOLON:;
					inline:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:hero
									group:
										name_var:
											variable:
												variable_names:start
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Activities
																		type_var:
																			exact:
																				BACKSLASH:\
																				variable_names:Exploring
															NEW:new 
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:20
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
										NEW:new 
										typeName:
											type_var:
												class:
													class_variable_names:Associations
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			exact:
																				variable_names:Load
																				BACKSLASH:\
																		type_var:
																			class:
																				class_variable_names:Events
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
										NAME:on
									DOT:.
							SEMICOLON:;
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Release
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_line:
							body_statement:
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getKeyInt
														group:
															name_var:
																variable:
																	variable_names:event
										name_var:
											variable:
												variable_names:pressedKeys
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										type_var:
											class:
												class_variable_names:KeyboardEvent
										ACCESS:->
										type_var:
											class:
												class_variable_names:Release
							variableName:
								name_var:
									variable:
										variable_names:event
					methodName:
						name_var:
							variable:
								variable_names:listen
			parentName:
				type_var:
					exact:
						variable_names:Object
						BACKSLASH:\
			interfaceName:
				type_var:
					access_multi:
						ACCESS:->
						type_var:
							class:
								class_variable_names:Listener
						type_var:
							class:
								class_variable_names:InputHandler
						ACCESS:->
						type_var:
							class:
								class_variable_names:MouseEvent
						ACCESS:->
						type_var:
							class:
								class_variable_names:Events
			SEMICOLON:;
			SEMICOLON:;
			variable_declaration:
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:environments
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Environment
											class_variable_names:ArrayList
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:Environment
							class_variable_names:List
				WEAK:~
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:true
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:getKeyInt
															parameters:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:event
										name_var:
											variable:
												variable_names:pressedKeys
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:listen
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:Press
										type_var:
											class:
												class_variable_names:KeyboardEvent
			NEWLINE:$\n
			interfaceName:
				type_var:
					access_multi:
						ACCESS:->
						ACCESS:->
						ACCESS:->
						type_var:
							class:
								class_variable_names:KeyboardEvent
						type_var:
							class:
								class_variable_names:Listener
						type_var:
							class:
								class_variable_names:InputHandler
						type_var:
							class:
								class_variable_names:Events
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:boolean
				ARRAY_TYPE:[]
				variableName:
					name_var:
						variable:
							variable_names:pressedKeys
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:boolean
								array_parameters:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:128
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Drag
										type_var:
											class:
												class_variable_names:MouseEvent
										ACCESS:->
			variable_declaration:
				WEAK:~
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:lastTick
				variableName:
					name_var:
						variable:
							variable_names:thisTick
				typeName:
					type_var:
						class:
							class_variable_names:Double
				EQUALS:=
			NEWLINE:$\n
			objectType:
				CLASS:class 
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Press
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:MouseEvent
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:listen
			NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		anonymous_class:
			HID:<
			className:
				NAME:Cursor
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:input
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			DOT:.
			DOT:.
		NEWLINE:$\n
		anonymous_class:
			HID:<
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			className:
				NAME:BufferedImage
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:image
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:awt
			DOT:.
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
			COLON::
			HID:<
			SEMICOLON:;
			className:
				NAME:ByteOrder
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:input
						BACKSLASH:\
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			DOT:.
			className:
				NAME:Mouse
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:ImageIO
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:javax
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:imageio
						BACKSLASH:\
			HID:<
			COLON::
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:images
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:gui
			DOT:.
			className:
				variable_names:Colours
			objectType:
				CLASS:class 
		variable_declaration:
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									NAME:
										NUMBER:4
			variableName:
				name_var:
					variable:
						variable_names:INT_SIZE
			typeName:
				type_var:
					class:
						class_variable_names:Integer
			EQUALS:=
		anonymous_class:
			HID:<
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:nio
						BACKSLASH:\
			className:
				NAME:IntBuffer
		anonymous_class:
			SEMICOLON:;
			DOT:.
			HID:<
			DOT:.
			className:
				NAME:PixelGrabber
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:image
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:awt
			COLON::
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			HID:<
			className:
				NAME:Sys
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			DOT:.
			COLON::
			SEMICOLON:;
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			DOT:.
			className:
				NAME:GL11
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			HID:<
			COLON::
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			SEMICOLON:;
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			DOT:.
			className:
				NAME:DisplayMode
		NEWLINE:$\n
		class_declaration:
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:gui
			objectType:
				CLASS:class 
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:images
			className:
				variable_names:Drawables
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			className:
				NAME:Display
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			HID:<
		anonymous_class:
			className:
				NAME:FloatBuffer
			DOT:.
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:nio
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			SEMICOLON:;
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			className:
				NAME:GL12
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			className:
				NAME:PixelFormat
			COLON::
			DOT:.
			HID:<
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:input
						BACKSLASH:\
			COLON::
			DOT:.
			className:
				NAME:Keyboard
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:images
			objectType:
				ENUMERATION:enum 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:gui
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:DEFAULT
				typeName:
					type_var:
						class:
							class_variable_names:void
			SEMICOLON:;
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:void
				variableName:
					name_var:
						variable:
							variable_names:ASCEND
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:ImageStates
			NEWLINE:$\n
			DOT:.
		anonymous_class:
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:nio
						BACKSLASH:\
			className:
				NAME:ByteBuffer
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
		NEWLINE:$\n
		class_declaration:
			className:
				variable_names:Images
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:gui
			class_declaration:
				objectType:
					CLASS:class 
				FORSLASH:/
				className:
					variable_names:Flipped
				FORSLASH:/
				NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:images
			NEWLINE:$\n
			DOT:.
			DOT:.
		imports:
			IMPORT_CLASS:
		anonymous_class:
			className:
				NAME:GLU
			DOT:.
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:glu
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
		class_declaration:
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:Menu
			packageName:
				name_var:
					exact:
						WILD:menus
			objectType:
				CLASS:class 
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:place
						typeName:
							type_var:
								class:
									class_variable_names:void
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Area
								variableName:
									name_var:
										variable:
											variable_names:area
							COMMA:,
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:y
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							COMMA:,
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								variableName:
									name_var:
										variable:
											variable_names:x
				className:
					variable_names:Placable
				FORSLASH:/
				FORSLASH:/
				objectType:
					INTERFACE:interface 
				NEWLINE:$\n
				NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n<<