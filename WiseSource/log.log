supports.clws>>
NEWLINE:$\n
anonymous_class:
	SEMICOLON:;
	className:
		NAME:HeroStats
	HID:<
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	COLON::
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:events
			className:
				variable_names:Event
			NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			SEMICOLON:;
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:events
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getEventContext
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:createList
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														exact:
															WILD:on
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Events
																	ACCESS:->
																	type_var:
																		exact:
																			variable_names:eName
																			CAMEL:^
																			BACKSLASH:\
														variableName:
															name_var:
																exact:
																	WILD:event
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														exact:
															WILD:add
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Events
																	ACCESS:->
																	type_var:
																		exact:
																			BACKSLASH:\
																			variable_names:eName
																			CAMEL:^
																	type_var:
																		class:
																			class_variable_names:Listener
														variableName:
															name_var:
																exact:
																	WILD:newListener
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:void
												body_element:
													body_line:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				exact:
																					WILD:Listeners
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																	name_var:
																		variable:
																			variable_names:add
														SEMICOLON:;
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										variable_declaration:
											EQUALS:=
											WEAK:~
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Listenable
														ACCESS:->
														type_var:
															class:
																class_variable_names:List
											variableName:
												name_var:
													concat:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
														name_var:
															exact:
																WILD:Listeners
														PLUS:+
											method_argument:
												body_statement:
													NEWLINE:$\n
													body_call:
														NEWLINE:$\n
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:List
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Listenable
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:getMethod
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
									group:
										name_var:
											variable:
												variable_names:inputClass
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:newMethod
								typeName:
									METHOD_TYPE:Method 
								EQUALS:=
								method_argument:
									method_declaration:
										methodDefinition:
											inline:
												variable_declaration:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Events
																type_var:
																	exact:
																		variable_names:eName
																		CAMEL:^
																		BACKSLASH:\
																ACCESS:->
													variableName:
														name_var:
															exact:
																WILD:event
											typeName:
												type_var:
													class:
														class_variable_names:void
											methodName:
												name_var:
													exact:
														WILD:on
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:newMethodName
											name_var:
												variable:
													variable_names:getMethod
										DOT:.
										group:
											name_var:
												variable:
													variable_names:inputClass
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:eName
						COMMA:,
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
					body_element:
						body_line:
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:newMethod
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
							SEMICOLON:;
					typeName:
						CONTEXT_TYPE:Context 
			variable_declaration:
				inner:
					IN:>
				EQUALS:=
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:List
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Entry
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
							class_variable_names:Map
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:List
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Entry
											class_variable_names:HashMap
								parameters:
				variableName:
					name_var:
						variable:
							variable_names:variableDefs
			variable_declaration:
				inner:
					IN:>
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:eventNameSet
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashSet
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
							class_variable_names:Set
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:eventName
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:String
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				exact:
																					WILD:eventName
																			name_var:
																				variable:
																					variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														CAMEL:^
														variable_names:eventName
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:cev
							SEMICOLON:;
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:declaration
							COLON::
							tokenInstance:
								COLON::
								tokenName:
									NAME:parameter
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											COLON::
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:type_name
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																exact:
																	variable_names:cev
																	BACKSLASH:\
															type_var:
																class:
																	class_variable_names:Events
													methodName:
														ADD:+=
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:getTypeName
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:element
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:name
										variableName:
											NAME:atom
										COLON::
								body_element:
									NEWLINE:$\n
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Events
									type_var:
										exact:
											BACKSLASH:\
											variable_names:cev
							methodName:
								ADD:+=
							class_declaration:
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								parentName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:Object
								DOT:.
								objectType:
									CLASS:class 
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:listen
										inline:
											variable_declaration:
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:cev
															type_var:
																class:
																	class_variable_names:Events
												variableName:
													name_var:
														variable:
															variable_names:event
										typeName:
											type_var:
												class:
													class_variable_names:void
								NEWLINE:$\n
								NEWLINE:$\n
								interfaceName:
									type_var:
										class:
											class_variable_names:Listenable
											template_parameters:
												template_parameter:
													type_var:
														access_multi:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:cev
															SPECIAL_ACCESS:\>
															type_var:
																class:
																	class_variable_names:Events
								packageName:
									name_var:
										exact:
											WILD:events
								className:
									variable_names:Listener
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
										name_var:
											variable:
												variable_names:add
									group:
										name_var:
											variable:
												variable_names:eventNameSet
									DOT:.
							SEMICOLON:;
					inner:
						IN:>
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Events
							methodName:
								ADD:+=
							class_declaration:
								objectType:
									CLASS:class 
								packageName:
									name_var:
										exact:
											WILD:events
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								className:
									variable_names:cev
								parentName:
									type_var:
										class:
											class_variable_names:Event
								DOT:.
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:declaration
							typeName:
								type_var:
									class:
										class_variable_names:IToken
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:bodiesToAdd
							typeName:
								type_var:
									class:
										template_parameters:
											COMMA:,
											template_parameter:
												BODY_TYPE:Body 
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:Map
						COMMA:,
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
					body_element:
						body_conditional:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							conditional:
								FOR:for
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							OPERATOR:: 
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	COMMA:,
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
										conditional:
											IF:if
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
												DOT:.
								body_element:
									NEWLINE:$\n
					inner:
						IN:>
					methodName:
						name_var:
							variable:
								variable_names:addEventMethodsExclusive
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					typeName:
						CONTEXT_TYPE:Context 
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
											group:
												name_var:
													variable:
														variable_names:newMethod
											DOT:.
								typeName:
									type_var:
										class:
											class_variable_names:String
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
						COMMA:,
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:eName
							typeName:
								type_var:
									class:
										class_variable_names:String
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:body
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_manipulate:
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																	name_var:
																		variable:
																			variable_names:add
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
																			name_var:
																				exact:
																					WILD:Listeners
																DOT:.
												methodName:
													name_var:
														exact:
															WILD:add
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Events
																	type_var:
																		exact:
																			BACKSLASH:\
																			variable_names:eName
																			CAMEL:^
																	ACCESS:->
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Listener
														variableName:
															name_var:
																exact:
																	WILD:newListener
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
								body_element:
									body_manipulate:
										variable_declaration:
											WEAK:~
											variableName:
												name_var:
													concat:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
														name_var:
															exact:
																WILD:Listeners
														PLUS:+
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Listenable
														type_var:
															class:
																class_variable_names:List
														ACCESS:->
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Listenable
																		type_var:
																			class:
																				class_variable_names:List
														NEWLINE:$\n
													NEWLINE:$\n
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:createList
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														exact:
															WILD:on
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:event
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Events
																	type_var:
																		exact:
																			BACKSLASH:\
																			CAMEL:^
																			variable_names:eName
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:inputClass
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
										name_var:
											variable:
												variable_names:getMethod
									DOT:.
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:== 
					methodName:
						name_var:
							variable:
								variable_names:addToEventMethod
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:establishedMethod
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:newMethod
								typeName:
									METHOD_TYPE:Method 
								method_argument:
									method_declaration:
										methodDefinition:
											methodName:
												name_var:
													exact:
														WILD:on
											typeName:
												type_var:
													class:
														class_variable_names:void
											inline:
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	exact:
																		BACKSLASH:\
																		CAMEL:^
																		variable_names:eName
																type_var:
																	class:
																		class_variable_names:Events
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:appendToBody
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:body
									group:
										name_var:
											variable:
												variable_names:establishedMethod
									DOT:.
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:establishedMethod
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:inputClass
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newMethodName
								typeName:
									METHOD_TYPE:Method 
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							OPERATOR:: 
							conditional:
								FOR:for
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				DOT:.
																	COMMA:,
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
											body_element:
												NEWLINE:$\n
										conditional:
											IF:if
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										conditional:
											ELSE:else
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	COMMA:,
																	method_argument:
																		body_entries:
																	COMMA:,
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					inner:
						IN:>
					methodName:
						name_var:
							variable:
								variable_names:addEventMethods
					inline:
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:inputClass
							typeName:
								CLASS_TYPE:Class 
						variable_declaration:
							typeName:
								type_var:
									class:
										template_parameters:
											COMMA:,
											template_parameter:
												BODY_TYPE:Body 
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:Map
							variableName:
								name_var:
									variable:
										variable_names:bodiesToAdd
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
			objectType:
				CLASS:class 
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:method
							typeName:
								METHOD_TYPE:Method 
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:eventName
							typeName:
								type_var:
									class:
										class_variable_names:String
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:method
									group:
										name_var:
											variable:
												variable_names:addParameter
										parameters:
											method_argument:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															exact:
																variable_names:eventName
																BACKSLASH:\
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:addParameter
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Events
			NEWLINE:$\n
			NEWLINE:$\n
method_declaration:
	methodDefinition:
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:setup
		inner:
			IN:>
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
				variableName:
					name_var:
						variable:
							variable_names:data
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:menus
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Menu
			class_declaration:
				FORSLASH:/
				FORSLASH:/
				NEWLINE:$\n
				className:
					variable_names:Placable
				objectType:
					INTERFACE:interface 
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:place
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:area
								typeName:
									type_var:
										class:
											class_variable_names:Area
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:y
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								variableName:
									name_var:
										variable:
											variable_names:x
							COMMA:,
							COMMA:,
						typeName:
							type_var:
								class:
									class_variable_names:void
				NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lists
			className:
				NAME:GeneralTokens
			SEMICOLON:;
			HID:<
			COLON::
		SEMICOLON:;
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			className:
				NAME:Iterator
			HID:<
		SEMICOLON:;
		anonymous_class:
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:io
						BACKSLASH:\
			DOT:.
			COLON::
			HID:<
			className:
				NAME:File
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			HID:<
			className:
				NAME:Graphics
			DOT:.
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:awt
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			SEMICOLON:;
			HID:<
			className:
				NAME:ArrayList
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:packageName
			typeName:
				type_var:
					class:
						class_variable_names:String
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:com.rem.qstnr
			EQUALS:=
			inner:
				IN:>
		anonymous_class:
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			DOT:.
			className:
				NAME:Arrays
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			SEMICOLON:;
		SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:lang
						BACKSLASH:\
			HID:<
			className:
				NAME:Runnable
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
		anonymous_class:
			className:
				NAME:HashSet
			DOT:.
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		NEWLINE:$\n
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:javax
			COLON::
			className:
				NAME:JFrame
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:swing
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			HID:<
			className:
				NAME:Scanner
			COLON::
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:generation
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			className:
				NAME:Entry
			COLON::
			DOT:.
			SEMICOLON:;
			HID:<
		anonymous_class:
			className:
				NAME:IParser
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			DOT:.
			SEMICOLON:;
		anonymous_class:
			HID:<
			className:
				NAME:IToken
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:token
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			COLON::
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
		anonymous_class:
			COLON::
			SEMICOLON:;
			className:
				NAME:Listnames
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lists
		anonymous_class:
			DOT:.
			SEMICOLON:;
			className:
				NAME:ListEntry
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:generation
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			DOT:.
			HID:<
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			COLON::
			className:
				NAME:Rules
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lists
			HID:<
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			className:
				NAME:RegexParser
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:rules
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Rules
						group:
							name_var:
								variable:
									variable_names:parser
						DOT:.
			typeName:
				type_var:
					class:
						class_variable_names:List
			inner:
				IN:>
		anonymous_class:
			SEMICOLON:;
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			className:
				NAME:HashMap
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			DOT:.
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			HID:<
			SEMICOLON:;
			className:
				NAME:Map
			DOT:.
		anonymous_class:
			HID:<
			COLON::
			SEMICOLON:;
			className:
				NAME:Comparator
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			className:
				NAME:Thread
			HID:<
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			SEMICOLON:;
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			className:
				NAME:Math
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			HID:<
			className:
				NAME:List
			DOT:.
			COLON::
			SEMICOLON:;
		NEWLINE:$\n
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Rules
						DOT:.
						group:
							name_var:
								variable:
									variable_names:base
			EQUALS:=
			typeName:
				type_var:
					class:
						class_variable_names:IParser
			variableName:
				name_var:
					variable:
						variable_names:rootParser
			inner:
				IN:>
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:generation
			DOT:.
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			className:
				NAME:Generator
		anonymous_class:
			COLON::
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			SEMICOLON:;
			className:
				NAME:StringBuilder
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			className:
				NAME:Set
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
			COLON::
			DOT:.
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			HID:<
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:rem
						BACKSLASH:\
			COLON::
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			className:
				NAME:ParseContext
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:lazyNameParser
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:GeneralTokens
						group:
							name_var:
								variable:
									variable_names:NAME
			typeName:
				type_var:
					class:
						class_variable_names:RegexParser
			inner:
				IN:>
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			COLON::
			SEMICOLON:;
			HID:<
			className:
				NAME:LinkedList
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:listnames
			EQUALS:=
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:List
			method_argument:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:parser
						group:
							name_var:
								variable:
									variable_names:Listnames
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					SEMICOLON:;
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Modifier
									type_var:
										class:
											class_variable_names:Item
									ACCESS:->
						variableName:
							name_var:
								exact:
									WILD:value
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:equipper
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Entity
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:hp
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
									type_var:
										class:
											class_variable_names:Item
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Item
									type_var:
										class:
											class_variable_names:Modifier
									ACCESS:->
						variableName:
							name_var:
								exact:
									WILD:dmg
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					DOT:.
					SEMICOLON:;
					NEWLINE:$\n
					className:
						variable_names:Item
					SEMICOLON:;
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					SEMICOLON:;
					objectType:
						CLASS:class 
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Events
												type_var:
													exact:
														BACKSLASH:\
														variable_names:ChangeItem
												ACCESS:->
									variableName:
										name_var:
											exact:
												WILD:event
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
					packageName:
						name_var:
							exact:
								WILD:items
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:weight
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
									type_var:
										class:
											class_variable_names:Item
						EQUALS:=
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:def
						EQUALS:=
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Item
									type_var:
										class:
											class_variable_names:Modifier
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:name
					NEWLINE:$\n
					class_declaration:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:host
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:Item
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
						NEWLINE:$\n
						parentName:
							type_var:
								exact:
									variable_names:Object
									BACKSLASH:\
						NEWLINE:$\n
						NEWLINE:$\n
						DOT:.
						method_declaration:
							methodDefinition:
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:range
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:inputEntity
														name_var:
															variable:
																variable_names:use
										RETURN:return 
										SEMICOLON:;
								typeName:
									type_var:
										class:
											class_variable_names:Float
								methodName:
									name_var:
										variable:
											variable_names:use
								inline:
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:inputEntity
										typeName:
											type_var:
												class:
													class_variable_names:Entity
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
						NEWLINE:$\n
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						variable_declaration:
							EQUALS:=
							variableName:
								name_var:
									exact:
										WILD:range
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Modifier
										type_var:
											class:
												class_variable_names:Entity
										ACCESS:->
						SEMICOLON:;
						method_declaration:
							methodDefinition:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														exact:
															WILD:range
												group:
													name_var:
														variable:
															variable_names:decrease
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:inputEntity
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:amount
								typeName:
									type_var:
										class:
											class_variable_names:void
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								methodName:
									name_var:
										variable:
											variable_names:decrease
								inline:
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:inputEntity
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:amount
										typeName:
											type_var:
												class:
													class_variable_names:Float
									COMMA:,
						packageName:
							name_var:
								exact:
									WILD:items
						SEMICOLON:;
						NEWLINE:$\n
						packageName:
							name_var:
								exact:
									WILD:entities
						NEWLINE:$\n
						objectType:
							CLASS:class 
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:getValue
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								typeName:
									type_var:
										class:
											class_variable_names:Float
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:range
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:host
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:getEquipper
																			parameters:
														name_var:
															variable:
																variable_names:use
													DOT:.
										SEMICOLON:;
								inline:
						className:
							variable_names:Modifier
						interfaceName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Modifier
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
						DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												type_var:
													exact:
														variable_names:Equip
														BACKSLASH:\
												ACCESS:->
												type_var:
													class:
														class_variable_names:Events
									variableName:
										name_var:
											exact:
												WILD:event
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:event
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
										EQUALS:=
										name_var:
											exact:
												WILD:equipper
							methodName:
								name_var:
									variable:
										variable_names:on
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Item
									type_var:
										class:
											class_variable_names:Modifier
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:maxHp
						EQUALS:=
					DOT:.
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:event
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Events
												type_var:
													exact:
														variable_names:Unequip
														BACKSLASH:\
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										name_var:
											exact:
												WILD:equipper
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Item
														name_var:
															variable:
																variable_names:Modifier
											group:
												name_var:
													variable:
														variable_names:getContext
												parameters:
											group:
												name_var:
													variable:
														variable_names:setEnder
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		parameters:
																		name_var:
																			exact:
																				variable_names:getValue
																				BACKSLASH:\
											DOT:.
											DOT:.
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Aspect
												name_var:
													exact:
														variable_names:createList
														BACKSLASH:\
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Aspect
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Item
												name_var:
													variable:
														variable_names:addGainLoss
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Entity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:Item
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											exact:
												WILD:itemName
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:specificClassName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:gainToken
																CAMEL:^
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:gainEventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:itemClass
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									variable_names:gain
																									BACKSLASH:\
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												typeName:
																													type_var:
																														class:
																															class_variable_names:specificClass
																												NEW:new 
																												parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:this
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:subject
																						DOT:.
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:event
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																COMMA:,
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:loseEventName
																COMMA:,
																COMMA:,
																method_argument:
																	body_entries:
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:event
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:subject
																						DOT:.
																						group:
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														variable_names:this
																														BACKSLASH:\
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:id
																											group:
																												name_var:
																													variable:
																														variable_names:specificClass
																											DOT:.
																							name_var:
																								exact:
																									variable_names:lose
																									BACKSLASH:\
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:itemClass
												SEMICOLON:;
									conditional:
										IF:if
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															exact:
																WILD:boolean_statement
														name_var:
															variable:
																variable_names:gainToken
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:toLowerCase
													DOT:.
													group:
														name_var:
															variable:
																variable_names:gainClass
													group:
														parameters:
														name_var:
															variable:
																variable_names:getName
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:asList
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:gain
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:gainContext
										EQUALS:=
										typeName:
											CONTEXT_TYPE:Context 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Events
													group:
														name_var:
															variable:
																variable_names:addToEventMethod
														parameters:
															COMMA:,
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:itemClass
															method_argument:
																body_statement:
																	body_call:
																		group:
																			NEW:new 
																			typeName:
																				BODY_TYPE:Body 
																			parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:gainEventName
													DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Events
													group:
														name_var:
															variable:
																variable_names:addToEventMethod
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			typeName:
																				BODY_TYPE:Body 
																			parameters:
																			NEW:new 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:loseEventName
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:itemClass
													DOT:.
										variableName:
											name_var:
												variable:
													variable_names:loseContext
										typeName:
											CONTEXT_TYPE:Context 
										EQUALS:=
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:idClass
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:gainClass
																name_var:
																	variable:
																		variable_names:Id
										typeName:
											CLASS_TYPE:Class 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:gainToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
								variable_declaration:
									typeName:
										STATEMENT_TYPE:Statement
									variableName:
										name_var:
											variable:
												variable_names:subject
								COMMA:,
								COMMA:,
								COMMA:,
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:gainEventName
									typeName:
										type_var:
											class:
												class_variable_names:String
								variable_declaration:
									typeName:
										CLASS_TYPE:Class 
									variableName:
										name_var:
											variable:
												variable_names:gainClass
								variable_declaration:
									typeName:
										CLASS_TYPE:Class 
									variableName:
										name_var:
											variable:
												variable_names:itemClass
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:loseEventName
									typeName:
										type_var:
											class:
												class_variable_names:String
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:gainClass
																name_var:
																	exact:
																		variable_names:specificClassName
																		BACKSLASH:\
										EQUALS:=
										typeName:
											CLASS_TYPE:Class 
										variableName:
											name_var:
												variable:
													variable_names:specificClass
									SEMICOLON:;
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												tokenInstance:
													tokenName:
														NAME:boolean_statement
													body_element:
														body_line:
															variable_declaration:
																typeName:
																	STATEMENT_TYPE:Statement
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:loseHeader
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBooleanStatement
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:loseContext
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBooleanStatement
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:gainContext
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																variableName:
																	name_var:
																		variable:
																			variable_names:gainHeader
																typeName:
																	STATEMENT_TYPE:Statement
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:loseEventName
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:itemClass
																			COMMA:,
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											exact:
																												WILD:event
																									DOT:.
																									group:
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:has
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	WILD:id
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:specificClass
																									DOT:.
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:subject
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:gainContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																																COMMA:,
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																								OPERATOR:&& 
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									body_line:
																										SEMICOLON:;
																										body_statement:
																											body_call:
																												DOT:.
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:subject
																												DOT:.
																												group:
																													name_var:
																														exact:
																															WILD:event
																												group:
																													name_var:
																														exact:
																															variable_names:lose
																															BACKSLASH:\
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:specificClass
																																	group:
																																		name_var:
																																			exact:
																																				WILD:id
																																	DOT:.
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				BACKSLASH:\
																																				variable_names:this
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:addToEventMethod
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	group:
																		parameters:
																			COMMA:,
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:gainEventName
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:gainContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:false
																																COMMA:,
																																COMMA:,
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																								body_call:
																									group:
																										name_var:
																											exact:
																												WILD:event
																									group:
																										name_var:
																											exact:
																												variable_names:has
																												BACKSLASH:\
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:specificClass
																														group:
																															name_var:
																																exact:
																																	WILD:id
																									DOT:.
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:subject
																									DOT:.
																								OPERATOR:&&! 
																							as_body:
																								body_element:
																									body_line:
																										body_statement:
																											body_call:
																												DOT:.
																												group:
																													parameters:
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		typeName:
																																			type_var:
																																				class:
																																					class_variable_names:specificClass
																																		NEW:new 
																																		parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				variable_names:this
																																				BACKSLASH:\
																													name_var:
																														exact:
																															variable_names:gain
																															BACKSLASH:\
																												DOT:.
																												group:
																													name_var:
																														exact:
																															WILD:event
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:subject
																										SEMICOLON:;
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:itemClass
																		name_var:
																			variable:
																				variable_names:addToEventMethod
																	DOT:.
												name_var:
													variable:
														variable_names:gainToken
												COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:itemToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:gain
															parameters:
																COMMA:,
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:change_item
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getItem
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:change_item
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Aspects
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								variable_names:className
																								BACKSLASH:\
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Items
												SEMICOLON:;
										tokenName:
											NAME:gain_aspect
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Items
										OPERATOR:->*
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												exact:
																													variable_names:className
																													BACKSLASH:\
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Items
																								NEW:new 
																								parameters:
																				SEMICOLON:;
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:className
																			group:
																				name_var:
																					exact:
																						WILD:itemName
																			DOT:.
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
											group:
												name_var:
													exact:
														WILD:create
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								comment:
									WILD:>	itemToken : element : animation { > Items->\className->* += { \image = `Images.animation(element)`;} }
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:itemToken
									COLON::
									tokenInstance:
										tokenName:
											NAME:attack
										COLON::
										body_element:
											body_manipulate:
												body:
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	exact:
																		WILD:dmg
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Modifier
																							type_var:
																								class:
																									class_variable_names:Item
																							ACCESS:->
															SEMICOLON:;
												type_var:
													access_multi:
														type_var:
															exact:
																variable_names:className
																BACKSLASH:\
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														ACCESS:->
														type_var:
															class:
																class_variable_names:Items
												methodName:
													ADD:+=
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																CAMEL:^
																ACCESS:->
																name_var:
																	exact:
																		WILD:itemName
																name_var:
																	variable:
																		variable_names:itemToken
										variableName:
											name_var:
												variable:
													variable_names:className
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Items
									class_declaration:
										parentName:
											type_var:
												class:
													class_variable_names:Item
										objectType:
											CLASS:class 
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										packageName:
											name_var:
												exact:
													WILD:entities
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Items
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
															NEW:new 
											variableName:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:id
											EQUALS:=
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:items
										className:
											variable_names:className
										NEWLINE:$\n
										SEMICOLON:;
										DOT:.
										DOT:.
									methodName:
										ADD:+=
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Treasury
											DOT:.
											group:
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:className
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:className
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:className
												name_var:
													variable:
														variable_names:paymentTypeDec
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														BODY_TYPE:Body 
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:bodyElementList
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		BODY_TYPE:Body 
																	parameters:
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:bodyElementList
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:Items
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:className
																								ACCESS:->
																group:
																	name_var:
																		variable:
																			variable_names:Events
													typeName:
														CONTEXT_TYPE:Context 
													variableName:
														name_var:
															variable:
																variable_names:context
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:bodyElementList
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																		name_var:
																			variable:
																				variable_names:add
															SEMICOLON:;
													COLON::
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:bodyElementList
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:className
																						name_var:
																							variable:
																								variable_names:Items
																						ACCESS:->
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
									COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										COLON::
										tokenName:
											NAME:value
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														ACCESS:->
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
														ACCESS:->
														type_var:
															class:
																class_variable_names:Items
												body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	exact:
																		WILD:value
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Modifier
																							type_var:
																								class:
																									class_variable_names:Item
																							ACCESS:->
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																													DOT:.
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											variable_names:this
																											BACKSLASH:\
																					COMMA:,
																				NEW:new 
															SEMICOLON:;
									name_var:
										variable:
											variable_names:itemToken
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:itemToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:this
														group:
															parameters:
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:equip
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:unequip
																COMMA:,
																COMMA:,
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							variable_names:getHost
																							BACKSLASH:\
																					parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Traits
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Items
																						name_var:
																							exact:
																								variable_names:className
																								BACKSLASH:\
																						ACCESS:->
																COMMA:,
															name_var:
																variable:
																	variable_names:gain
										tokenName:
											NAME:gain_trait
									variableName:
										NAME:element
									COLON::
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:itemToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															exact:
																variable_names:className
																BACKSLASH:\
														ACCESS:->
														name_var:
															variable:
																variable_names:Items
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_line:
																	variable_assignment:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_quote:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													ACCESS:->
																													name_var:
																														exact:
																															WILD:itemName
																													name_var:
																														variable:
																															variable_names:itemToken
																		EQUALS:=
																		name_var:
																			exact:
																				WILD:name
																	SEMICOLON:;
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
												body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	exact:
																		WILD:def
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											variable_names:this
																											BACKSLASH:\
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																					COMMA:,
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
																				NEW:new 
																EQUALS:=
															SEMICOLON:;
												methodName:
													ADD:+=
										COLON::
										tokenName:
											NAME:defense
									name_var:
										variable:
											variable_names:itemToken
									COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:itemToken
									COLON::
									tokenInstance:
										COLON::
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														ACCESS:->
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
												body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	exact:
																		WILD:weight
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													DOT:.
																													group:
																														name_var:
																															variable:
																																variable_names:getRange
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											variable_names:this
																											BACKSLASH:\
																					COMMA:,
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Modifier
																							type_var:
																								class:
																									class_variable_names:Item
																							ACCESS:->
																EQUALS:=
															SEMICOLON:;
										tokenName:
											NAME:weight
									variableName:
										NAME:element
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:gain_attack
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:this
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:gain
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:equip
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:unequip
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getHost
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Attacks
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Items
																						ACCESS:->
																						name_var:
																							exact:
																								BACKSLASH:\
																								variable_names:className
																COMMA:,
																COMMA:,
																COMMA:,
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									COLON::
									name_var:
										variable:
											variable_names:itemToken
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															exact:
																BACKSLASH:\
																variable_names:className
														ACCESS:->
														type_var:
															class:
																class_variable_names:Items
														ACCESS:->
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
												body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													DOT:.
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																					COMMA:,
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Modifier
																							type_var:
																								class:
																									class_variable_names:Item
																							ACCESS:->
																name_var:
																	exact:
																		WILD:hp
																EQUALS:=
															SEMICOLON:;
												methodName:
													ADD:+=
										tokenName:
											NAME:hp
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														ACCESS:->
														ACCESS:->
														type_var:
															exact:
																variable_names:className
																BACKSLASH:\
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
														type_var:
															class:
																class_variable_names:Items
												body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	exact:
																		WILD:maxHp
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_method:
																											body_statement:
																												body_call:
																													group:
																														parameters:
																															method_argument:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:element
																														name_var:
																															variable:
																																variable_names:getRange
																													group:
																														name_var:
																															variable:
																																variable_names:Entity
																													DOT:.
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											BACKSLASH:\
																											variable_names:this
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Item
																							type_var:
																								class:
																									class_variable_names:Modifier
																							ACCESS:->
															SEMICOLON:;
												methodName:
													ADD:+=
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:itemToken
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:items
					className:
						variable_names:Items
					NEWLINE:$\n
					class_declaration:
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						DOT:.
						NEWLINE:$\n
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:items
						className:
							variable_names:Id
				imports:
					IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:Int
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:amount
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								BACKSLASH:\
								body_call:
									group:
										name_var:
											variable:
												variable_names:amount
								OPERATOR:+= 
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:setValue
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:newValue
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								name_var:
									variable:
										variable_names:value
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newValue
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Integer
				variableName:
					name_var:
						variable:
							variable_names:value
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0
			packageName:
				name_var:
					exact:
						WILD:misc
			objectType:
				CLASS:class 
			SEMICOLON:;
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:quests
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					className:
						variable_names:Quests
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:tileClauses
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:description
										variableName:
											name_var:
												variable:
													variable_names:description
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:&&
												name_var:
													variable:
														variable_names:set
											group:
												name_var:
													variable:
														variable_names:tileClauses
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:fulfill
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	RETURN:return 
																	SEMICOLON:;
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:true
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
											DOT:.
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
														name_var:
															variable:
																variable_names:Quests
									SEMICOLON:;
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:size
											DOT:.
											group:
												name_var:
													variable:
														variable_names:tileClauses
										OPERATOR:> 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			body_conditional:
																				conditional:
																					IF:if
																				as_body:
																					body_element:
																						body_return:
																							SEMICOLON:;
																							RETURN:return 
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:tileClauses
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
														DOT:.
														group:
															name_var:
																exact:
																	WILD:fulfill
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Quests
													OPERATOR:->*
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							methodName:
								name_var:
									variable:
										variable_names:typeDeclaration
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Integer
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
										variableName:
											name_var:
												variable:
													variable_names:tileCount
										EQUALS:=
										WEAK:~
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:questName
										variableName:
											name_var:
												variable:
													variable_names:questName
										EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventBody
														DOT:.
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:super
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:on
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:event
															name_var:
																variable:
																	variable_names:add
										body_element:
											body_conditional:
												body_statement:
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													body_call:
														group:
															name_var:
																exact:
																	WILD:start
													OPERATOR:== 
													body_call:
														group:
															name_var:
																exact:
																	WILD:load
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													OPERATOR:|| 
												as_body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	variable:
																		variable_names:eventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:startQuest
																EQUALS:=
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																COMMA:,
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Quests
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:questName
																						ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventBody
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													WEAK:~
													variableName:
														name_var:
															variable:
																variable_names:eventName
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:event_names
																								name_var:
																									variable:
																										variable_names:element
																								ACCESS:->
													EQUALS:=
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:eventBody
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		BODY_TYPE:Body 
																	NEW:new 
																	parameters:
													typeName:
														BODY_TYPE:Body 
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													typeName:
														CONTEXT_TYPE:Context 
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:questName
																								name_var:
																									variable:
																										variable_names:Quests
																								ACCESS:->
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:eventName
																		COMMA:,
																		method_argument:
																			body_entries:
																		COMMA:,
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																group:
																	name_var:
																		variable:
																			variable_names:Events
																DOT:.
										body_element:
											body_manipulate:
												COLON::
												tokenInstance:
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:eventBody
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								COMMA:,
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																	DOT:.
															SEMICOLON:;
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													COLON::
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										FORSLASH:/
										NEWLINE:$\n
										className:
											variable_names:questName
										parentName:
											type_var:
												class:
													class_variable_names:Quest
										FORSLASH:/
										objectType:
											CLASS:class 
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														variable:
															variable_names:generateDestinations
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:quester
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														SEMICOLON:;
														RETURN:return 
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:fulfill
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:quester
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Area
														variableName:
															name_var:
																variable:
																	variable_names:destinationReached
													COMMA:,
										NEWLINE:$\n
									type_var:
										class:
											class_variable_names:Quests
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileClauses
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:tileClause
															name_var:
																variable:
																	variable_names:add
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileCount
													BACKSLASH:\
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileClause
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:||
															name_var:
																variable:
																	variable_names:set
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
														type_var:
															class:
																class_variable_names:Quests
												methodName:
													ADD:+=
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					name_var:
																						exact:
																							WILD:visited
																					name_var:
																						variable:
																							variable_names:tileCount
																					PLUS:+
													typeName:
														type_var:
															class:
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Area
																class_variable_names:Set
													WEAK:~
													method_argument:
														body_statement:
															NEWLINE:$\n
															body_call:
																NEWLINE:$\n
																group:
																	parameters:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:HashSet
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Area
																	NEW:new 
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:tileClause
														group:
															parameters:
															name_var:
																variable:
																	variable_names:brace
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Quests
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
												variable_declaration:
													WEAK:~
													typeName:
														type_var:
															class:
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Area
																class_variable_names:Set
													EQUALS:=
													method_argument:
														body_statement:
															NEWLINE:$\n
															body_call:
																group:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:HashSet
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Area
																	parameters:
																	NEW:new 
																NEWLINE:$\n
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					PLUS:+
																					name_var:
																						exact:
																							WILD:toVisit
																					name_var:
																						variable:
																							variable_names:tileCount
										body_element:
											body_manipulate:
												COLON::
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:negatedOperator
																		name_var:
																			variable:
																				variable_names:set
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:quest_tile_description
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:negatedOperator
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																ACCESS:->
																																name_var:
																																	exact:
																																		WILD:ORDINAL
																																name_var:
																																	variable:
																																		variable_names:atom
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:negateOperator
																EQUALS:=
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:mapName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:mapName
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:atom
																			DOT:.
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																				name_var:
																					variable:
																						variable_names:replace
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																typeName:
																	STATEMENT_TYPE:Statement
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																				typeName:
																					STATEMENT_TYPE:Statement
																variableName:
																	name_var:
																		variable:
																			variable_names:tileNameClause
															SEMICOLON:;
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tileClause
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:tileNameClause
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
															SEMICOLON:;
													body_element:
														body_line:
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						body_line:
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																																	name_var:
																																		exact:
																																			WILD:toVisited
																																	PLUS:+
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																															name_var:
																																variable:
																																	variable_names:getLocation
																														DOT:.
																														group:
																															name_var:
																																exact:
																																	WILD:quester
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:getEnvironment
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:mapName
																																						name_var:
																																							variable:
																																								variable_names:Environments
																																			DOT:.
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																														DOT:.
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					exact:
																																						WILD:quester
																																			DOT:.
																																			group:
																																				parameters:
																																				name_var:
																																					variable:
																																						variable_names:getLocation
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:Tiles
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												concat:
																																													name_var:
																																														variable:
																																															variable_names:tileName
																																													name_var:
																																														variable:
																																															variable_names:mapName
																																													PLUS:+
																																			DOT:.
																															name_var:
																																variable:
																																	variable_names:getNodeFromId
																										name_var:
																											variable:
																												variable_names:add
																							SEMICOLON:;
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																	group:
																		name_var:
																			exact:
																				WILD:generateDestinations
															SEMICOLON:;
													COLON::
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														access:
																															ACCESS:->
																															name_var:
																																exact:
																																	WILD:INTEGER
																															name_var:
																																variable:
																																	variable_names:atom
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	DOT:.
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														concat:
																															name_var:
																																variable:
																																	variable_names:tileCount
																															name_var:
																																exact:
																																	WILD:visited
																															PLUS:+
																							group:
																								name_var:
																									variable:
																										variable_names:size
																								parameters:
																							DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:tileName
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:tileName
																											name_var:
																												variable:
																													variable_names:atom
																											ACCESS:->
																			group:
																				name_var:
																					variable:
																						variable_names:replace
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																			DOT:.
																EQUALS:=
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
																body_call:
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:fulfill
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_line:
																										body_statement:
																											body_call:
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				WILD:destinationReached
																													name_var:
																														variable:
																															variable_names:add
																												DOT:.
																												group:
																													name_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			concat:
																																				name_var:
																																					variable:
																																						variable_names:tileCount
																																				name_var:
																																					exact:
																																						WILD:visited
																																				PLUS:+
																										SEMICOLON:;
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																																	name_var:
																																		exact:
																																			WILD:toVisit
																																	PLUS:+
																									DOT:.
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	WILD:destinationReached
																										name_var:
																											variable:
																												variable_names:contains
																					body_element:
																						NEWLINE:$\n
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:quest_destination
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:tileClause
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		STATEMENT_TYPE:Statement
																	parameters:
													typeName:
														STATEMENT_TYPE:Statement
													EQUALS:=
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													COMMA:,
													method_argument:
														body_entries:
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		EQUALS:=
																		name_var:
																			variable:
																				variable_names:status
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:FAIL
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
									SEMICOLON:;
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:data
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:startQuest
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													COMMA:,
													method_argument:
														body_entries:
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			body_line:
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:currentActivityIndex
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:0
																					EQUALS:=
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								DOT:.
																								group:
																									name_var:
																										variable:
																											variable_names:activities
																								group:
																									name_var:
																										variable:
																											variable_names:get
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															exact:
																																NAME:
																																	NUMBER:0
																					EQUALS:=
																					name_var:
																						variable:
																							variable_names:currentActivity
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:IN_PROGRESS
																					name_var:
																						variable:
																							variable_names:status
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:false
																		body_call:
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:isEmpty
																			group:
																				name_var:
																					exact:
																						WILD:activities
																		OPERATOR:==
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			body_line:
																				variable_assignment:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:FAIL
																					EQUALS:=
																					name_var:
																						variable:
																							variable_names:status
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	conditional:
																		ELSE:else
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:addToEventMethod
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
									SEMICOLON:;
					DOT:.
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:behaviours
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:canChase
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
							inline:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:entities
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						static:
							STA:@
						variableName:
							name_var:
								variable:
									variable_names:IN_PROGRESS
						EQUALS:=
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getRange
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									SEMICOLON:;
									RETURN:return 
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:user
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											group:
												name_var:
													variable:
														variable_names:currentActivity
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Events
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:Tick
																				NEW:new 
															name_var:
																variable:
																	variable_names:on
														group:
															name_var:
																variable:
																	variable_names:currentActivity
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Activity
									variableName:
										name_var:
											variable:
												variable_names:activity
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:user
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:status
										body_call:
											group:
												name_var:
													variable:
														variable_names:UNSTARTED
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:StartQuest
																									BACKSLASH:\
																							type_var:
																								class:
																									class_variable_names:Events
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:FAIL
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:2
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					class_declaration:
						objectType:
							CLASS:class 
						NEWLINE:$\n
						FORSLASH:/
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Id
									type_var:
										class:
											class_variable_names:Usable
									ACCESS:->
						FORSLASH:/
						className:
							variable_names:Id
					packageName:
						name_var:
							exact:
								WILD:behaviours
					variable_declaration:
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Activity
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:currentActivity
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getId
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Quest
										ACCESS:->
							inline:
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						variableName:
							name_var:
								variable:
									variable_names:currentActivityIndex
						WEAK:~
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					DOT:.
					class_declaration:
						FORSLASH:/
						class_declaration:
							variable_declaration:
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:host
								typeName:
									type_var:
										class:
											class_variable_names:Quest
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
							objectType:
								CLASS:class 
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:void
									inline:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															exact:
																variable_names:Success
																BACKSLASH:\
														ACCESS:->
														type_var:
															class:
																class_variable_names:Events
											variableName:
												name_var:
													variable:
														variable_names:event
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:host
													DOT:.
													group:
														name_var:
															variable:
																variable_names:advanceTo
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:nextIndex
							NEWLINE:$\n
							SEMICOLON:;
							parentName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											class:
												class_variable_names:Success
										ACCESS:->
							FORSLASH:/
							NEWLINE:$\n
							SEMICOLON:;
							NEWLINE:$\n
							className:
								variable_names:Success
							NEWLINE:$\n
							variable_declaration:
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:nextIndex
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:-1
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							FORSLASH:/
						NEWLINE:$\n
						NEWLINE:$\n
						FORSLASH:/
						NEWLINE:$\n
						objectType:
							CLASS:class 
						className:
							variable_names:Listeners
						class_declaration:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Quest
								variableName:
									name_var:
										variable:
											variable_names:host
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								EQUALS:=
							objectType:
								CLASS:class 
							className:
								variable_names:Fail
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									inline:
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:event
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															exact:
																BACKSLASH:\
																variable_names:Fail
														type_var:
															class:
																class_variable_names:Events
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:host
													group:
														name_var:
															variable:
																variable_names:on
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:(Events.Fail)event
											SEMICOLON:;
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
							FORSLASH:/
							FORSLASH:/
							NEWLINE:$\n
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											class:
												class_variable_names:Listener
										type_var:
											class:
												class_variable_names:Fail
							SEMICOLON:;
							NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									variableName:
										name_var:
											variable:
												variable_names:newIndex
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:advanceTo
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										OPERATOR:< 
										body_call:
											group:
												name_var:
													variable:
														variable_names:newIndex
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											group:
												name_var:
													variable:
														variable_names:size
												parameters:
											DOT:.
									as_body:
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:activities
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:newIndex
																	name_var:
																		variable:
																			variable_names:get
													name_var:
														variable:
															variable_names:currentActivity
												SEMICOLON:;
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newIndex
													EQUALS:=
													name_var:
														variable:
															variable_names:currentActivityIndex
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:SUCCESS
													name_var:
														variable:
															variable_names:status
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						NEWLINE:$\n
						objectType:
							CLASS:class 
						FORSLASH:/
						className:
							variable_names:TargetCriteria
						method_declaration:
							methodDefinition:
								inline:
									variable_declaration:
										variableName:
											name_var:
												exact:
													WILD:user
										typeName:
											type_var:
												class:
													class_variable_names:Entity
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
										RETURN:return 
								methodName:
									name_var:
										variable:
											variable_names:satisfies
								body_element:
									NEWLINE:$\n
						FORSLASH:/
						WEAK:~
						parentName:
							type_var:
								exact:
									BACKSLASH:\
									variable_names:EntityCriteria
						NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:quests
					parentName:
						type_var:
							class:
								class_variable_names:Object
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Quest
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:activities
																					group:
																						name_var:
																							variable:
																								variable_names:size
																						parameters:
																					DOT:.
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				ACCESS:->
																				type_var:
																					exact:
																						BACKSLASH:\
																						variable_names:Success
																				type_var:
																					class:
																						class_variable_names:Listeners
																				type_var:
																					class:
																						class_variable_names:Quest
																	NEW:new 
											group:
												name_var:
													variable:
														variable_names:newActivity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:add
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newActivity
									typeName:
										type_var:
											class:
												class_variable_names:Activity
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newActivity
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newActivity
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Listeners
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Quest
																				type_var:
																					exact:
																						BACKSLASH:\
																						variable_names:Fail
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																	NEW:new 
												name_var:
													variable:
														variable_names:add
											DOT:.
					NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getTargetCriteria
							typeName:
								type_var:
									exact:
										variable_names:EntityCriteria
										BACKSLASH:\
							inline:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:TargetCriteria
																type_var:
																	class:
																		class_variable_names:Quest
													NEW:new 
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					SEMICOLON:;
					SEMICOLON:;
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:UNSTARTED
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						static:
							STA:@
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Activity
									type_var:
										class:
											class_variable_names:List
						variableName:
							name_var:
								variable:
									variable_names:activities
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										NEW:new 
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:List
													type_var:
														class:
															class_variable_names:Activity
													ACCESS:->
										parameters:
						WEAK:~
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:SUCCESS
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
					variable_declaration:
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:status
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:UNSTARTED
					NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					class_declaration:
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						packageName:
							name_var:
								exact:
									WILD:mods
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:conditions
						DOT:.
						DOT:.
						NEWLINE:$\n
						className:
							variable_names:Id
					NEWLINE:$\n
					className:
						variable_names:Condition
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:description
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					DOT:.
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:conditions
					packageName:
						name_var:
							exact:
								WILD:mods
					objectType:
						CLASS:class 
					DOT:.
					method_declaration:
						methodDefinition:
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Condition
										type_var:
											class:
												class_variable_names:Id
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:name
						typeName:
							type_var:
								class:
									class_variable_names:String
					SEMICOLON:;
					SEMICOLON:;
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:entities
					objectType:
						CLASS:class 
					DOT:.
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:conditions
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:data
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:addEventMethods
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Condition
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			class:
																				template_parameters:
																					COMMA:,
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:String
																					template_parameter:
																						BODY_TYPE:Body 
																				class_variable_names:HashMap
																	NEW:new 
																	parameters:
													COMMA:,
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										variableName:
											name_var:
												variable:
													variable_names:loseContext
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:addToEventMethod
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:loss
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							variable_names:conditionName
																							BACKSLASH:\
																					name_var:
																						variable:
																							variable_names:Conditions
															method_argument:
																body_entries:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:Events
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:loseContext
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					COMMA:,
																					COMMA:,
																				name_var:
																					exact:
																						variable_names:getAcquisition
																						BACKSLASH:\
														group:
															name_var:
																variable:
																	variable_names:gainBody
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:true
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:gainContext
																					COMMA:,
																				name_var:
																					exact:
																						variable_names:getAcquisition
																						BACKSLASH:\
														group:
															name_var:
																variable:
																	variable_names:gainBody
														DOT:.
										tokenName:
											NAME:acquisition
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												exact:
													variable_names:conditionName
													BACKSLASH:\
											type_var:
												class:
													class_variable_names:Conditions
									methodName:
										ADD:+=
									method_declaration:
										methodDefinition:
											typeName:
												type_var:
													class:
														class_variable_names:Boolean
											inline:
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:candidate
													typeName:
														type_var:
															class:
																class_variable_names:Entity
											methodName:
												name_var:
													variable:
														variable_names:hasRequirements
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										WEAK:~
										variableName:
											name_var:
												variable:
													variable_names:isFirst
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
										EQUALS:=
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
														parameters:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:lossBody
										typeName:
											BODY_TYPE:Body 
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:candidate
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:candidate
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:tickBody
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														typeName:
															BODY_TYPE:Body 
														NEW:new 
										typeName:
											BODY_TYPE:Body 
										EQUALS:=
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:eventHost
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:event
														group:
															parameters:
															name_var:
																exact:
																	WILD:getHost
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											body_line:
												variable_declaration:
													WEAK:~
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										variable_names:conditionName
																										BACKSLASH:\
																								name_var:
																									variable:
																										variable_names:Conditions
																								ACCESS:->
																		method_argument:
																			body_entries:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:eventName
																		COMMA:,
																	name_var:
																		variable:
																			variable_names:addToEventMethod
																group:
																	name_var:
																		variable:
																			variable_names:Events
																DOT:.
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													typeName:
														CONTEXT_TYPE:Context 
													EQUALS:=
												SEMICOLON:;
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
														group:
															name_var:
																variable:
																	variable_names:equals
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:gain
														DOT:.
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	variable:
																		variable_names:eventBody
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:gainBody
																EQUALS:=
													body_element:
														NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:equals
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:tick
														group:
															name_var:
																variable:
																	variable_names:eventName
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:tickBody
																name_var:
																	variable:
																		variable_names:eventBody
															SEMICOLON:;
												conditional:
													ELSE:else
													IF:if
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	variable:
																		variable_names:eventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:loss
																EQUALS:=
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:lose
															name_var:
																variable:
																	variable_names:equals
										body_element:
											body_conditional:
												conditional:
													ELSE:else
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:equals
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:loss
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:eventName
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	variable:
																		variable_names:eventBody
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:lossBody
															SEMICOLON:;
										tokenName:
											NAME:event
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												COLON::
												tokenInstance:
													COLON::
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventContext
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:eventBody
															SEMICOLON:;
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												name_var:
													variable:
														variable_names:element
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													WEAK:~
													variableName:
														name_var:
															variable:
																variable_names:eventBody
													EQUALS:=
													typeName:
														BODY_TYPE:Body 
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	NEW:new 
																	typeName:
																		BODY_TYPE:Body 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									exact:
																										WILD:event_names
																								name_var:
																									variable:
																										variable_names:element
																								ACCESS:->
													variableName:
														name_var:
															variable:
																variable_names:eventName
													typeName:
														type_var:
															class:
																class_variable_names:String
													WEAK:~
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:put
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventBody
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
																COMMA:,
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:eventBodies
												SEMICOLON:;
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:acquisition
													COLON::
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tickBody
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								COMMA:,
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventHost
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:tickContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:true
																								COMMA:,
																							name_var:
																								exact:
																									variable_names:getAcquisition
																									BACKSLASH:\
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												tokenInstance:
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tickBody
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:Entity
																						group:
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:true
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventHost
																								COMMA:,
																							name_var:
																								variable:
																									variable_names:getImposition
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
															SEMICOLON:;
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:imposition
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:accumulation
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:gainBody
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_return:
																	RETURN:return 
																	SEMICOLON:;
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:true
												name_var:
													variable:
														variable_names:add
											DOT:.
											group:
												name_var:
													variable:
														variable_names:requirementsBody
									SEMICOLON:;
							body_element:
								body_manipulate:
									class_declaration:
										parentName:
											type_var:
												class:
													class_variable_names:Condition
										packageName:
											name_var:
												exact:
													WILD:mods
										objectType:
											CLASS:class 
										NEWLINE:$\n
										className:
											variable_names:conditionName
										method_declaration:
											methodDefinition:
												inline:
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:conditionName
														RETURN:return 
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:conditions
										DOT:.
										DOT:.
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Condition
											variableName:
												name_var:
													exact:
														WILD:id
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Id
														ACCESS:->
														type_var:
															class:
																class_variable_names:Condition
											EQUALS:=
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:entities
										SEMICOLON:;
										DOT:.
										NEWLINE:$\n
										NEWLINE:$\n
										interfaceName:
											type_var:
												class:
													class_variable_names:Source
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:conditionDescription
														RETURN:return 
														SEMICOLON:;
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												inline:
												methodName:
													name_var:
														variable:
															variable_names:getDescription
									type_var:
										class:
											class_variable_names:Conditions
									methodName:
										ADD:+=
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:eventBodies
											group:
												name_var:
													variable:
														variable_names:put
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:gainBody
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:gain
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
											DOT:.
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:conditionName
																				name_var:
																					variable:
																						variable_names:equals
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:conditionName
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				RETURN:return 
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Conditions
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:conditionName
																											ACCESS:->
																								NEW:new 
																								parameters:
																	conditional:
																		IF:if
												name_var:
													variable:
														variable_names:prependToBody
											group:
												name_var:
													variable:
														variable_names:Conditions
											DOT:.
									SEMICOLON:;
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:imposition
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			group:
																				name_var:
																					variable:
																						variable_names:getImposition
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:true
																					COMMA:,
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:gainBody
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:lossBody
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																				name_var:
																					variable:
																						variable_names:getImposition
										body_element:
											NEWLINE:$\n
									COLON::
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:loss
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:lossBody
												name_var:
													variable:
														variable_names:put
											group:
												name_var:
													variable:
														variable_names:eventBodies
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:conditionName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:declarationToken
																ACCESS:->
																name_var:
																	exact:
																		WILD:conditionName
																CAMEL:^
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:description
																					name_var:
																						variable:
																							variable_names:declarationToken
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:conditionDescription
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Events
													DOT:.
													group:
														name_var:
															variable:
																variable_names:addToEventMethod
														parameters:
															method_argument:
																body_entries:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:gain
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:Conditions
																					ACCESS:->
																					name_var:
																						exact:
																							variable_names:conditionName
																							BACKSLASH:\
										typeName:
											CONTEXT_TYPE:Context 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:gainContext
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_entries:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:Conditions
																					ACCESS:->
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:conditionName
															COMMA:,
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:tick
														name_var:
															variable:
																variable_names:addToEventMethod
													group:
														name_var:
															variable:
																variable_names:Events
													DOT:.
										variableName:
											name_var:
												variable:
													variable_names:tickContext
										EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											DOT:.
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:requirementsBody
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:hasRequirements
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Conditions
														name_var:
															exact:
																variable_names:conditionName
																BACKSLASH:\
									SEMICOLON:;
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												COLON::
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														body_manipulate:
															tokenInstance:
																tokenName:
																	NAME:has_chance
																body_element:
																	NEWLINE:$\n
																COLON::
																body_element:
																	body_line:
																		SEMICOLON:;
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:chanceHeader
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:quark
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:getChance
																					name_var:
																						variable:
																							variable_names:add
																				DOT:.
																body_element:
																	NEWLINE:$\n
															variableName:
																NAME:quark
															name_var:
																variable:
																	variable_names:atom
															COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															as_body:
																body_element:
																	body_conditional:
																		conditional:
																			ELSE:else
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:tickBody
																							group:
																								name_var:
																									variable:
																										variable_names:add
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														IF:if
																														ELSE:else
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chanceHeader
																													as_body:
																														body_element:
																															body_line:
																																SEMICOLON:;
																																body_statement:
																																	body_call:
																																		DOT:.
																																		group:
																																			name_var:
																																				exact:
																																					WILD:lose
																																			parameters:
																																				COMMA:,
																																				method_argument:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:this
																																				method_argument:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									exact:
																																										WILD:id
																																		group:
																																			name_var:
																																				exact:
																																					WILD:event
																																		DOT:.
																																		group:
																																			parameters:
																																			name_var:
																																				exact:
																																					WILD:getHost
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:add
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_line:
																																SEMICOLON:;
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				exact:
																																					WILD:lose
																																			parameters:
																																				method_argument:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									exact:
																																										WILD:id
																																				COMMA:,
																																				method_argument:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:this
																																		group:
																																			name_var:
																																				exact:
																																					WILD:getHost
																																			parameters:
																																		DOT:.
																																		group:
																																			name_var:
																																				exact:
																																					WILD:event
																																		DOT:.
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chanceHeader
																							group:
																								name_var:
																									variable:
																										variable_names:tickBody
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		variable_assignment:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:true
																			EQUALS:=
																			name_var:
																				variable:
																					variable_names:isFirst
																		SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:atom
																				name_var:
																					exact:
																						WILD:boolean_statement
																				ACCESS:->
																OPERATOR:== 
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:chance_pair
													body_element:
														body_line:
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					STATEMENT_TYPE:Statement
																				parameters:
																				NEW:new 
																typeName:
																	STATEMENT_TYPE:Statement
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:chanceHeader
															SEMICOLON:;
													body_element:
														body_conditional:
															conditional:
																ELSE:else
															as_body:
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						EQUALS:=
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						name_var:
																							variable:
																								variable_names:isFirst
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:tickBody
																							group:
																								name_var:
																									variable:
																										variable_names:add
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					parameters:
																																						COMMA:,
																																						method_argument:
																																							body_statement:
																																								body_call:
																																									group:
																																										name_var:
																																											variable:
																																												variable_names:tickContext
																																						method_argument:
																																							body_statement:
																																								body_call:
																																									group:
																																										name_var:
																																											access:
																																												ACCESS:->
																																												name_var:
																																													variable:
																																														variable_names:atom
																																												name_var:
																																													exact:
																																														WILD:boolean_statement
																																					name_var:
																																						exact:
																																							variable_names:getBooleanStatement
																																							BACKSLASH:\
																													as_body:
																														body_element:
																															NEWLINE:$\n
																														body_element:
																															body_conditional:
																																conditional:
																																	IF:if
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chanceHeader
																																as_body:
																																	body_element:
																																		body_line:
																																			body_statement:
																																				body_call:
																																					DOT:.
																																					group:
																																						name_var:
																																							exact:
																																								WILD:event
																																					group:
																																						name_var:
																																							exact:
																																								WILD:getHost
																																						parameters:
																																					DOT:.
																																					group:
																																						parameters:
																																							COMMA:,
																																							method_argument:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:this
																																							method_argument:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												exact:
																																													WILD:id
																																						name_var:
																																							exact:
																																								WILD:lose
																																			SEMICOLON:;
																													conditional:
																														IF:if
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:tickBody
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:add
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													as_body:
																														body_element:
																															body_conditional:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chanceHeader
																																as_body:
																																	body_element:
																																		body_line:
																																			body_statement:
																																				body_call:
																																					group:
																																						parameters:
																																						name_var:
																																							exact:
																																								WILD:getHost
																																					group:
																																						parameters:
																																							COMMA:,
																																							method_argument:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												exact:
																																													WILD:id
																																							method_argument:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:this
																																						name_var:
																																							exact:
																																								WILD:lose
																																					group:
																																						name_var:
																																							exact:
																																								WILD:event
																																					DOT:.
																																					DOT:.
																																			SEMICOLON:;
																																conditional:
																																	IF:if
																														body_element:
																															NEWLINE:$\n
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						exact:
																																							BACKSLASH:\
																																							variable_names:getBooleanStatement
																																					parameters:
																																						method_argument:
																																							body_statement:
																																								body_call:
																																									group:
																																										name_var:
																																											access:
																																												name_var:
																																													variable:
																																														variable_names:atom
																																												name_var:
																																													exact:
																																														WILD:boolean_statement
																																												ACCESS:->
																																						method_argument:
																																							body_statement:
																																								body_call:
																																									group:
																																										name_var:
																																											variable:
																																												variable_names:tickContext
																																						COMMA:,
																													conditional:
																														ELSE:else
																														IF:if
																					SEMICOLON:;
																		conditional:
																			ELSE:else
																body_element:
																	NEWLINE:$\n
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										tokenName:
											NAME:to_lose
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
														parameters:
										variableName:
											name_var:
												variable:
													variable_names:requirementsBody
										typeName:
											BODY_TYPE:Body 
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				variable:
																					variable_names:Conditions
																			name_var:
																				exact:
																					BACKSLASH:\
																					variable_names:conditionName
																			ACCESS:->
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:eventBodies
													COMMA:,
												name_var:
													variable:
														variable_names:addEventMethodsExclusive
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_conditional:
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:element
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:candidate
																													COMMA:,
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:false
																													COMMA:,
																												name_var:
																													exact:
																														BACKSLASH:\
																														variable_names:getRequirement
																				as_body:
																					body_element:
																						body_return:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																							RETURN:return 
																							SEMICOLON:;
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:requirementsBody
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:requirement
									variableName:
										NAME:element
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:tick
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:tickBody
													COMMA:,
												name_var:
													variable:
														variable_names:put
											DOT:.
											group:
												name_var:
													variable:
														variable_names:eventBodies
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:eventBodies
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															type_var:
																class:
																	class_variable_names:HashMap
																	template_parameters:
																		template_parameter:
																			BODY_TYPE:Body 
																		COMMA:,
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:String
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															BODY_TYPE:Body 
														COMMA:,
														template_parameter:
															type_var:
																class:
																	class_variable_names:String
													class_variable_names:HashMap
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					className:
						variable_names:Conditions
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:id
													group:
														name_var:
															access:
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																name_var:
																	variable:
																		variable_names:Conditions
																ACCESS:->
													DOT:.
									SEMICOLON:;
									RETURN:return 
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:getId
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							static:
								STA:@
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											exact:
												WILD:conditionName
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							typeName:
								type_var:
									class:
										class_variable_names:Condition
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					NEWLINE:$\n
					class_declaration:
						packageName:
							name_var:
								exact:
									WILD:entities
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:create
								body_element:
									NEWLINE:$\n
								static:
									STA:@
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										RETURN:return 
										SEMICOLON:;
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Relationship
											ACCESS:->
											type_var:
												class:
													class_variable_names:Reason
								inline:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:reasonName
								body_element:
									NEWLINE:$\n
						DOT:.
						objectType:
							CLASS:class 
						className:
							variable_names:Reasons
						NEWLINE:$\n
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:relations
						NEWLINE:$\n
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:influence
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:name
																		OPERATOR:== 
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_assignment:
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:reasonName
																					name_var:
																						exact:
																							WILD:name
																				SEMICOLON:;
																	conditional:
																		IF:if
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_assignment:
																					name_var:
																						exact:
																							WILD:description
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:descriptionBuilder
																					EQUALS:=
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		OPERATOR:== 
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:description
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														ACCESS:->
														ACCESS:->
														name_var:
															variable:
																variable_names:Reasons
														name_var:
															variable:
																variable_names:Relationship
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:reasonName
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:variableName
													typeName:
														type_var:
															class:
																class_variable_names:String
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							concat:
																								name_var:
																									exact:
																										WILD:_
																								PLUS:+
																								name_var:
																									variable:
																										variable_names:index
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:variableName
												methodName:
													ADD:+=
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Reasons
														type_var:
															class:
																class_variable_names:Relationship
														ACCESS:->
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:variableIndex
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:descriptionBuilder
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					concat:
																						PLUS:+
																						name_var:
																							exact:
																								WILD:+\"
																						name_var:
																							exact:
																								WILD:\"+_
																						name_var:
																							variable:
																								variable_names:variableName
																						PLUS:+
															name_var:
																variable:
																	variable_names:append
												SEMICOLON:;
										body_element:
											body_line:
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:index
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
													typeName:
														type_var:
															class:
																class_variable_names:String
													EQUALS:=
												SEMICOLON:;
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:descriptionBuilder
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
															name_var:
																variable:
																	variable_names:append
												SEMICOLON:;
										COLON::
										tokenName:
											NAME:description
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Reasons
											type_var:
												class:
													class_variable_names:Relationship
											ACCESS:->
									class_declaration:
										DOT:.
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										DOT:.
										parentName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Relationship
													ACCESS:->
													type_var:
														class:
															class_variable_names:Reason
										objectType:
											CLASS:class 
										packageName:
											name_var:
												exact:
													WILD:relations
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:entities
										className:
											variable_names:reasonClassName
									methodName:
										ADD:+=
							inner:
								IN:>
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:reasonName
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					name_var:
																						exact:
																							WILD:reasonName
																					ACCESS:->
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Reasons
														ACCESS:->
														name_var:
															variable:
																variable_names:Relationship
										body_call:
											group:
												name_var:
													exact:
														WILD:create
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:reasonClassName
																											ACCESS:->
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Reasons
																											type_var:
																												class:
																													class_variable_names:Relationship
																								parameters:
																								NEW:new 
																				SEMICOLON:;
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		OPERATOR:|| 
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:replace
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:reasonClassName
																				name_var:
																					variable:
																						variable_names:equals
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:reasonName
																			DOT:.
																			DOT:.
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:reasonName
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:reasonName
																	conditional:
																		IF:if
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:descriptionBuilder
										typeName:
											type_var:
												class:
													class_variable_names:StringBuilder
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														typeName:
															type_var:
																class:
																	class_variable_names:StringBuilder
														NEW:new 
										EQUALS:=
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:reasonClassName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD: 
														name_var:
															variable:
																variable_names:replace
													group:
														name_var:
															variable:
																variable_names:reasonName
													DOT:.
									SEMICOLON:;
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										access_multi:
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:reasonName
											ACCESS:->
											type_var:
												class:
													class_variable_names:Relationship
											ACCESS:->
											type_var:
												class:
													class_variable_names:Reasons
									class_declaration:
										NEWLINE:$\n
										objectType:
											CLASS:class 
										packageName:
											name_var:
												exact:
													WILD:entities
										DOT:.
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:relations
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										parentName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Reason
													ACCESS:->
													type_var:
														class:
															class_variable_names:Factory
													type_var:
														class:
															class_variable_names:Relationship
													ACCESS:->
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Reason
															type_var:
																class:
																	class_variable_names:Relationship
															ACCESS:->
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:create
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		parameters:
																		typeName:
																			type_var:
																				access_multi:
																					type_var:
																						class:
																							class_variable_names:Relationship
																					ACCESS:->
																					ACCESS:->
																					type_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:reasonName
																					type_var:
																						class:
																							class_variable_names:Reasons
										DOT:.
										className:
											variable_names:Factory
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							methodName:
								name_var:
									variable:
										variable_names:declaration
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variable_declaration:
										typeName:
											type_var:
												access_multi:
													type_var:
														exact:
															BACKSLASH:\
															variable_names:Reasons
													ACCESS:->
													ACCESS:->
													type_var:
														class:
															class_variable_names:ListMaps
													type_var:
														exact:
															variable_names:_Int
															BACKSLASH:\
										WEAK:~
										variableName:
											name_var:
												exact:
													WILD:influences
									type_var:
										class:
											class_variable_names:Relationship
									methodName:
										ADD:+=
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:createListMap
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Int
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Reason
																			name_var:
																				variable:
																					variable_names:Relationship
							inner:
								IN:>
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
					class_declaration:
						SEMICOLON:;
						method_declaration:
							methodDefinition:
								methodName:
									name_var:
										variable:
											variable_names:equals
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:otherReason
												OPERATOR:&& 
												OPERATOR:!= 
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:name
														name_var:
															variable:
																variable_names:equals
													group:
														name_var:
															exact:
																WILD:name
													DOT:.
													DOT:.
													group:
														name_var:
															exact:
																WILD:((Reason)otherReason)
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										RETURN:return 
										SEMICOLON:;
								typeName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:boolean
								inline:
									variable_declaration:
										typeName:
											type_var:
												exact:
													BACKSLASH:\
													variable_names:Object
										variableName:
											name_var:
												variable:
													variable_names:otherReason
								body_element:
									NEWLINE:$\n
						DOT:.
						DOT:.
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:name
							WEAK:~
						NEWLINE:$\n
						method_declaration:
							methodDefinition:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														name_var:
															variable:
																variable_names:hashCode
													group:
														name_var:
															exact:
																WILD:name
													DOT:.
										RETURN:return 
								inline:
								methodName:
									name_var:
										variable:
											variable_names:hashCode
								typeName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:int
								body_element:
									NEWLINE:$\n
						packageName:
							name_var:
								exact:
									WILD:relations
						NEWLINE:$\n
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							WEAK:~
							variableName:
								name_var:
									variable:
										variable_names:description
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							EQUALS:=
						NEWLINE:$\n
						SEMICOLON:;
						class_declaration:
							packageName:
								name_var:
									exact:
										WILD:relations
							method_declaration:
								methodDefinition:
									inline:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:create
									body_element:
										body_return:
											RETURN:return 
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Relationship
												type_var:
													class:
														class_variable_names:Reason
												ACCESS:->
							objectType:
								CLASS:class 
							DOT:.
							DOT:.
							className:
								variable_names:Factory
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:entities
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							NEWLINE:$\n
						className:
							variable_names:Reason
						NEWLINE:$\n
						NEWLINE:$\n
						objectType:
							CLASS:class 
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						packageName:
							name_var:
								exact:
									WILD:entities
						NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:relations
					className:
						variable_names:Relationship
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:influences
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:Int
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:amount
																	NEW:new 
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:reason
													COMMA:,
												name_var:
													variable:
														variable_names:add
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:influence
										body_call:
											group:
												name_var:
													variable:
														variable_names:amount
										OPERATOR:+= 
										BACKSLASH:\
									SEMICOLON:;
							inline:
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									variableName:
										name_var:
											variable:
												variable_names:amount
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Relationship
												ACCESS:->
												type_var:
													class:
														class_variable_names:Reason
									variableName:
										name_var:
											variable:
												variable_names:reason
							methodName:
								name_var:
									variable:
										variable_names:influence
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Activity
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:activityName
					DOT:.
					DOT:.
					DOT:.
					className:
						variable_names:Activities
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:data
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_entries:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:idle
												name_var:
													variable:
														variable_names:addToEventMethod
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:success
													COMMA:,
													method_argument:
														body_entries:
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													method_argument:
														body_entries:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:load
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													method_argument:
														body_entries:
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							methodName:
								name_var:
									variable:
										variable_names:setup
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					objectType:
						CLASS:class 
					method_declaration:
						methodDefinition:
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:methodName
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				exact:
																					WILD:gain[
																			PLUS:+
																			name_var:
																				exact:
																					WILD:,Source]
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:element
													typeName:
														type_var:
															class:
																class_variable_names:String
										body_element:
											body_line:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:toLowerCase
																	parameters:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:variableName
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Entity
													OPERATOR:->*
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:appendToBody
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													as_string:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:variableName
																							name_var:
																								variable:
																									variable_names:add
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:Activities
																									ACCESS:->
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:allUsables
																						DOT:.
																				SEMICOLON:;
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
												SEMICOLON:;
										tokenName:
											NAME:className
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:addToEventMethod
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:element
																											name_var:
																												exact:
																													WILD:event_names
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventContext
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBodyElements
																COMMA:,
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:Events
												SEMICOLON:;
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Events
																group:
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:Activities
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													name_var:
																														variable:
																															variable_names:element
																													ACCESS:->
																													name_var:
																														exact:
																															WILD:event_names
																	name_var:
																		variable:
																			variable_names:getEventContext
																DOT:.
													typeName:
														CONTEXT_TYPE:Context 
													variableName:
														name_var:
															variable:
																variable_names:eventContext
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:event
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Activities
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:create
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																			group:
																				name_var:
																					exact:
																						WILD:activityName
																	as_body:
																		body_element:
																			body_return:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Activities
																											ACCESS:->
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:activityName
																				SEMICOLON:;
																				RETURN:return 
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														type_var:
															class:
																class_variable_names:Activities
														ACCESS:->
												methodName:
													ADD:+=
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getTarget
														inline:
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
																variableName:
																	name_var:
																		variable:
																			variable_names:host
															variable_declaration:
																typeName:
																	type_var:
																		exact:
																			BACKSLASH:\
																			variable_names:EntityCriteria
																variableName:
																	name_var:
																		variable:
																			variable_names:targetCriteria
															COMMA:,
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										tokenName:
											NAME:getTarget
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																		name_var:
																			variable:
																				variable_names:appendToBody
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:getTarget[Entity,EntityCriteria]
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:body_element
													COLON::
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													typeName:
														CONTEXT_TYPE:Context 
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Activities
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
																			ACCESS:->
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:getContext
																	parameters:
																group:
																	name_var:
																		exact:
																			WILD:getTarget[Entity,EntityCriteria]
															OPERATOR:->*
									variableName:
										NAME:element
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										body_element:
											body_line:
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:addVariableHeader
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:element
																								name_var:
																									exact:
																										WILD:variable_header
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:Activities
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																								ACCESS:->
													variableName:
														name_var:
															variable:
																variable_names:variable
													typeName:
														VARIABLE_TYPE:Variable 
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:variable_declaration
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:variable
														group:
															name_var:
																variable:
																	variable_names:setIsWeak
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
														DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:variable
																	group:
																		name_var:
																			variable:
																				variable_names:setAssignment
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									variable_names:getStatement
																									BACKSLASH:\
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:statement
																														name_var:
																															variable:
																																variable_names:element
																								method_argument:
																									body_statement:
																										body_call:
																											DOT:.
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:activityName
																														name_var:
																															variable:
																																variable_names:Activities
																											group:
																												parameters:
																												name_var:
																													variable:
																														variable_names:getContext
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		variable:
																			variable_names:element
																	name_var:
																		exact:
																			WILD:statement
																	ACCESS:->
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
									variableName:
										NAME:element
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							inner:
								IN:>
							body_element:
								body_manipulate:
									tokenInstance:
										tokenName:
											NAME:variable_header
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Activities
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:addVariableHeader
										COLON::
									variableName:
										NAME:element
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Activities
															OPERATOR:->*
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:getContext
																	parameters:
																group:
																	name_var:
																		exact:
																			WILD:getDestination[Entity]
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Activities
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				ACCESS:->
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:getDestination[Entity]
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElement
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																		name_var:
																			variable:
																				variable_names:appendToBody
																	DOT:.
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:body_element
													COLON::
												COLON::
												name_var:
													variable:
														variable_names:element
										COLON::
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getDestination
														inline:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:host
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														type_var:
															class:
																class_variable_names:Activities
														ACCESS:->
										tokenName:
											NAME:getDestination
									COLON::
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:declarationToken
																					name_var:
																						exact:
																							WILD:description
										variableName:
											name_var:
												variable:
													variable_names:description
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	RETURN:return 
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	SEMICOLON:;
												name_var:
													variable:
														variable_names:appendToBody
											group:
												name_var:
													exact:
														WILD:hasSucceeded[Entity]
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Activities
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:hasFailed[Entity]
											DOT:.
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	SEMICOLON:;
																	RETURN:return 
										OPERATOR:->*
										body_call:
											group:
												name_var:
													access:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									NEW:new 
																									typeName:
																										type_var:
																											access_multi:
																												type_var:
																													class:
																														class_variable_names:Events
																												ACCESS:->
																												type_var:
																													exact:
																														BACKSLASH:\
																														variable_names:Load
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:host
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:on
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:activityName
																ACCESS:->
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
										variableName:
											name_var:
												variable:
													variable_names:activityName
									SEMICOLON:;
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		exact:
																			WILD:SUCCEED
																	ACCESS:->
																	name_var:
																		variable:
																			variable_names:element
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:!= 
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:hasSucceeded[Entity]
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						body_conditional:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																															parameters:
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:element
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:successContext
																							as_body:
																								body_element:
																									body_return:
																										SEMICOLON:;
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																										RETURN:return 
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																							conditional:
																								IF:if
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																method_argument:
																	body_statement:
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasSucceeded[Entity]
																			group:
																				name_var:
																					variable:
																						variable_names:getContext
																				parameters:
																			DOT:.
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																variableName:
																	name_var:
																		variable:
																			variable_names:successContext
																typeName:
																	CONTEXT_TYPE:Context 
													body_element:
														NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															variable_declaration:
																typeName:
																	CONTEXT_TYPE:Context 
																method_argument:
																	body_statement:
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasFailed[Entity]
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																variableName:
																	name_var:
																		variable:
																			variable_names:failContext
																EQUALS:=
															SEMICOLON:;
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:hasFailed[Entity]
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:failContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						name_var:
																																							variable:
																																								variable_names:element
																																COMMA:,
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																										RETURN:return 
																										SEMICOLON:;
																					body_element:
																						NEWLINE:$\n
																		name_var:
																			variable:
																				variable_names:appendToBody
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																OPERATOR:->*
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:endState
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Activities
									methodName:
										ADD:+=
									class_declaration:
										FORSLASH:/
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Activity
																		type_var:
																			class:
																				class_variable_names:Id
															NEW:new 
															parameters:
											EQUALS:=
											variableName:
												name_var:
													variable:
														variable_names:id
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Activity
											static:
												STA:@
										SEMICOLON:;
										NEWLINE:$\n
										NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											WEAK:~
											variableName:
												name_var:
													variable:
														variable_names:host
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getId
												body_element:
													NEWLINE:$\n
												inline:
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Activity
															type_var:
																class:
																	class_variable_names:Id
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														RETURN:return 
										SEMICOLON:;
										NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:hasFailed
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:host
										className:
											variable_names:activityName
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Usable
															type_var:
																class:
																	class_variable_names:List
															ACCESS:->
												body_element:
													NEWLINE:$\n
												inline:
												methodName:
													name_var:
														variable:
															variable_names:getUsables
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:allUsables
														RETURN:return 
														SEMICOLON:;
										SEMICOLON:;
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:hasSucceeded
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:host
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														RETURN:return 
														SEMICOLON:;
												inline:
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Activity
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:allUsables
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Usable
																		type_var:
																			class:
																				class_variable_names:List
															parameters:
															NEW:new 
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Usable
														ACCESS:->
														type_var:
															class:
																class_variable_names:List
											EQUALS:=
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activityName
														SEMICOLON:;
														RETURN:return 
												body_element:
													NEWLINE:$\n
												inline:
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:activities
				class_declaration:
					objectType:
						CLASS:class 
					className:
						variable_names:Activity
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:listen
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:event
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Entity
												type_var:
													class:
														class_variable_names:Event
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
									body_statement:
										OPERATOR:== 
										body_call:
											DOT:.
											group:
												name_var:
													access:
														ACCESS:->
														ACCESS:->
														name_var:
															variable:
																variable_names:Event
														name_var:
															variable:
																variable_names:FailedToMove
														name_var:
															variable:
																variable_names:Entity
											group:
												name_var:
													variable:
														variable_names:id
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getId
												parameters:
											group:
												name_var:
													variable:
														variable_names:event
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:event
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Events
												type_var:
													exact:
														variable_names:Idle
														BACKSLASH:\
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											variable:
												variable_names:failed
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Entity
													ACCESS:->
													type_var:
														class:
															class_variable_names:List
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:20f
														name_var:
															variable:
																variable_names:getEntitiesWithin
													group:
														name_var:
															variable:
																variable_names:event
													group:
														parameters:
														name_var:
															variable:
																variable_names:getLocation
													DOT:.
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
													DOT:.
										variableName:
											name_var:
												variable:
													variable_names:entitiesToTarget
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
												OPERATOR:: 
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
												conditional:
													FOR:for
												as_body:
													body_element:
														body_conditional:
															conditional:
																IF:if
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_return:
																		RETURN:return 
																		VOID:void
																		SEMICOLON:;
																body_element:
																	body_line:
																		body_statement:
																			body_call:
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:event
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:getHost
																					parameters:
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										typeName:
																											type_var:
																												access_multi:
																													type_var:
																														exact:
																															BACKSLASH:\
																															variable_names:ChasingEntity
																													type_var:
																														class:
																															class_variable_names:Activities
																													ACCESS:->
																										NEW:new 
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	NAME:
																																		NUMBER:25
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:getRange
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:event
																																			DOT:.
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:getHost
																																				parameters:
																														group:
																															name_var:
																																variable:
																																	variable_names:usable
																														DOT:.
																											COMMA:,
																											COMMA:,
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:candidate
																					name_var:
																						variable:
																							variable_names:start
																		SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	group:
																		name_var:
																			variable:
																				variable_names:getTargetCriteria
																		parameters:
																	group:
																		name_var:
																			variable:
																				variable_names:satisfies
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:candidate
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										FOR:for
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:entitiesToTarget
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:candidate
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									OPERATOR:: 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:hasFailed
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:failed
									SEMICOLON:;
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												name_var:
													variable:
														variable_names:getFocusSkill
												parameters:
											group:
												name_var:
													variable:
														variable_names:host
											DOT:.
										body_call:
											DOT:.
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:getUsables
												parameters:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getFocusSkill
												name_var:
													variable:
														variable_names:contains
										OPERATOR:== 
										OPERATOR:|| 
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:this
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
													COMMA:,
												name_var:
													variable:
														variable_names:use
											group:
												name_var:
													variable:
														variable_names:host
											group:
												name_var:
													variable:
														variable_names:getFocusSkill
												parameters:
											DOT:.
											DOT:.
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:==
										OPERATOR:|| 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:== 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															as_body:
																body_element:
																	body_return:
																		RETURN:return 
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:true
																		SEMICOLON:;
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:use
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:this
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:host
																	group:
																		name_var:
																			variable:
																				variable_names:getFocusSkill
																		parameters:
																OPERATOR:!=
																OPERATOR:&& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
															conditional:
																IF:if
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:getUsables
												conditional:
													FOR:for
												OPERATOR:: 
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
									conditional:
										IF:if
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:step
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getTarget
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									typeName:
										type_var:
											exact:
												BACKSLASH:\
												variable_names:EntityCriteria
									variableName:
										name_var:
											variable:
												variable_names:targetCriteria
								COMMA:,
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:getLocation
													parameters:
												group:
													name_var:
														variable:
															variable_names:host
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:targetCriteria
													name_var:
														variable:
															variable_names:getClosestEntity
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Activity
										ACCESS:->
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							inline:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						variableName:
							name_var:
								variable:
									variable_names:failed
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						WEAK:~
					DOT:.
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:point
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Tiles
												type_var:
													class:
														class_variable_names:EntryPoint
							methodName:
								name_var:
									variable:
										variable_names:rememberEntryPoint
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:exploredPoints
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:point
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:pick
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													name_var:
														variable:
															variable_names:failed
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:true
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Usable
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:isEmpty
												parameters:
											group:
												parameters:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
										OPERATOR:== 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:getUsables
															DOT:.
															group:
																parameters:
																	method_argument:
																		body_statement:
																			OPERATOR:* 
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:((int)(double)randomIndex)
																			BACKSLASH:\
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:size
																					parameters:
																				DOT:.
																				group:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getUsables
																					parameters:
																name_var:
																	variable:
																		variable_names:get
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:randomIndex
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:random
																group:
																	name_var:
																		exact:
																			variable_names:Math
																			BACKSLASH:\
																DOT:.
													typeName:
														type_var:
															class:
																class_variable_names:Double
												SEMICOLON:;
									conditional:
										IF:if
							inline:
					DOT:.
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					variable_declaration:
						EQUALS:=
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:exploredPoints
						typeName:
							type_var:
								class:
									class_variable_names:Set
									template_parameters:
										template_parameter:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Tiles
													type_var:
														class:
															class_variable_names:EntryPoint
													SPECIAL_ACCESS:\>
						method_argument:
							body_statement:
								body_call:
									group:
										typeName:
											type_var:
												class:
													class_variable_names:HashSet
													template_parameters:
														template_parameter:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Tiles
																	SPECIAL_ACCESS:\>
																	type_var:
																		class:
																			class_variable_names:EntryPoint
										NEW:new 
										parameters:
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:remove
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Usable
									variableName:
										name_var:
											variable:
												variable_names:newUsable
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:explore
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newArea
									typeName:
										type_var:
											class:
												class_variable_names:Area
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newArea
												name_var:
													variable:
														variable_names:add
											DOT:.
											group:
												name_var:
													variable:
														variable_names:exploredAreas
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					class_declaration:
						className:
							variable_names:Listeners
						FORSLASH:/
						objectType:
							CLASS:class 
						NEWLINE:$\n
						FORSLASH:/
						NEWLINE:$\n
						class_declaration:
							className:
								variable_names:Fail
							NEWLINE:$\n
							NEWLINE:$\n
							objectType:
								CLASS:class 
							SEMICOLON:;
							FORSLASH:/
							parentName:
								type_var:
									access_multi:
										type_var:
											exact:
												variable_names:Fail
												BACKSLASH:\
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											class:
												class_variable_names:Listener
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:listen
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:on
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:event
													group:
														name_var:
															variable:
																variable_names:host
													DOT:.
									body_element:
										NEWLINE:$\n
									inline:
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:event
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Events
														type_var:
															exact:
																BACKSLASH:\
																variable_names:Fail
														ACCESS:->
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								variableName:
									name_var:
										variable:
											variable_names:host
								EQUALS:=
							FORSLASH:/
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:hasSucceeded
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
					method_declaration:
						methodDefinition:
							inline:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											OPERATOR:!= 
											body_call:
												group:
													name_var:
														variable:
															variable_names:targetEntity
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							methodName:
								name_var:
									variable:
										variable_names:hasTarget
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:hasExplored
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Area
									variableName:
										name_var:
											variable:
												variable_names:area
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:exploredAreas
												DOT:.
												group:
													name_var:
														variable:
															variable_names:contains
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:area
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:add
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newUsable
									typeName:
										type_var:
											class:
												class_variable_names:Usable
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						FORSLASH:/
						className:
							variable_names:Id
						NEWLINE:$\n
						objectType:
							CLASS:class 
					variable_declaration:
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:description
					class_declaration:
						FORSLASH:/
						NEWLINE:$\n
						className:
							variable_names:Factory
						objectType:
							INTERFACE:interface 
						FORSLASH:/
						method_declaration:
							methodDefinition:
								inline:
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								methodName:
									name_var:
										variable:
											variable_names:create
						NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Usable
										type_var:
											class:
												class_variable_names:List
										ACCESS:->
							methodName:
								name_var:
									variable:
										variable_names:getUsables
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getDestination
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Tile
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
									SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Entity
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:targetEntity
						WEAK:~
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								variable:
									variable_names:name
						typeName:
							type_var:
								class:
									class_variable_names:String
						EQUALS:=
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:hasFailed
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
									conditional:
										ELSE:else
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								class:
																									class_variable_names:Events
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:Fail
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					COMMA:,
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:host
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
															name_var:
																variable:
																	variable_names:stop
														DOT:.
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:hasSucceeded
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
															name_var:
																variable:
																	variable_names:stop
														group:
															name_var:
																variable:
																	variable_names:host
												SEMICOLON:;
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:Success
																									BACKSLASH:\
																							type_var:
																								class:
																									class_variable_names:Events
																				NEW:new 
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:on
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:host
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:event
													group:
														parameters:
														name_var:
															variable:
																variable_names:getHost
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																							type_var:
																								exact:
																									variable_names:Idle
																									BACKSLASH:\
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
												name_var:
													exact:
														BACKSLASH:\
														variable_names:step
										OPERATOR:==
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:event
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Events
												type_var:
													exact:
														BACKSLASH:\
														variable_names:Tick
												ACCESS:->
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					packageName:
						name_var:
							exact:
								WILD:activities
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										NEW:new 
										parameters:
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Area
													class_variable_names:HashSet
						WEAK:~
						variableName:
							name_var:
								variable:
									variable_names:exploredAreas
						typeName:
							type_var:
								class:
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:Area
									class_variable_names:Set
					SEMICOLON:;
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
		imports:
			IMPORT_CLASS:
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:mods
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Trait
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
							body_element:
								NEWLINE:$\n
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:traits
					DOT:.
					NEWLINE:$\n
					className:
						variable_names:Trait
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:description
						typeName:
							type_var:
								class:
									class_variable_names:String
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:traits
						packageName:
							name_var:
								exact:
									WILD:entities
						packageName:
							name_var:
								exact:
									WILD:mods
						className:
							variable_names:Id
						DOT:.
						DOT:.
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						NEWLINE:$\n
						objectType:
							CLASS:class 
					SEMICOLON:;
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
									RETURN:return 
							methodName:
								name_var:
									variable:
										variable_names:hasRequirements
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:candidate
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					objectType:
						CLASS:class 
					DOT:.
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					SEMICOLON:;
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:traits
					className:
						variable_names:Traits
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								STATEMENT_TYPE:Statement
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
							inner:
								IN:>
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Traits
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																ACCESS:->
													group:
														name_var:
															variable:
																variable_names:id
													DOT:.
									RETURN:return 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	ACCESS:->
																	name_var:
																		variable:
																			variable_names:Traits
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:traitName
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						body_return:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																							SEMICOLON:;
																							RETURN:return 
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														BACKSLASH:\
																														variable_names:getRequirement
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:element
																													COMMA:,
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:candidate
																													COMMA:,
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:false
															name_var:
																variable:
																	variable_names:prependToBody
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getMethod
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:hasRequirements
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:requirement
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														typeName:
															type_var:
																class:
																	class_variable_names:HashMap
																	template_parameters:
																		template_parameter:
																			type_var:
																				class:
																					class_variable_names:String
																		template_parameter:
																			BODY_TYPE:Body 
																		COMMA:,
														NEW:new 
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:String
														COMMA:,
														template_parameter:
															BODY_TYPE:Body 
													class_variable_names:Map
										variableName:
											name_var:
												variable:
													variable_names:eventBodies
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:addEventMethodsExclusive
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:traitName
																			name_var:
																				variable:
																					variable_names:Traits
																			ACCESS:->
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:eventBodies
													COMMA:,
											DOT:.
											group:
												name_var:
													variable:
														variable_names:Events
									SEMICOLON:;
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:candidate
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:candidate
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										variableName:
											name_var:
												variable:
													variable_names:requirementsBody
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															BODY_TYPE:Body 
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:impose
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:gainBody
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:true
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																				name_var:
																					variable:
																						variable_names:getImposition
																			DOT:.
												SEMICOLON:;
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:lossBody
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:Entity
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventHost
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																				name_var:
																					variable:
																						variable_names:getImposition
												SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:gain
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:gainBody
													COMMA:,
												name_var:
													variable:
														variable_names:put
											group:
												name_var:
													variable:
														variable_names:eventBodies
											DOT:.
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										variableName:
											name_var:
												variable:
													variable_names:gainBody
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															BODY_TYPE:Body 
														NEW:new 
														parameters:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Traits
											DOT:.
											DOT:.
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:traitName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:traitName
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				RETURN:return 
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Traits
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:traitName
																											ACCESS:->
																								NEW:new 
																								parameters:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
												name_var:
													variable:
														variable_names:getMethod
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:eventHost
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:getHost
															parameters:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:event
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:eventBodies
											group:
												name_var:
													variable:
														variable_names:put
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:lossBody
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:loss
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									class_declaration:
										objectType:
											CLASS:class 
										packageName:
											name_var:
												exact:
													WILD:mods
										NEWLINE:$\n
										NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Trait
										NEWLINE:$\n
										NEWLINE:$\n
										DOT:.
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:traits
										DOT:.
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:hasRequirements
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
														SEMICOLON:;
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:candidate
										packageName:
											name_var:
												exact:
													WILD:entities
										className:
											variable_names:traitName
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:traitName
												methodName:
													name_var:
														variable:
															variable_names:getName
												inline:
										SEMICOLON:;
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:id
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Trait
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Id
														type_var:
															class:
																class_variable_names:Trait
														ACCESS:->
											static:
												STA:@
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Traits
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									variable_declaration:
										typeName:
											BODY_TYPE:Body 
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															BODY_TYPE:Body 
														parameters:
														NEW:new 
										variableName:
											name_var:
												variable:
													variable_names:lossBody
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																CAMEL:^
																name_var:
																	variable:
																		variable_names:declarationToken
																name_var:
																	exact:
																		WILD:traitName
										variableName:
											name_var:
												variable:
													variable_names:traitName
										EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					objectType:
						CLASS:class 
					NEWLINE:$\n
					DOT:.
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Trait
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							methodName:
								name_var:
									variable:
										variable_names:create
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											exact:
												WILD:traitName
					NEWLINE:$\n
					DOT:.
				NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			DOT:.
			objectType:
				CLASS:class 
			NEWLINE:$\n
			className:
				variable_names:Entities
			packageName:
				name_var:
					exact:
						WILD:entities
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:entityName
								typeName:
									type_var:
										class:
											class_variable_names:String
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:entityNameBuilder
											group:
												name_var:
													variable:
														variable_names:toString
												parameters:
					typeName:
						CLASS_TYPE:Class 
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											COLON::
											tokenName:
												NAME:skill
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:set
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:,
															group:
																name_var:
																	variable:
																		variable_names:arguments
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														EQUALS:=
														typeName:
															CONTEXT_TYPE:Context 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Entity
																	group:
																		name_var:
																			variable:
																				variable_names:getContext
																		parameters:
																	DOT:.
														variableName:
															name_var:
																variable:
																	variable_names:bodyContext
													SEMICOLON:;
											body_element:
												body_manipulate:
													name_var:
														variable:
															variable_names:atom
													tokenInstance:
														body_element:
															body_line:
																SEMICOLON:;
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:arguments
																		DOT:.
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:bodyContext
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																								name_var:
																									exact:
																										variable_names:getStatement
																										BACKSLASH:\
																			name_var:
																				variable:
																					variable_names:add
														body_element:
															NEWLINE:$\n
														COLON::
														tokenName:
															NAME:statement
														body_element:
															NEWLINE:$\n
													COLON::
													variableName:
														NAME:quark
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														typeName:
															STATEMENT_TYPE:Statement
														variableName:
															name_var:
																variable:
																	variable_names:arguments
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			STATEMENT_TYPE:Statement
																		NEW:new 
																		parameters:
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Entities
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		ACCESS:->
																		ACCESS:->
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_method:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:arguments
																													NEW:new 
																													typeName:
																														type_var:
																															access_multi:
																																ACCESS:->
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						access:
																																							ACCESS:->
																																							name_var:
																																								exact:
																																									WILD:skill_names
																																							CAMEL:^
																																							name_var:
																																								variable:
																																									variable_names:atom
																																type_var:
																																	class:
																																		class_variable_names:Skills
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																							group:
																								name_var:
																									variable:
																										variable_names:this
											body_element:
												NEWLINE:$\n
										COLON::
										variableName:
											NAME:atom
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										tokenInstance:
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:affinity_names
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
														body_call:
															group:
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													NEW:new 
																													parameters:
																													typeName:
																														type_var:
																															access_multi:
																																type_var:
																																	class:
																																		class_variable_names:Affinities
																																ACCESS:->
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:atom
																																							CAMEL:^
																								name_var:
																									variable:
																										variable_names:gain
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							DOT:.
																name_var:
																	variable:
																		variable_names:appendToBody
														OPERATOR:->*.
											COLON::
											body_element:
												NEWLINE:$\n
										COLON::
										name_var:
											variable:
												variable_names:element
										variableName:
											NAME:atom
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:event
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:Events
															group:
																name_var:
																	variable:
																		variable_names:addToEventMethod
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													variable:
																														variable_names:atom
																												ACCESS:->
																												name_var:
																													exact:
																														WILD:event_names
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							ACCESS:->
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:entityName
																							name_var:
																								variable:
																									variable_names:Entities
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:eventBody
																	COMMA:,
															DOT:.
													SEMICOLON:;
											body_element:
												body_line:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:eventContext
														typeName:
															CONTEXT_TYPE:Context 
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:event_names
																														name_var:
																															variable:
																																variable_names:atom
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:Entities
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:entityName
																			method_argument:
																				body_entries:
																			COMMA:,
																		name_var:
																			variable:
																				variable_names:addToEventMethod
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:Events
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													COLON::
													name_var:
														variable:
															variable_names:atom
													variableName:
														NAME:quark
													tokenInstance:
														body_element:
															NEWLINE:$\n
														tokenName:
															NAME:body_element
														COLON::
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																SEMICOLON:;
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eventBody
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:add
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										variable_names:getBodyElement
																										BACKSLASH:\
																								parameters:
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:eventContext
											COLON::
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															BODY_TYPE:Body 
														variableName:
															name_var:
																variable:
																	variable_names:eventBody
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		typeName:
																			BODY_TYPE:Body 
																		parameters:
														EQUALS:=
										COLON::
										variableName:
											NAME:atom
								tokenName:
									NAME:entity_definition
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										name_var:
											variable:
												variable_names:element
										COLON::
										variableName:
											NAME:atom
										tokenInstance:
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		ACCESS:->
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:Range
																												DOT:.
																												group:
																													name_var:
																														variable:
																															variable_names:getIntegerBetween
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:leftBound
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:rightBound
																														COMMA:,
																								name_var:
																									variable:
																										variable_names:setValue
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:heroStatName
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							DOT:.
														OPERATOR:->*.
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:statRange
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:rightBound
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:toLowerCase
																		parameters:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:atom
																									ACCESS:->
																									name_var:
																										exact:
																											WILD:hero_stats
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:heroStatName
											body_element:
												body_conditional:
													conditional:
														IF:if
													as_body:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																variable_assignment:
																	EQUALS:=
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													variable:
																														variable_names:atom
																												ACCESS:->
																												name_var:
																													exact:
																														WILD:left
																	name_var:
																		variable:
																			variable_names:rightBound
																SEMICOLON:;
													body_statement:
														OPERATOR:!= 
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:right
																		name_var:
																			variable:
																				variable_names:atom
																		ACCESS:->
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:leftBound
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									ACCESS:->
																									name_var:
																										exact:
																											WILD:left
																									name_var:
																										variable:
																											variable_names:atom
														typeName:
															type_var:
																class:
																	class_variable_names:String
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_conditional:
													as_body:
														body_element:
															body_line:
																variable_assignment:
																	EQUALS:=
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:leftBound
																	name_var:
																		variable:
																			variable_names:rightBound
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
													conditional:
														ELSE:else
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:declarationToken
							variableName:
								NAME:element
							COLON::
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												access:
													ACCESS:->
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:entityName
													ACCESS:->
													name_var:
														variable:
															variable_names:Entities
													name_var:
														variable:
															variable_names:Factory
							SEMICOLON:;
							RETURN:return 
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:declarationToken
							tokenInstance:
								COLON::
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:element
												group:
													name_var:
														variable:
															variable_names:entityNameBuilder
												DOT:.
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:entityName
								body_element:
									NEWLINE:$\n
							COLON::
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Entities
							class_declaration:
								objectType:
									CLASS:class 
								NEWLINE:$\n
								DOT:.
								className:
									variable_names:entityName
								parentName:
									type_var:
										class:
											class_variable_names:Entity
								packageName:
									name_var:
										exact:
											WILD:entities
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
							methodName:
								ADD:+=
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										exact:
											BACKSLASH:\
											variable_names:entityName
									type_var:
										class:
											class_variable_names:Entities
							methodName:
								ADD:+=
							class_declaration:
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:create
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										inline:
										body_element:
											body_return:
												SEMICOLON:;
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																typeName:
																	type_var:
																		access_multi:
																			ACCESS:->
																			type_var:
																				class:
																					class_variable_names:Entities
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:entityName
																NEW:new 
								NEWLINE:$\n
								packageName:
									name_var:
										exact:
											WILD:entities
								parentName:
									type_var:
										exact:
											variable_names:Object
											BACKSLASH:\
								interfaceName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Factory
											type_var:
												class:
													class_variable_names:Entity
											ACCESS:->
								NEWLINE:$\n
								objectType:
									CLASS:class 
								DOT:.
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								className:
									variable_names:Factory
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:entityNameBuilder
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:StringBuilder
												parameters:
								typeName:
									type_var:
										class:
											class_variable_names:StringBuilder
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:declarationToken
							typeName:
								type_var:
									class:
										class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:createEntity
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					typeName:
						type_var:
							class:
								class_variable_names:Entity
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							SEMICOLON:;
							RETURN:return 
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									exact:
										WILD:entityName
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					DOT:.
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:affinities
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					class_declaration:
						packageName:
							name_var:
								exact:
									WILD:mods
						className:
							variable_names:Id
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:affinities
						packageName:
							name_var:
								exact:
									WILD:entities
						DOT:.
						NEWLINE:$\n
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						objectType:
							CLASS:class 
						DOT:.
					DOT:.
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:defender
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:damage
									typeName:
										type_var:
											class:
												class_variable_names:Double
								COMMA:,
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0.0
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Double
							methodName:
								name_var:
									variable:
										variable_names:modify
					packageName:
						name_var:
							exact:
								WILD:mods
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Affinity
										type_var:
											class:
												class_variable_names:Id
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							inline:
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:entities
					className:
						variable_names:Affinity
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
				class_declaration:
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:affinityName
									typeName:
										type_var:
											class:
												class_variable_names:String
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:hasAffinity
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															exact:
																WILD:defender
													group:
														name_var:
															variable:
																variable_names:has
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:affinityName
																					name_var:
																						variable:
																							variable_names:Affinities
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:id
									RETURN:return 
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
											group:
												name_var:
													variable:
														variable_names:Affinities
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:affinityName
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:affinityClassName
																	as_body:
																		body_element:
																			body_return:
																				RETURN:return 
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											ACCESS:->
																											type_var:
																												class:
																													class_variable_names:Affinities
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:affinityClassName
																	conditional:
																		IF:if
												name_var:
													variable:
														variable_names:prependToBody
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:strengths
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
														NEW:new 
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:affinityName
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:declarationToken
																					name_var:
																						exact:
																							WILD:affinityName
										EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Affinities
									class_declaration:
										variable_declaration:
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Affinity
														type_var:
															class:
																class_variable_names:Id
											variableName:
												name_var:
													exact:
														WILD:id
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Affinity
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
															parameters:
															NEW:new 
											EQUALS:=
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:entities
										SEMICOLON:;
										DOT:.
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:affinityName
														RETURN:return 
														SEMICOLON:;
												typeName:
													type_var:
														class:
															class_variable_names:String
												inline:
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										DOT:.
										packageName:
											name_var:
												exact:
													WILD:affinities
										parentName:
											type_var:
												class:
													class_variable_names:Affinity
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												inline:
													COMMA:,
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:defender
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:damage
														typeName:
															type_var:
																class:
																	class_variable_names:Double
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:damage
												typeName:
													type_var:
														class:
															class_variable_names:Double
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:modify
												body_element:
													body_conditional:
														conditional:
															IF:if
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:strengths
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		OPERATOR:*= 
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
												body_element:
													NEWLINE:$\n
												body_element:
													body_conditional:
														conditional:
															IF:if
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
																		OPERATOR:/= 
																	SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:weaknesses
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:mods
										className:
											variable_names:affinityClassName
										NEWLINE:$\n
										objectType:
											CLASS:class 
										DOT:.
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										tokenName:
											NAME:weakness_name
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																											CAMEL:^
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:hasAffinity
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:weaknesses
												SEMICOLON:;
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:strength_name
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:hasAffinity
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											CAMEL:^
																											variable_names:element
														group:
															name_var:
																variable:
																	variable_names:strengths
														DOT:.
												SEMICOLON:;
									COLON::
									variableName:
										NAME:element
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:weaknesses
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
										EQUALS:=
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																CAMEL:^
																variable_names:affinityName
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:affinityClassName
										EQUALS:=
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
					method_declaration:
						methodDefinition:
							inner:
								IN:>
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:Affinities
																ACCESS:->
																name_var:
																	variable:
																		variable_names:name
													group:
														name_var:
															variable:
																variable_names:id
													DOT:.
									RETURN:return 
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
					DOT:.
					className:
						variable_names:Affinities
					objectType:
						CLASS:class 
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:affinities
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Affinity
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							methodName:
								name_var:
									variable:
										variable_names:create
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:affinityName
									typeName:
										type_var:
											class:
												class_variable_names:String
					packageName:
						name_var:
							exact:
								WILD:mods
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
						NEWLINE:$\n
						NEWLINE:$\n
						class_declaration:
							NEWLINE:$\n
							DOT:.
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
									methodName:
										name_var:
											variable:
												variable_names:getSupportId
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Support
												type_var:
													class:
														class_variable_names:Id
												ACCESS:->
									inline:
									body_element:
										NEWLINE:$\n
							method_declaration:
								methodDefinition:
									inline:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Events
														type_var:
															exact:
																BACKSLASH:\
																variable_names:Tick
														ACCESS:->
											variableName:
												name_var:
													exact:
														WILD:event
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:on
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_conditional:
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															OPERATOR:-= 
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:cooldown
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
														SEMICOLON:;
											body_statement:
												OPERATOR:>
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0 
												body_call:
													group:
														name_var:
															exact:
																WILD:cooldown
											conditional:
												IF:if
							class_declaration:
								objectType:
									CLASS:class 
								className:
									variable_names:Id
								NEWLINE:$\n
								FORSLASH:/
								FORSLASH:/
							className:
								variable_names:Support
							NEWLINE:$\n
							objectType:
								CLASS:class 
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							packageName:
								name_var:
									exact:
										WILD:entities
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:behaviours
							packageName:
								name_var:
									exact:
										WILD:skills
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:supports
							DOT:.
							parentName:
								type_var:
									class:
										class_variable_names:Skill
							DOT:.
				imports:
					IMPORT_CLASS:
						NEWLINE:$\n
						NEWLINE:$\n
						class_declaration:
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												variableName:
													name_var:
														variable:
															variable_names:isFirst
												EQUALS:=
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
												WEAK:~
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getMethod
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:create
													DOT:.
													group:
														name_var:
															variable:
																variable_names:Attacks
													DOT:.
													group:
														parameters:
															method_argument:
																as_statement:
																	body_element:
																		body_conditional:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_quote:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:attackName
																					group:
																						name_var:
																							variable:
																								variable_names:equals
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attackName
																					DOT:.
																			conditional:
																				IF:if
																			as_body:
																				body_element:
																					NEWLINE:$\n
																				body_element:
																					body_return:
																						RETURN:return 
																						SEMICOLON:;
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										NEW:new 
																										typeName:
																											type_var:
																												access_multi:
																													type_var:
																														class:
																															class_variable_names:Attacks
																													ACCESS:->
																													type_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:attackName
																										parameters:
														name_var:
															variable:
																variable_names:prependToBody
									body_element:
										NEWLINE:$\n
									inner:
										IN:>
									body_element:
										NEWLINE:$\n
									body_element:
										body_manipulate:
											COLON::
											tokenInstance:
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:add
																	parameters:
																		method_argument:
																			as_statement:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_quote:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:element
																group:
																	name_var:
																		variable:
																			variable_names:description
												body_element:
													NEWLINE:$\n
												COLON::
												tokenName:
													NAME:description
											name_var:
												variable:
													variable_names:declarationToken
											variableName:
												NAME:element
									body_element:
										body_manipulate:
											tokenInstance:
												body_element:
													NEWLINE:$\n
												COLON::
												body_element:
													body_manipulate:
														body:
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		name_var:
																			exact:
																				WILD:cost
																		EQUALS:=
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_method:
																								body_statement:
																									body_call:
																										group:
																											parameters:
																												method_argument:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:element
																											name_var:
																												variable:
																													variable_names:getRange
																										DOT:.
																										group:
																											name_var:
																												variable:
																													variable_names:Entity
														type_var:
															access_multi:
																as_method:
																	AS_METHOD_NAME:*
																	ACCESS:->
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Attacks
																ACCESS:->
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:attackName
														methodName:
															ADD:+=
												NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												tokenName:
													NAME:cooldown
											COLON::
											tokenInstance:
												NEWLINE:$\n
												tokenName:
													NAME:damage
												body_element:
													NEWLINE:$\n
												COLON::
												body_element:
													body_manipulate:
														name_var:
															variable:
																variable_names:element
														variableName:
															NAME:atom
														COLON::
														tokenInstance:
															tokenName:
																NAME:by_stat
															body_element:
																NEWLINE:$\n
															NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_manipulate:
																	methodName:
																		ADD:+=
																	body:
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:setValue
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		exact:
																																			WILD:attacker
																												name_var:
																													variable:
																														variable_names:use
																											DOT:.
																											group:
																												name_var:
																													as_method:
																														body_statement:
																															body_call:
																																DOT:.
																																group:
																																	name_var:
																																		variable:
																																			variable_names:Entity
																																group:
																																	name_var:
																																		variable:
																																			variable_names:getRange
																																	parameters:
																																		method_argument:
																																			body_statement:
																																				body_call:
																																					group:
																																						name_var:
																																							variable:
																																								variable_names:atom
																										body_call:
																											DOT:.
																											group:
																												parameters:
																												name_var:
																													variable:
																														variable_names:getItemDamage
																											group:
																												name_var:
																													exact:
																														WILD:attacker
																										OPERATOR:* 
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:damage
																				SEMICOLON:;
																	type_var:
																		access_multi:
																			type_var:
																				class:
																					class_variable_names:Attacks
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:attackName
																			ACCESS:->
																			ACCESS:->
																			as_method:
																				name_var:
																					exact:
																						WILD:getDamage
																				AS_METHOD_NAME:*
																				ACCESS:->
															COLON::
														tokenInstance:
															tokenName:
																NAME:body_element
															COLON::
															body_element:
																NEWLINE:$\n
															NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_manipulate:
																	methodName:
																		ADD:+=
																	type_var:
																		access_multi:
																			type_var:
																				class:
																					class_variable_names:Attacks
																			as_method:
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:getDamage
																				AS_METHOD_NAME:*
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:attackName
																			ACCESS:->
																			ACCESS:->
																	body:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_method:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:getBodyElement
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:damageContext
												body_element:
													NEWLINE:$\n
											name_var:
												variable:
													variable_names:declarationToken
											tokenInstance:
												NEWLINE:$\n
												body_element:
													body_manipulate:
														methodName:
															ADD:+=
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Attacks
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:attackName
																ACCESS:->
																as_method:
																	ACCESS:->
																	AS_METHOD_NAME:*
														body:
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		name_var:
																			exact:
																				WILD:range
																		EQUALS:=
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_method:
																								body_statement:
																									body_call:
																										DOT:.
																										group:
																											name_var:
																												variable:
																													variable_names:Entity
																										group:
																											name_var:
																												variable:
																													variable_names:getRange
																											parameters:
																												method_argument:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:element
												COLON::
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												tokenName:
													NAME:range
											variableName:
												NAME:element
											tokenInstance:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												tokenName:
													NAME:miss
												body_element:
													NEWLINE:$\n
												NEWLINE:$\n
												COLON::
												body_element:
													body_manipulate:
														COLON::
														variableName:
															NAME:atom
														name_var:
															variable:
																variable_names:element
														tokenInstance:
															tokenName:
																NAME:option
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_declaration:
																		typeName:
																			STATEMENT_TYPE:Statement
																		method_argument:
																			as_statement:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														variable_names:getChance
																														BACKSLASH:\
																												parameters:
																													method_argument:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		access:
																																			name_var:
																																				exact:
																																					WILD:has_chance
																																			name_var:
																																				variable:
																																					variable_names:atom
																																			ACCESS:->
																		EQUALS:=
																		variableName:
																			name_var:
																				variable:
																					variable_names:chance
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:isFirst
																				conditional:
																					IF:if
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_line:
																							SEMICOLON:;
																							variable_assignment:
																								name_var:
																									variable:
																										variable_names:isFirst
																								EQUALS:=
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:false
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_manipulate:
																							methodName:
																								ADD:+=
																							body:
																								body_element:
																									body_conditional:
																										as_body:
																											body_element:
																												body_line:
																													SEMICOLON:;
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:setMiss
																										conditional:
																											IF:if
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:chance
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:Attacks
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:attackName
																									as_method:
																										ACCESS:->
																										AS_METHOD_NAME:*
																										name_var:
																											exact:
																												WILD:getDamage
																									ACCESS:->
																									ACCESS:->
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_manipulate:
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:Attacks
																									ACCESS:->
																									ACCESS:->
																									as_method:
																										ACCESS:->
																										name_var:
																											exact:
																												WILD:getDamage
																										AS_METHOD_NAME:*
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:attackName
																							methodName:
																								ADD:+=
																							body:
																								body_element:
																									body_conditional:
																										conditional:
																											IF:if
																											ELSE:else
																										as_body:
																											body_element:
																												body_line:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:setMiss
																													SEMICOLON:;
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:chance
																					body_element:
																						NEWLINE:$\n
																				conditional:
																					ELSE:else
																	conditional:
																		ELSE:else
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_manipulate:
																							body:
																								body_element:
																									body_conditional:
																										as_body:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													conditional:
																														IF:if
																													as_body:
																														body_element:
																															body_line:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:setMiss
																																SEMICOLON:;
																										conditional:
																											IF:if
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:bool
																							type_var:
																								access_multi:
																									type_var:
																										class:
																											class_variable_names:Attacks
																									as_method:
																										ACCESS:->
																										AS_METHOD_NAME:*
																										name_var:
																											exact:
																												WILD:getDamage
																									ACCESS:->
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:attackName
																									ACCESS:->
																							methodName:
																								ADD:+=
																					body_element:
																						body_line:
																							SEMICOLON:;
																							variable_assignment:
																								name_var:
																									variable:
																										variable_names:isFirst
																								EQUALS:=
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:false
																					body_element:
																						NEWLINE:$\n
																				conditional:
																					IF:if
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:isFirst
																		body_element:
																			body_conditional:
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_manipulate:
																							body:
																								body_element:
																									body_conditional:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														as_method:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:bool
																										as_body:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													conditional:
																														IF:if
																													as_body:
																														body_element:
																															body_line:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:setMiss
																																SEMICOLON:;
																										conditional:
																											ELSE:else
																											IF:if
																							methodName:
																								ADD:+=
																							type_var:
																								access_multi:
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Attacks
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:attackName
																									ACCESS:->
																									as_method:
																										AS_METHOD_NAME:*
																										name_var:
																											exact:
																												WILD:getDamage
																										ACCESS:->
																					body_element:
																						NEWLINE:$\n
																				conditional:
																					ELSE:else
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_declaration:
																					method_argument:
																						as_statement:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:damageContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							variable:
																																								variable_names:atom
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						ACCESS:->
																																COMMA:,
																					EQUALS:=
																					typeName:
																						STATEMENT_TYPE:Statement
																					variableName:
																						name_var:
																							variable:
																								variable_names:bool
																	body_statement:
																		OPERATOR:!= 
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								WILD:boolean_statement
																						name_var:
																							variable:
																								variable_names:atom
																						ACCESS:->
																	conditional:
																		IF:if
															body_element:
																NEWLINE:$\n
															COLON::
															body_element:
																NEWLINE:$\n
												body_element:
													body_line:
														variable_declaration:
															EQUALS:=
															method_argument:
																as_statement:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:setHit
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:false
															variableName:
																name_var:
																	variable:
																		variable_names:setMiss
															typeName:
																STATEMENT_TYPE:Statement
														SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										body_manipulate:
											methodName:
												ADD:+=
											class_declaration:
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getDescription
														body_element:
															NEWLINE:$\n
														inline:
														body_element:
															body_return:
																RETURN:return 
																SEMICOLON:;
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:description
														typeName:
															type_var:
																class:
																	class_variable_names:String
														body_element:
															NEWLINE:$\n
												FORSLASH:/
												method_declaration:
													methodDefinition:
														body_element:
															NEWLINE:$\n
														body_element:
															body_return:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
																RETURN:return 
																SEMICOLON:;
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Id
																	type_var:
																		class:
																			class_variable_names:Attack
														body_element:
															NEWLINE:$\n
														methodName:
															name_var:
																variable:
																	variable_names:getAttackId
														inline:
												FORSLASH:/
												variable_declaration:
													static:
														STA:@
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Id
																type_var:
																	class:
																		class_variable_names:Skill
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Id
																				type_var:
																					class:
																						class_variable_names:Skill
																	parameters:
													EQUALS:=
													variableName:
														name_var:
															exact:
																WILD:skillId
												className:
													variable_names:attackName
												NEWLINE:$\n
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														inline:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_return:
																SEMICOLON:;
																RETURN:return 
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:attackName
														methodName:
															name_var:
																variable:
																	variable_names:getName
												SEMICOLON:;
												NEWLINE:$\n
												NEWLINE:$\n
												NEWLINE:$\n
												SEMICOLON:;
												NEWLINE:$\n
												method_declaration:
													methodDefinition:
														body_element:
															body_return:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:skillId
																SEMICOLON:;
																RETURN:return 
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Skill
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Id
														body_element:
															NEWLINE:$\n
														methodName:
															name_var:
																variable:
																	variable_names:getId
														inline:
														body_element:
															NEWLINE:$\n
												NEWLINE:$\n
												NEWLINE:$\n
												NEWLINE:$\n
												objectType:
													CLASS:class 
												parentName:
													type_var:
														class:
															class_variable_names:Attack
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	parameters:
																	typeName:
																		type_var:
																			access_multi:
																				type_var:
																					class:
																						class_variable_names:Attack
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Id
													EQUALS:=
													static:
														STA:@
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Id
																type_var:
																	class:
																		class_variable_names:Attack
																ACCESS:->
													variableName:
														name_var:
															exact:
																WILD:id
												method_declaration:
													methodDefinition:
														inline:
															variable_declaration:
																variableName:
																	name_var:
																		exact:
																			WILD:attacker
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
															variable_declaration:
																variableName:
																	name_var:
																		exact:
																			WILD:defender
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
															COMMA:,
														methodName:
															name_var:
																variable:
																	variable_names:getDamage
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																variable_declaration:
																	EQUALS:=
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					typeName:
																						type_var:
																							access_multi:
																								type_var:
																									class:
																										class_variable_names:Damage
																								ACCESS:->
																								type_var:
																									class:
																										class_variable_names:Attack
																					parameters:
																					NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Damage
																				type_var:
																					class:
																						class_variable_names:Attack
																	variableName:
																		name_var:
																			exact:
																				WILD:damage
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Attack
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Damage
											type_var:
												class:
													class_variable_names:Attacks
									body_element:
										body_manipulate:
											type_var:
												access_multi:
													ACCESS:->
													as_method:
														AS_METHOD_NAME:*
														ACCESS:->
														name_var:
															exact:
																WILD:getDamage
													ACCESS:->
													type_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:attackName
													type_var:
														class:
															class_variable_names:Attacks
											methodName:
												ADD:+=
											body:
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:damage
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												typeName:
													STATEMENT_TYPE:Statement
												method_argument:
													body_statement:
														body_call:
															group:
																NEW:new 
																typeName:
																	STATEMENT_TYPE:Statement
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:+
												variableName:
													name_var:
														variable:
															variable_names:description
												EQUALS:=
											SEMICOLON:;
									inline:
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:IToken
											variableName:
												name_var:
													variable:
														variable_names:declarationToken
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											variable_declaration:
												variableName:
													name_var:
														variable:
															variable_names:damageContext
												method_argument:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Attacks
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:attackName
															group:
																name_var:
																	variable:
																		variable_names:getMethod
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:getDamage
															group:
																name_var:
																	variable:
																		variable_names:getContext
																parameters:
															DOT:.
												typeName:
													CONTEXT_TYPE:Context 
												EQUALS:=
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_declaration:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:attackName
																		name_var:
																			variable:
																				variable_names:declarationToken
																		CAMEL:^
												typeName:
													type_var:
														class:
															class_variable_names:String
												EQUALS:=
												variableName:
													name_var:
														variable:
															variable_names:attackName
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:declaration
									body_element:
										NEWLINE:$\n
							DOT:.
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:Attack
									inline:
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:String
											variableName:
												name_var:
													exact:
														WILD:attackName
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											RETURN:return 
											SEMICOLON:;
									methodName:
										name_var:
											variable:
												variable_names:create
									body_element:
										NEWLINE:$\n
									static:
										STA:@
									body_element:
										NEWLINE:$\n
							DOT:.
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							method_declaration:
								methodDefinition:
									typeName:
										STATEMENT_TYPE:Statement
									body_element:
										NEWLINE:$\n
									inner:
										IN:>
									methodName:
										name_var:
											variable:
												variable_names:getId
									body_element:
										NEWLINE:$\n
									inline:
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:String
											variableName:
												name_var:
													variable:
														variable_names:name
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												as_statement:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:id
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:Attacks
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:name
															DOT:.
							NEWLINE:$\n
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:behaviours
							className:
								variable_names:Attacks
							DOT:.
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:attacks
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:skills
							packageName:
								name_var:
									exact:
										WILD:entities
							objectType:
								CLASS:class 
						class_declaration:
							objectType:
								CLASS:class 
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:on
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									inline:
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:event
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Events
														type_var:
															exact:
																BACKSLASH:\
																variable_names:Tick
									body_element:
										body_conditional:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:cooldown
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0 
												OPERATOR:>
											conditional:
												IF:if
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:cooldown
															OPERATOR:-= 
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
														SEMICOLON:;
							NEWLINE:$\n
							NEWLINE:$\n
							packageName:
								name_var:
									exact:
										WILD:entities
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:getCooldown
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									inline:
									body_element:
										NEWLINE:$\n
							class_declaration:
								objectType:
									CLASS:class 
								variable_declaration:
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									variableName:
										name_var:
											exact:
												WILD:value
									typeName:
										type_var:
											class:
												class_variable_names:Float
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Float
									variableName:
										name_var:
											exact:
												WILD:modifier
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									EQUALS:=
								className:
									variable_names:Damage
								variable_declaration:
									EQUALS:=
									variableName:
										name_var:
											exact:
												WILD:hit
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:setHit
										body_element:
											NEWLINE:$\n
										inline:
											variable_declaration:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												variableName:
													name_var:
														exact:
															WILD:newHit
										typeName:
											type_var:
												class:
													class_variable_names:void
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													EQUALS:=
													name_var:
														exact:
															WILD:hit
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newHit
								SEMICOLON:;
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:setModifier
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newModifier
													EQUALS:=
													name_var:
														exact:
															WILD:modifier
												SEMICOLON:;
										typeName:
											type_var:
												class:
													class_variable_names:void
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										inline:
											variable_declaration:
												variableName:
													name_var:
														exact:
															WILD:newModifier
												typeName:
													type_var:
														class:
															class_variable_names:Float
								FORSLASH:/
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										body_element:
											NEWLINE:$\n
										inline:
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:value
														body_call:
															group:
																name_var:
																	exact:
																		WILD:modifier
														OPERATOR:* 
												SEMICOLON:;
										typeName:
											type_var:
												class:
													class_variable_names:Float
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:getTotal
								NEWLINE:$\n
								FORSLASH:/
								NEWLINE:$\n
								SEMICOLON:;
								method_declaration:
									methodDefinition:
										methodName:
											name_var:
												variable:
													variable_names:setValue
										inline:
											variable_declaration:
												typeName:
													type_var:
														class:
															class_variable_names:Float
												variableName:
													name_var:
														exact:
															WILD:newValue
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														exact:
															WILD:value
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:newValue
													EQUALS:=
												SEMICOLON:;
										typeName:
											type_var:
												class:
													class_variable_names:void
								NEWLINE:$\n
								NEWLINE:$\n
								NEWLINE:$\n
								SEMICOLON:;
								NEWLINE:$\n
								NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:attack
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:victim
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:offender
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:use
									inline:
										COMMA:,
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											variableName:
												name_var:
													variable:
														variable_names:victim
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											variableName:
												name_var:
													variable:
														variable_names:offender
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
							DOT:.
							DOT:.
							packageName:
								name_var:
									exact:
										WILD:attacks
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							DOT:.
							className:
								variable_names:Attack
							packageName:
								name_var:
									exact:
										WILD:skills
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											class:
												class_variable_names:Integer
									methodName:
										name_var:
											variable:
												variable_names:getCost
									inline:
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											variableName:
												name_var:
													exact:
														WILD:entity
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:entity
															name_var:
																variable:
																	variable_names:use
														group:
															name_var:
																exact:
																	WILD:(int)(float)cost
														DOT:.
							NEWLINE:$\n
							NEWLINE:$\n
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
									inline:
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:attacker
											typeName:
												type_var:
													class:
														class_variable_names:Entity
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:defender
											typeName:
												type_var:
													class:
														class_variable_names:Entity
										COMMA:,
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Attack
												type_var:
													class:
														class_variable_names:Damage
												ACCESS:->
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:getDamage
							parentName:
								type_var:
									class:
										class_variable_names:Skill
							method_declaration:
								methodDefinition:
									methodName:
										name_var:
											variable:
												variable_names:getAttackId
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:Attack
									inline:
							NEWLINE:$\n
							NEWLINE:$\n
							packageName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:packageName
							packageName:
								name_var:
									exact:
										WILD:behaviours
							method_declaration:
								methodDefinition:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									inline:
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											variableName:
												name_var:
													exact:
														WILD:entity
									typeName:
										type_var:
											class:
												class_variable_names:Float
									methodName:
										name_var:
											variable:
												variable_names:getRange
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																exact:
																	WILD:range
														group:
															name_var:
																variable:
																	variable_names:use
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:entity
											RETURN:return 
											SEMICOLON:;
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									methodName:
										name_var:
											variable:
												variable_names:isOffCooldown
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
													OPERATOR:== 
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									inline:
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							DOT:.
							class_declaration:
								className:
									variable_names:Id
								FORSLASH:/
								NEWLINE:$\n
								FORSLASH:/
								objectType:
									CLASS:class 
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									inline:
										COMMA:,
										variable_declaration:
											variableName:
												name_var:
													exact:
														WILD:attacker
											typeName:
												type_var:
													class:
														class_variable_names:Entity
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											variableName:
												name_var:
													exact:
														WILD:defender
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											variable_declaration:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:getDamage
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:attacker
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:defender
												variableName:
													name_var:
														exact:
															WILD:damage
												EQUALS:=
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Attack
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Damage
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_conditional:
											conditional:
												ELSE:else
											as_body:
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:defender
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:defender
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attacker
																							COMMA:,
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:damage
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										exact:
																											BACKSLASH:\
																											variable_names:Miss
																									type_var:
																										class:
																											class_variable_names:Events
																									ACCESS:->
																						NEW:new 
																	name_var:
																		variable:
																			variable_names:on
																DOT:.
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															BACKSLASH:\
															OPERATOR:+= 
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:1
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:experience
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
									body_element:
										body_conditional:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getHit
														parameters:
													DOT:.
													group:
														name_var:
															exact:
																WILD:damage
											conditional:
												IF:if
											as_body:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		exact:
																			WILD:defender
																group:
																	name_var:
																		variable:
																			variable_names:on
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										exact:
																											variable_names:Hit
																											BACKSLASH:\
																									type_var:
																										class:
																											class_variable_names:Events
																									ACCESS:->
																						NEW:new 
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:attacker
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:defender
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												exact:
																													WILD:damage
																							COMMA:,
																							COMMA:,
												body_element:
													body_line:
														body_statement:
															BACKSLASH:\
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:experience
															OPERATOR:+= 
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:3
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:attack
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											variable_assignment:
												name_var:
													exact:
														WILD:cooldown
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:getCost
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:attacker
												EQUALS:=
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:attacker
													group:
														name_var:
															variable:
																variable_names:on
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			NEW:new 
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:damage
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:defender
																				COMMA:,
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:attacker
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							exact:
																								BACKSLASH:\
																								variable_names:PreAttack
																						ACCESS:->
																						type_var:
																							class:
																								class_variable_names:Events
													DOT:.
											SEMICOLON:;
									body_element:
										body_line:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															exact:
																WILD:attacker
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			NEW:new 
																			parameters:
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:defender
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:attacker
																				COMMA:,
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:damage
																			typeName:
																				type_var:
																					access_multi:
																						ACCESS:->
																						type_var:
																							exact:
																								BACKSLASH:\
																								variable_names:PostAttack
																						type_var:
																							class:
																								class_variable_names:Events
														name_var:
															variable:
																variable_names:on
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						WEAK:~
						variableName:
							name_var:
								exact:
									WILD:experience
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						EQUALS:=
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					objectType:
						CLASS:class 
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										EQUALS:=
										name_var:
											exact:
												WILD:hasEntityFocus
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									variableName:
										name_var:
											exact:
												WILD:newFocus
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					NEWLINE:$\n
					DOT:.
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:entity
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:range
												DOT:.
												group:
													name_var:
														variable:
															variable_names:use
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getRange
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													exact:
														BACKSLASH:\
														variable_names:Tick
												type_var:
													class:
														class_variable_names:Events
									variableName:
										name_var:
											exact:
												WILD:event
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										OPERATOR:> 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
													BACKSLASH:\
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							methodName:
								name_var:
									variable:
										variable_names:on
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:skills
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																	OPERATOR:- 
															RETURN:return 
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														body_return:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		DOT:.
																	OPERATOR:- 
															SEMICOLON:;
															RETURN:return 
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:hasEntityFocus
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										body_call:
											group:
												name_var:
													exact:
														WILD:otherSkill
											DOT:.
											group:
												name_var:
													exact:
														WILD:cooldown
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:compareTo
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:otherSkill
									typeName:
										type_var:
											class:
												class_variable_names:Skill
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
														body_call:
															group:
																name_var:
																	exact:
																		WILD:otherSkill
															group:
																name_var:
																	exact:
																		WILD:cooldown
															DOT:.
														OPERATOR:- 
												RETURN:return 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											OPERATOR:== 
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0
											body_call:
												group:
													name_var:
														exact:
															WILD:cooldown
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:isOffCooldown
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							inline:
					NEWLINE:$\n
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					NEWLINE:$\n
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							methodName:
								name_var:
									variable:
										variable_names:getName
							typeName:
								type_var:
									class:
										class_variable_names:String
							inline:
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:cooldown
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:use
							inline:
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:victim
									typeName:
										type_var:
											class:
												class_variable_names:Entity
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											exact:
												WILD:hasEntityFocus
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
									variableName:
										name_var:
											exact:
												WILD:newFocus
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
									SEMICOLON:;
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getDescription
					method_declaration:
						methodDefinition:
							inline:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:canChase
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:true
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getName
							typeName:
								type_var:
									class:
										class_variable_names:String
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:activity
											DOT:.
											group:
												name_var:
													variable:
														variable_names:hasTarget
												parameters:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:activity
																			group:
																				name_var:
																					variable:
																						variable_names:getTargetEntity
																				parameters:
															name_var:
																variable:
																	variable_names:satisfies
														group:
															name_var:
																variable:
																	variable_names:targetCriteria
														DOT:.
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activity
																						group:
																							name_var:
																								variable:
																									variable_names:getTargetEntity
																							parameters:
																						DOT:.
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
																			COMMA:,
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
									SEMICOLON:;
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:isOffCooldown
												parameters:
									as_body:
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
							inline:
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:activity
									typeName:
										type_var:
											class:
												class_variable_names:Activity
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													FOR:for
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:getEntitiesWithin
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getRange
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:targetCriteria
																COMMA:,
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getLocation
															parameters:
														group:
															name_var:
																variable:
																	variable_names:user
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															variable:
																variable_names:potential
												OPERATOR:: 
												as_body:
													body_element:
														body_return:
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:potential
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
																		name_var:
																			exact:
																				variable_names:use
																				BACKSLASH:\
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getCost
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
													name_var:
														variable:
															variable_names:use
												group:
													name_var:
														exact:
															WILD:(int)(float)cost
												DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:entity
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Modifier
									type_var:
										class:
											class_variable_names:Entity
						variableName:
							name_var:
								exact:
									WILD:cost
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					className:
						variable_names:Skill
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						WEAK:~
						EQUALS:=
						variableName:
							name_var:
								exact:
									WILD:hasEntityFocus
					method_declaration:
						methodDefinition:
							inline:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Skill
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								exact:
									WILD:range
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
									type_var:
										class:
											class_variable_names:Modifier
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
					variable_declaration:
						typeName:
							type_var:
								exact:
									variable_names:EntityCriteria
									BACKSLASH:\
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						variableName:
							name_var:
								exact:
									WILD:targetCriteria
						EQUALS:=
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						FORSLASH:/
						parentName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Usable
									type_var:
										class:
											class_variable_names:Id
						objectType:
							CLASS:class 
						NEWLINE:$\n
						className:
							variable_names:Id
					SEMICOLON:;
				NEWLINE:$\n
				class_declaration:
					DOT:.
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:name
									typeName:
										type_var:
											class:
												class_variable_names:String
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							typeName:
								STATEMENT_TYPE:Statement
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:name
																name_var:
																	variable:
																		variable_names:Skills
																ACCESS:->
													group:
														name_var:
															variable:
																variable_names:id
									RETURN:return 
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:skills
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Skill
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:skillName
							static:
								STA:@
					DOT:.
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					className:
						variable_names:Skills
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:EntityCriteria
									methodName:
										ADD:+=
									class_declaration:
										NEWLINE:$\n
										objectType:
											CLASS:class 
										className:
											variable_names:Free
										FORSLASH:/
										method_declaration:
											methodDefinition:
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:candidate
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
										NEWLINE:$\n
										FORSLASH:/
										parentName:
											type_var:
												exact:
													BACKSLASH:\
													variable_names:EntityCriteria
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										NEWLINE:$\n
										FORSLASH:/
										variable_declaration:
											EQUALS:=
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Position
														type_var:
															class:
																class_variable_names:Environment
														ACCESS:->
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											variableName:
												name_var:
													variable:
														variable_names:to
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																OPERATOR:& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																OPERATOR:>= 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleRight
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleLeft
																OPERATOR:<= 
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:candidate
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														variable_declaration:
															EQUALS:=
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:getDirectionTo
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:to
																		group:
																			name_var:
																				variable:
																					variable_names:candidate
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:getLocation
																			parameters:
																		DOT:.
															typeName:
																type_var:
																	class:
																		class_variable_names:Double
															variableName:
																name_var:
																	variable:
																		variable_names:direction
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										parentName:
											type_var:
												exact:
													BACKSLASH:\
													variable_names:EntityCriteria
										variable_declaration:
											EQUALS:=
											typeName:
												type_var:
													class:
														class_variable_names:Double
											variableName:
												name_var:
													variable:
														variable_names:angleLeft
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
										FORSLASH:/
										SEMICOLON:;
										className:
											variable_names:AngleTo
										NEWLINE:$\n
										objectType:
											CLASS:class 
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Double
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
											variableName:
												name_var:
													variable:
														variable_names:angleRight
										NEWLINE:$\n
										SEMICOLON:;
										SEMICOLON:;
										NEWLINE:$\n
									type_var:
										exact:
											variable_names:EntityCriteria
											BACKSLASH:\
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createList
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_manipulate:
									methodName:
										ADD:+=
									class_declaration:
										method_declaration:
											methodDefinition:
												inline:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														RETURN:return 
												body_element:
													NEWLINE:$\n
										FORSLASH:/
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Skill
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
															parameters:
															NEW:new 
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Skill
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
											variableName:
												name_var:
													exact:
														WILD:id
											static:
												STA:@
											EQUALS:=
										NEWLINE:$\n
										objectType:
											CLASS:class 
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:getId
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Id
															type_var:
																class:
																	class_variable_names:Skill
															ACCESS:->
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														SEMICOLON:;
														RETURN:return 
												inline:
												body_element:
													NEWLINE:$\n
										FORSLASH:/
										SEMICOLON:;
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														variable:
															variable_names:use
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:user
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
													COMMA:,
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:victim
												body_element:
													NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Skill
										className:
											variable_names:skillName
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getName
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:skillName
														RETURN:return 
														SEMICOLON:;
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
									type_var:
										class:
											class_variable_names:Skills
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									class_declaration:
										NEWLINE:$\n
										objectType:
											CLASS:class 
										NEWLINE:$\n
										className:
											variable_names:TargetCriteria
										FORSLASH:/
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:user
												body_element:
													NEWLINE:$\n
										FORSLASH:/
										WEAK:~
										parentName:
											type_var:
												exact:
													BACKSLASH:\
													variable_names:EntityCriteria
									methodName:
										ADD:+=
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Skills
											ACCESS:->
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:skillName
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										WEAK:~
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
										variableName:
											name_var:
												variable:
													variable_names:isFirst
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										EQUALS:=
									SEMICOLON:;
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:require
										NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													COLON::
													tokenName:
														NAME:boolean_statement
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:TargetCriteria
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																						name_var:
																							variable:
																								variable_names:Skills
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:getContext
																				parameters:
																			group:
																				name_var:
																					variable:
																						variable_names:getMethod
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:satisfies
																typeName:
																	CONTEXT_TYPE:Context 
																variableName:
																	name_var:
																		variable:
																			variable_names:canUseContext
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:TargetCriteria
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																				name_var:
																					variable:
																						variable_names:Skills
																				ACCESS:->
																OPERATOR:->*
																body_call:
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:satisfies
																	group:
																		parameters:
																			method_argument:
																				as_statement:
																					body_element:
																						body_conditional:
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										RETURN:return 
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:false
																										SEMICOLON:;
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																COMMA:,
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:canUseContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																							conditional:
																								IF:if
																		name_var:
																			variable:
																				variable_names:prependToBody
										body_element:
											NEWLINE:$\n
									tokenInstance:
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													NEWLINE:$\n
													tokenName:
														NAME:body_element
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_manipulate:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Skills
																	ACCESS:->
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:skillName
																	as_method:
																		name_var:
																			exact:
																				WILD:use
																		ACCESS:->
																		AS_METHOD_NAME:*
																	ACCESS:->
															methodName:
																ADD:+=
															body:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				as_method:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getBodyElement
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:useContext
												variableName:
													NAME:atom
												COLON::
										COLON::
										tokenName:
											NAME:use
										body_element:
											NEWLINE:$\n
									tokenInstance:
										body_element:
											body_manipulate:
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																EQUALS:=
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_method:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																access:
																																	name_var:
																																		variable:
																																			variable_names:atom
																																	name_var:
																																		exact:
																																			WILD:has_chance
																																	ACCESS:->
																										name_var:
																											exact:
																												variable_names:getChance
																												BACKSLASH:\
																typeName:
																	STATEMENT_TYPE:Statement
																variableName:
																	name_var:
																		variable:
																			variable_names:chance
													body_element:
														body_conditional:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:atom
																				name_var:
																					exact:
																						WILD:boolean_statement
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
																OPERATOR:!= 
															conditional:
																IF:if
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		variable_declaration:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_method:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														exact:
																															BACKSLASH:\
																															variable_names:getBooleanStatement
																													parameters:
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			access:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																				name_var:
																																					exact:
																																						WILD:boolean_statement
																																				ACCESS:->
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:useContext
																			typeName:
																				STATEMENT_TYPE:Statement
																			EQUALS:=
																			variableName:
																				name_var:
																					variable:
																						variable_names:bool
																		SEMICOLON:;
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													conditional:
																														IF:if
																													as_body:
																														body_element:
																															body_conditional:
																																conditional:
																																	IF:if
																																	ELSE:else
																																as_body:
																																	body_element:
																																		body_return:
																																			VOID:void
																																			SEMICOLON:;
																																			RETURN:return 
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																								name_var:
																									variable:
																										variable_names:prependToBody
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																										ACCESS:->
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																		conditional:
																			ELSE:else
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		conditional:
																			IF:if
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						name_var:
																							variable:
																								variable_names:isFirst
																						EQUALS:=
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						OPERATOR:->*
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									exact:
																										WILD:use
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													as_body:
																														body_element:
																															body_conditional:
																																conditional:
																																	IF:if
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																																as_body:
																																	body_element:
																																		body_return:
																																			VOID:void
																																			SEMICOLON:;
																																			RETURN:return 
																								name_var:
																									variable:
																										variable_names:prependToBody
																						body_call:
																							group:
																								name_var:
																									access:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
													COLON::
													tokenName:
														NAME:option
													body_element:
														body_conditional:
															as_body:
																body_element:
																	body_conditional:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		as_body:
																			body_element:
																				body_line:
																					variable_assignment:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						EQUALS:=
																						name_var:
																							variable:
																								variable_names:isFirst
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													as_body:
																														body_element:
																															body_return:
																																RETURN:return 
																																SEMICOLON:;
																																VOID:void
																													conditional:
																														IF:if
																							DOT:.
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										ACCESS:->
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																						OPERATOR:->*
																			body_element:
																				NEWLINE:$\n
																		conditional:
																			IF:if
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														ELSE:else
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													as_body:
																														body_element:
																															body_return:
																																SEMICOLON:;
																																RETURN:return 
																																VOID:void
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																		conditional:
																			ELSE:else
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															conditional:
																ELSE:else
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
												COLON::
										COLON::
										tokenName:
											NAME:miss
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									COLON::
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:variable_header
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:addVariableHeader
																	BACKSLASH:\
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Skills
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																						ACCESS:->
										NEWLINE:$\n
									tokenInstance:
										tokenName:
											NAME:cooldown
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														type_var:
															class:
																class_variable_names:Skills
														ACCESS:->
														ACCESS:->
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
												body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	exact:
																		WILD:cost
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								DOT:.
																EQUALS:=
												methodName:
													ADD:+=
										NEWLINE:$\n
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:range
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														ACCESS:->
														type_var:
															class:
																class_variable_names:Skills
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														ACCESS:->
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								DOT:.
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																									name_var:
																										variable:
																											variable_names:getRange
																EQUALS:=
																name_var:
																	exact:
																		WILD:range
															SEMICOLON:;
										NEWLINE:$\n
										COLON::
									variableName:
										NAME:element
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	variable_assignment:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						NEW:new 
																						typeName:
																							type_var:
																								access_multi:
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:skillName
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:Skills
																									ACCESS:->
																									type_var:
																										class:
																											class_variable_names:TargetCriteria
																						parameters:
																		name_var:
																			exact:
																				WILD:targetCriteria
																		EQUALS:=
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														name_var:
															variable:
																variable_names:Skills
										OPERATOR:->*.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										variableName:
											name_var:
												variable:
													variable_names:useContext
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getContext
														parameters:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:skillName
																name_var:
																	variable:
																		variable_names:Skills
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:use
														name_var:
															variable:
																variable_names:getMethod
													DOT:.
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:description
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:+
														typeName:
															STATEMENT_TYPE:Statement
										typeName:
											STATEMENT_TYPE:Statement
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			body_return:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:skillName
																											type_var:
																												class:
																													class_variable_names:Skills
																											ACCESS:->
																				SEMICOLON:;
																				RETURN:return 
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:skillName
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																			DOT:.
											group:
												name_var:
													variable:
														variable_names:Skills
											DOT:.
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
												name_var:
													variable:
														variable_names:getMethod
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:description
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:description
														DOT:.
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_quote:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
															name_var:
																variable:
																	variable_names:add
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:skillName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																CAMEL:^
																name_var:
																	exact:
																		WILD:skillName
																name_var:
																	variable:
																		variable_names:declarationToken
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		class_declaration:
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:MouseEvent
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:Press
										ACCESS:->
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				WEAK:~
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								parameters:
								NEW:new 
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Environment
											class_variable_names:ArrayList
				variableName:
					name_var:
						variable:
							variable_names:environments
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:Environment
							class_variable_names:List
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										parameters:
										typeName:
											type_var:
												class:
													class_variable_names:Gui
										NEW:new 
					methodName:
						name_var:
							variable:
								variable_names:main
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:args
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:mainStringArgs
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					body_element:
						NEWLINE:$\n
			variable_declaration:
				WEAK:~
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:mosiac
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
				typeName:
					type_var:
						class:
							class_variable_names:Tile
			objectType:
				CLASS:class 
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:Drag
										type_var:
											class:
												class_variable_names:Events
							variableName:
								name_var:
									variable:
										variable_names:event
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:listen
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:MouseEvent
										type_var:
											class:
												class_variable_names:Move
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			SEMICOLON:;
			DOT:.
			parentName:
				type_var:
					exact:
						BACKSLASH:\
						variable_names:Object
			NEWLINE:$\n
			SEMICOLON:;
			interfaceName:
				type_var:
					access_multi:
						type_var:
							class:
								class_variable_names:InputHandler
						ACCESS:->
						type_var:
							class:
								class_variable_names:Events
						type_var:
							class:
								class_variable_names:KeyboardEvent
						type_var:
							class:
								class_variable_names:Listener
						ACCESS:->
						ACCESS:->
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Area
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
				EQUALS:=
				WEAK:~
				variableName:
					name_var:
						variable:
							variable_names:focusArea
			variable_declaration:
				WEAK:~
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:lastTick
				typeName:
					type_var:
						class:
							class_variable_names:Double
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:thisTick
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						body_line:
							body_statement:
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:event
														group:
															name_var:
																variable:
																	variable_names:getKeyInt
															parameters:
										name_var:
											variable:
												variable_names:pressedKeys
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Release
										ACCESS:->
										type_var:
											class:
												class_variable_names:KeyboardEvent
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										ACCESS:->
							variableName:
								name_var:
									variable:
										variable_names:event
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
									group:
										name_var:
											variable:
												variable_names:add
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			exact:
																				variable_names:Town
																				BACKSLASH:\
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Environments
									DOT:.
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								FOR:for
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Environment
								variableName:
									name_var:
										variable:
											variable_names:environment
							OPERATOR::
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:load
													parameters:
												group:
													name_var:
														variable:
															variable_names:environment
												DOT:.
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:addMouseListener
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
									group:
										name_var:
											variable:
												variable_names:InputHandler
									DOT:.
							SEMICOLON:;
					inline:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
										name_var:
											variable:
												variable_names:addKeyboardListener
									group:
										name_var:
											variable:
												variable_names:InputHandler
									DOT:.
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:add
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			exact:
																				BACKSLASH:\
																				variable_names:Forest
																		type_var:
																			class:
																				class_variable_names:Environments
																		ACCESS:->
									group:
										name_var:
											variable:
												variable_names:environments
									DOT:.
							SEMICOLON:;
					methodName:
						name_var:
							variable:
								variable_names:load
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:lastTick
				WEAK:~
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:1000.0
						OPERATOR:/
						body_call:
							group:
								name_var:
									variable:
										variable_names:currentTimeMillis
								parameters:
							group:
								name_var:
									exact:
										BACKSLASH:\
										variable_names:System
							DOT:.
				typeName:
					type_var:
						class:
							class_variable_names:Double
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Game
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			interfaceName:
				type_var:
					access_multi:
						ACCESS:->
						ACCESS:->
						ACCESS:->
						type_var:
							class:
								class_variable_names:InputHandler
						type_var:
							class:
								class_variable_names:MouseEvent
						type_var:
							class:
								class_variable_names:Events
						type_var:
							class:
								class_variable_names:Listener
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:Release
										ACCESS:->
							variableName:
								name_var:
									variable:
										variable_names:event
					methodName:
						name_var:
							variable:
								variable_names:listen
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:game
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				ARRAY_TYPE:[]
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:boolean
								array_parameters:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:128
				typeName:
					type_var:
						class:
							class_variable_names:boolean
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:pressedKeys
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:true
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:event
														group:
															name_var:
																variable:
																	variable_names:getKeyInt
															parameters:
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Press
										ACCESS:->
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										type_var:
											class:
												class_variable_names:KeyboardEvent
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Gui
												group:
													name_var:
														variable:
															variable_names:renderer
												DOT:.
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:-0.01f
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
												DOT:.
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:17
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:30
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:renderer
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
								body_element:
									NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Gui
												group:
													name_var:
														variable:
															variable_names:renderer
												DOT:.
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:31
										name_var:
											variable:
												variable_names:pressedKeys
							conditional:
								IF:if
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										variable_assignment:
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
															name_var:
																variable:
																	variable_names:get
														group:
															name_var:
																variable:
																	variable_names:getAreas
															parameters:
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:environments
											name_var:
												variable:
													variable_names:focusArea
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:focusArea
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					body_element:
						NEWLINE:$\n
					inline:
					body_element:
						body_conditional:
							OPERATOR::
							conditional:
								FOR:for
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:environment
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:thisTick
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:lastTick
																OPERATOR:-
													name_var:
														variable:
															variable_names:tick
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:environment
								typeName:
									type_var:
										class:
											class_variable_names:Environment
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
										name_var:
											variable:
												variable_names:display
									group:
										name_var:
											variable:
												variable_names:focusArea
									DOT:.
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:renderer
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
												group:
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:-0.01f
													name_var:
														variable:
															variable_names:moveView
										SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:32
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:update
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										OPERATOR:/
										body_call:
											group:
												name_var:
													exact:
														variable_names:System
														BACKSLASH:\
											group:
												name_var:
													variable:
														variable_names:currentTimeMillis
												parameters:
											DOT:.
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1000.0
								name_var:
									variable:
										variable_names:thisTick
								EQUALS:=
					body_element:
						body_line:
							variable_assignment:
								name_var:
									variable:
										variable_names:lastTick
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:thisTick
							SEMICOLON:;
		NEWLINE:$\n
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:String[]
			typeName:
				type_var:
					class:
						class_variable_names:String
			EQUALS:=
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:mainStringArgs
		SEMICOLON:;
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		class_declaration:
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:TypeName
							variableName:
								name_var:
									exact:
										WILD:event
					methodName:
						name_var:
							variable:
								variable_names:listen
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			objectType:
				INTERFACE:interface 
			NEWLINE:$\n
			DOT:.
			className:
				variable_names:Listenable
			HID:<
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			templateTypeName:
				NAME:TypeName
			IN:>
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		method_declaration:
			methodDefinition:
				methodName:
					name_var:
						variable:
							variable_names:getBooleanStatement
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:operator
						RETURN:return 
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							typeName:
								STATEMENT_TYPE:Statement
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:operator
						SEMICOLON:;
				body_element:
					body_manipulate:
						COLON::
						name_var:
							variable:
								variable_names:booleanStatement
						tokenInstance:
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							tokenName:
								NAME:operator
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:element
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:&
									conditional:
										IF:if
									as_body:
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:||
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:operator
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													ELSE:else
												as_body:
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:&&
																		name_var:
																			variable:
																				variable_names:set
																	group:
																		name_var:
																			variable:
																				variable_names:operator
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:|
										OPERATOR:== 
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:element
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:||
																	group:
																		name_var:
																			variable:
																				variable_names:operator
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									WILD:&&
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:operator
															SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
										IF:if
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getRequirement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:variableCall
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:negate
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:requirement
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:element
															COMMA:,
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:hasCall
									SEMICOLON:;
							NEWLINE:$\n
							tokenName:
								NAME:has_statement
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:operator
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:hasCall
												name_var:
													variable:
														variable_names:add
											DOT:.
									SEMICOLON:;
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:element
														name_var:
															exact:
																WILD:NOT
														ACCESS:->
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:hasCall
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
														DOT:.
												SEMICOLON:;
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:variableCall
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
																					name_var:
																						variable:
																							variable_names:element
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
										EQUALS:=
									SEMICOLON:;
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:element
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:environmentName
																	group:
																		name_var:
																			variable:
																				variable_names:equals
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:getName
																							parameters:
																						group:
																							name_var:
																								exact:
																									WILD:spawn
																						DOT:.
																						DOT:.
																						group:
																							parameters:
																							name_var:
																								variable:
																									variable_names:getParent
																	DOT:.
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:operator
									SEMICOLON:;
							tokenName:
								NAME:spawn_statement
							COLON::
						tokenInstance:
							tokenName:
								NAME:has_chance
							NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:operator
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getChance
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
						variableName:
							NAME:element
						tokenInstance:
							tokenName:
								NAME:statement
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getStatement
																			BACKSLASH:\
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:negate
																		COMMA:,
												name_var:
													variable:
														variable_names:add
											DOT:.
											group:
												name_var:
													variable:
														variable_names:operator
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						variableName:
							name_var:
								variable:
									variable_names:negate
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:booleanStatement
					COMMA:,
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				typeName:
					STATEMENT_TYPE:Statement
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				INTERFACE:interface 
			className:
				variable_names:Source
			packageName:
				name_var:
					exact:
						WILD:interfaces
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			DOT:.
		variable_declaration:
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
							NEW:new 
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:declaredListSet
		class_declaration:
			objectType:
				INTERFACE:interface 
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:interfaces
			className:
				variable_names:Loaddable
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:load
					inline:
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			DOT:.
			className:
				variable_names:Tickable
			objectType:
				INTERFACE:interface 
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Double
							variableName:
								name_var:
									exact:
										WILD:millisSinceLastFrame
					methodName:
						name_var:
							variable:
								variable_names:tick
					typeName:
						type_var:
							class:
								class_variable_names:void
			DOT:.
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:interfaces
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:misc
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											typeName:
												BODY_TYPE:Body 
											parameters:
							EQUALS:=
							typeName:
								BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:body
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
						conditional:
							ELSE:else
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											NEW:new 
											typeName:
												BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:elseBody
							EQUALS:=
							typeName:
								BODY_TYPE:Body 
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getIfStatement
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:header
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											NEW:new 
											typeName:
												STATEMENT_TYPE:Statement
							typeName:
								STATEMENT_TYPE:Statement
						SEMICOLON:;
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													NAME:
														NUMBER:0
							WEAK:~
							variableName:
								name_var:
									variable:
										variable_names:mode
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:Integer
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													conditional:
														ELSE:else
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													conditional:
														IF:if
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
									SEMICOLON:;
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:1 
						conditional:
							IF:if
							ELSE:else
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0 
							OPERATOR:== 
						as_body:
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													conditional:
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
									RETURN:return 
									SEMICOLON:;
						conditional:
							IF:if
				body_element:
					body_manipulate:
						tokenInstance:
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:body_element
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:body
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getBodyElement
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:elseHeader
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:context
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					COMMA:,
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBooleanStatement
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													name_var:
														variable:
															variable_names:mode
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:2
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:boolean_statement
									name_var:
										variable:
											variable_names:element
									variableName:
										NAME:atom
									COLON::
									tokenInstance:
										NEWLINE:$\n
										tokenName:
											NAME:body_element
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:elseBody
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBodyElement
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:context
										COLON::
										body_element:
											NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
										name_var:
											variable:
												variable_names:mode
							COLON::
							tokenName:
								NAME:else_statement
						variableName:
							NAME:element
						name_var:
							variable:
								variable_names:ifStatementToken
						tokenInstance:
							tokenName:
								NAME:boolean_statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:header
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																	name_var:
																		exact:
																			variable_names:getBooleanStatement
																			BACKSLASH:\
												name_var:
													variable:
														variable_names:add
									SEMICOLON:;
							NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
						COLON::
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:elseHeader
													conditional:
														ELSE:else
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													conditional:
														IF:if
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:2 
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							OPERATOR:== 
						conditional:
							IF:if
							ELSE:else
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							typeName:
								STATEMENT_TYPE:Statement
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
							variableName:
								name_var:
									variable:
										variable_names:elseHeader
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:ifStatementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
							OPERATOR:== 
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									THROW:throw 
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Generator
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableHeaderToken
										body_call:
											group:
												name_var:
													concat:
														PLUS:+
														name_var:
															exact:
																WILD:!
														name_var:
															exact:
																WILD:Could not find type:
														name_var:
															variable:
																variable_names:typeName
														PLUS:+
										OPERATOR:+ 
						conditional:
							IF:if
				methodName:
					name_var:
						variable:
							variable_names:addVariableHeader
				body_element:
					body_line:
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:getTypeName
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:type_name
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableHeaderToken
							variableName:
								name_var:
									variable:
										variable_names:typeName
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:String
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							typeName:
								CONTEXT_TYPE:Context 
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:getClassContext
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
										group:
											name_var:
												variable:
													variable_names:inputClass
										DOT:.
										DOT:.
										group:
											parameters:
											name_var:
												variable:
													variable_names:getContext
							variableName:
								name_var:
									variable:
										variable_names:type
						SEMICOLON:;
				typeName:
					VARIABLE_TYPE:Variable 
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:inputClass
									group:
										name_var:
											variable:
												variable_names:getVariable
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							variable:
																								variable_names:variableHeaderToken
																						ACCESS:->
									DOT:.
				inner:
					IN:>
				body_element:
					body_manipulate:
						type_var:
							class:
								class_variable_names:inputClass
						methodName:
							ADD:+=
						variable_declaration:
							variableName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														access:
															name_var:
																exact:
																	WILD:variableName
															ACCESS:->
															name_var:
																variable:
																	variable_names:variableHeaderToken
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:typeName
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						typeName:
							CLASS_TYPE:Class 
						variableName:
							name_var:
								variable:
									variable_names:inputClass
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:variableHeaderToken
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:TT
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:<T>T
			inner:
				IN:>
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
							typeName:
								STATEMENT_TYPE:Statement
							variableName:
								name_var:
									variable:
										variable_names:ret
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:1 
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:getSize
									parameters:
								DOT:.
								group:
									name_var:
										variable:
											variable_names:ret
							OPERATOR:&& 
							body_call:
								group:
									name_var:
										variable:
											variable_names:negate
						conditional:
							IF:if
						as_body:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:ret
											group:
												name_var:
													variable:
														variable_names:negate
												parameters:
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:statementToken
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						variableName:
							name_var:
								variable:
									variable_names:initialNegate
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					COMMA:,
					COMMA:,
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getStatement
				inner:
					IN:>
				body_element:
					body_manipulate:
						tokenInstance:
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:braced
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:subStatement
											group:
												name_var:
													variable:
														variable_names:brace
												parameters:
									SEMICOLON:;
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getStatement
										variableName:
											name_var:
												variable:
													variable_names:subStatement
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:subStatement
											group:
												name_var:
													variable:
														variable_names:ret
											DOT:.
						name_var:
							variable:
								variable_names:statementToken
						variableName:
							NAME:element
						tokenInstance:
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:operator
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:set
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:ret
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:ret
														group:
															name_var:
																variable:
																	variable_names:set
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:element
																				name_var:
																					exact:
																						variable_names:negateOperator
																						BACKSLASH:\
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
									conditional:
										IF:if
						tokenInstance:
							tokenName:
								NAME:statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:subStatement
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:ret
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:subStatement
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
														name_var:
															exact:
																variable_names:getStatement
																BACKSLASH:\
									SEMICOLON:;
						COLON::
						tokenInstance:
							COLON::
							NEWLINE:$\n
							tokenName:
								NAME:NOT
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:=! 
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
										body_call:
											group:
												name_var:
													variable:
														variable_names:negate
						tokenInstance:
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:variable_call
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableCall
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:ret
											DOT:.
									SEMICOLON:;
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:element
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:variableCall
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							COLON::
				body_element:
					body_return:
						SEMICOLON:;
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:ret
				body_element:
					body_line:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							variableName:
								name_var:
									variable:
										variable_names:negate
							WEAK:~
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:initialNegate
						SEMICOLON:;
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:ListMaps
			packageName:
				name_var:
					exact:
						WILD:misc
			objectType:
				CLASS:class 
			DOT:.
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:forStatementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					COMMA:,
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						SEMICOLON:;
						RETURN:return 
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getForStatement
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:!= 
							body_call:
								group:
									name_var:
										access:
											name_var:
												exact:
													WILD:fromList
											ACCESS:->
											name_var:
												variable:
													variable_names:forStatementToken
						conditional:
							IF:if
						as_body:
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										typeName:
											CONTEXT_TYPE:Context 
										variableName:
											name_var:
												variable:
													variable_names:type
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
													group:
														name_var:
															variable:
																variable_names:getClassContext
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:typeName
													DOT:.
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:forStatementToken
																					name_var:
																						exact:
																							WILD:statement
																					name_var:
																						exact:
																							WILD:fromList
														name_var:
															exact:
																variable_names:getStatement
																BACKSLASH:\
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:right
										typeName:
											STATEMENT_TYPE:Statement
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:typeName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:variableHeaderToken
																					name_var:
																						exact:
																							WILD:type_name
														name_var:
															exact:
																variable_names:getTypeName
																BACKSLASH:\
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:variableHeaderToken
										typeName:
											type_var:
												class:
													class_variable_names:IToken
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:fromList
																ACCESS:->
																name_var:
																	exact:
																		WILD:variable_header
																ACCESS:->
																name_var:
																	variable:
																		variable_names:forStatementToken
									SEMICOLON:;
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_throw:
												body_statement:
													body_call:
														group:
															name_var:
																concat:
																	name_var:
																		exact:
																			WILD:Could not find type:
																	PLUS:+
																	name_var:
																		exact:
																			WILD:!
																	PLUS:+
																	name_var:
																		variable:
																			variable_names:typeName
													OPERATOR:+ 
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:Generator
														group:
															name_var:
																variable:
																	variable_names:completeTokenErrorMessage
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:variableHeaderToken
														DOT:.
												SEMICOLON:;
												THROW:throw 
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:type
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														SEMICOLON:;
														variable_declaration:
															typeName:
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:typeName
															variableName:
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							ACCESS:->
																							name_var:
																								variable:
																									variable_names:variableHeaderToken
																							name_var:
																								exact:
																									WILD:variableName
											group:
												name_var:
													variable:
														variable_names:context
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getBodyElements
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:forStatementToken
										typeName:
											BODY_TYPE:Body 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:body
									SEMICOLON:;
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:right
													OPERATOR:: 
													conditional:
														FOR:for
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								WILD:variableName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:variableHeaderToken
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:elementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						tokenInstance:
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																						COMMA:,
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:context
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																					name_var:
																						exact:
																							variable_names:getStatement
																							BACKSLASH:\
									SEMICOLON:;
									RETURN:return 
							tokenName:
								NAME:statement
						name_var:
							variable:
								variable_names:elementToken
						variableName:
							NAME:element
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_return:
													RETURN:return 
													SEMICOLON:;
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								variable_names:getStatement
																								BACKSLASH:\
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:context
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																							COMMA:,
									RETURN:return 
							NEWLINE:$\n
							COLON::
							tokenName:
								NAME:return_statement
							body_element:
								NEWLINE:$\n
						tokenInstance:
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getForStatement
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
									SEMICOLON:;
									RETURN:return 
							tokenName:
								NAME:for_statement
						tokenInstance:
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:variable_declaration
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getVariableDeclaration
									SEMICOLON:;
									RETURN:return 
							COLON::
						COLON::
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getIfStatement
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
									RETURN:return 
									SEMICOLON:;
							tokenName:
								NAME:if_statement
							body_element:
								NEWLINE:$\n
							COLON::
							NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:acquisition
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:subject
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
																					name_var:
																						variable:
																							variable_names:element
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
										typeName:
											STATEMENT_TYPE:Statement
									SEMICOLON:;
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getAcquisition
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														COMMA:,
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:element
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:acquisition
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							COLON::
						tokenInstance:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:doom
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:imposition
																				name_var:
																					variable:
																						variable_names:element
													name_var:
														variable:
															variable_names:getImposition
												group:
													name_var:
														variable:
															variable_names:Entity
												DOT:.
									SEMICOLON:;
									RETURN:return 
							COLON::
							NEWLINE:$\n
							tokenName:
								NAME:imposition
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										method_argument:
											body_statement:
												OPERATOR:|| 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																ACCESS:->
																name_var:
																	exact:
																		WILD:imposition
																name_var:
																	variable:
																		variable_names:element
																name_var:
																	exact:
																		WILD:IMPOSE
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:element
																ACCESS:->
																name_var:
																	exact:
																		WILD:PLUS
																name_var:
																	exact:
																		WILD:imposition
										variableName:
											name_var:
												variable:
													variable_names:doom
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:subject
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:variable_call
																					name_var:
																						variable:
																							variable_names:element
														name_var:
															exact:
																variable_names:getVariableCall
																BACKSLASH:\
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
							body_element:
								NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getBodyElement
				inner:
					IN:>
				body_element:
					body_return:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						SEMICOLON:;
						RETURN:return 
				typeName:
					STATEMENT_TYPE:Statement
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				inline:
					COMMA:,
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:variableDeclarationToken
				body_element:
					body_conditional:
						conditional:
							IF:if
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													variable_declaration:
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							exact:
																								WILD:variable_header
														EQUALS:=
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															exact:
																																WILD:statement
																														ACCESS:->
																														name_var:
																															variable:
																																variable_names:variableDeclarationToken
																							name_var:
																								exact:
																									variable_names:getStatement
																									BACKSLASH:\
													SEMICOLON:;
									SEMICOLON:;
									RETURN:return 
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:!= 
							body_call:
								group:
									name_var:
										access:
											name_var:
												exact:
													WILD:statement
											ACCESS:->
											name_var:
												variable:
													variable_names:variableDeclarationToken
				body_element:
					body_conditional:
						conditional:
							ELSE:else
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							exact:
																								WILD:variable_header
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						ACCESS:->
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
													SEMICOLON:;
									RETURN:return 
									SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							EQUALS:=
							typeName:
								CONTEXT_TYPE:Context 
							variableName:
								name_var:
									variable:
										variable_names:type
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getClassContext
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
										group:
											name_var:
												variable:
													variable_names:context
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
						as_body:
							body_element:
								body_throw:
									SEMICOLON:;
									THROW:throw 
									body_statement:
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													concat:
														PLUS:+
														PLUS:+
														name_var:
															variable:
																variable_names:typeName
														name_var:
															exact:
																WILD:!
														name_var:
															exact:
																WILD:Could not find type:
										body_call:
											DOT:.
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Generator
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableDeclarationToken
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getVariableDeclaration
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:typeName
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													BACKSLASH:\
													variable_names:getTypeName
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:variable_header
																		name_var:
																			exact:
																				WILD:type_name
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableDeclarationToken
							EQUALS:=
		SEMICOLON:;
		SEMICOLON:;
		NEWLINE:$\n
		variable_declaration:
			inner:
				IN:>
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:HashSet
							parameters:
							NEW:new 
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:declaredMapSet
		class_declaration:
			DOT:.
			className:
				variable_names:Criteria
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:satisfies
					inline:
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:TypeName
							variableName:
								name_var:
									exact:
										WILD:candidate
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:false
							RETURN:return 
							SEMICOLON:;
			NEWLINE:$\n
			templateTypeName:
				NAME:TypeName
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			IN:>
			HID:<
			objectType:
				CLASS:class 
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_return:
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:booleanStatement
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:context
											COMMA:,
											COMMA:,
										name_var:
											exact:
												BACKSLASH:\
												variable_names:getBooleanStatement
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				methodName:
					name_var:
						variable:
							variable_names:getBooleanStatement
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:booleanStatement
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				typeName:
					BODY_TYPE:Body 
				inner:
					IN:>
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											typeName:
												BODY_TYPE:Body 
											parameters:
							typeName:
								BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:result
							EQUALS:=
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:result
								group:
									name_var:
										variable:
											variable_names:setParentContext
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
								DOT:.
						SEMICOLON:;
				inline:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:elementsToken
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					COMMA:,
				body_element:
					body_return:
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:result
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						COLON::
						name_var:
							variable:
								variable_names:elementsToken
						tokenInstance:
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getBodyElement
																			BACKSLASH:\
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:getContext
																						parameters:
																					group:
																						name_var:
																							variable:
																								variable_names:result
																					DOT:.
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
												name_var:
													variable:
														variable_names:add
											DOT:.
											group:
												name_var:
													variable:
														variable_names:result
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:body_element
						variableName:
							NAME:element
				methodName:
					name_var:
						variable:
							variable_names:getBodyElements
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							access_multi:
								ACCESS:->
								type_var:
									class:
										class_variable_names:Id
								type_var:
									class:
										class_variable_names:Usable
					methodName:
						name_var:
							variable:
								variable_names:getId
					inline:
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Float
					methodName:
						name_var:
							variable:
								variable_names:getRange
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:user
							typeName:
								type_var:
									class:
										class_variable_names:Entity
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			class_declaration:
				className:
					variable_names:Id
				NEWLINE:$\n
				FORSLASH:/
				objectType:
					CLASS:class 
				FORSLASH:/
			className:
				variable_names:Usable
			method_declaration:
				methodDefinition:
					inline:
					methodName:
						name_var:
							variable:
								variable_names:getTargetCriteria
					typeName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:EntityCriteria
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
					methodName:
						name_var:
							variable:
								variable_names:canChase
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:user
							typeName:
								type_var:
									class:
										class_variable_names:Entity
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Activity
							variableName:
								name_var:
									variable:
										variable_names:activity
						COMMA:,
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:use
		NEWLINE:$\n
		SEMICOLON:;
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:requireHeader
							typeName:
								STATEMENT_TYPE:Statement
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												STATEMENT_TYPE:Statement
											NEW:new 
											parameters:
						SEMICOLON:;
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:showAsTrue
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:requirementToken
					variable_declaration:
						typeName:
							STATEMENT_TYPE:Statement
						variableName:
							name_var:
								variable:
									variable_names:candidate
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						name_var:
							variable:
								variable_names:requirementToken
						COLON::
						tokenInstance:
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:require_attack
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:innerHead
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
															name_var:
																exact:
																	WILD:has
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:id
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:Attacks
													group:
														name_var:
															variable:
																variable_names:getId
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:quanta
																					name_var:
																						exact:
																							WILD:attack_names
																					CAMEL:^
																					ACCESS:->
													DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											group:
												name_var:
													variable:
														variable_names:requireHeader
									SEMICOLON:;
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:NOT
														name_var:
															variable:
																variable_names:quanta
														ACCESS:->
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:innerHead
									conditional:
										IF:if
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														group:
															name_var:
																variable:
																	variable_names:innerHead
														DOT:.
												SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						variableName:
							NAME:quanta
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						conditional:
							IF:if
						as_body:
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											variable:
												variable_names:delimiter
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:||
										EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:showAsTrue
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:delimiter
							typeName:
								type_var:
									class:
										class_variable_names:String
							EQUALS:=
							WEAK:~
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:&&
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						tokenInstance:
							tokenName:
								NAME:require_trait
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:== 
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:innerHead
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:id
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:Traits
													group:
														name_var:
															variable:
																variable_names:getId
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:trait_names
																					ACCESS:->
																					CAMEL:^
																					name_var:
																						variable:
																							variable_names:quanta
									SEMICOLON:;
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:quanta
														ACCESS:->
														name_var:
															exact:
																WILD:NOT
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:negate
															parameters:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:innerHead
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:requireHeader
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
											DOT:.
									SEMICOLON:;
							COLON::
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:innerHead
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
															name_var:
																exact:
																	WILD:has
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
						variableName:
							NAME:quanta
						COLON::
						name_var:
							variable:
								variable_names:requirementToken
				methodName:
					name_var:
						variable:
							variable_names:getRequirement
				inner:
					IN:>
				body_element:
					body_manipulate:
						variableName:
							NAME:quanta
						name_var:
							variable:
								variable_names:requirementToken
						tokenInstance:
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:require_association
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:variableName
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getId
													EQUALS:=
													name_var:
														variable:
															variable_names:idValue
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:String
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:quanta
																								ACCESS:->
																								name_var:
																									exact:
																										WILD:variableName
													variableName:
														name_var:
															variable:
																variable_names:variableName
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:idValue
										variableName:
											name_var:
												variable:
													variable_names:id
									SEMICOLON:;
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														group:
															name_var:
																variable:
																	variable_names:innerHead
												SEMICOLON:;
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
									conditional:
										IF:if
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:NOT
														ACCESS:->
														name_var:
															variable:
																variable_names:quanta
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:negate
														group:
															name_var:
																variable:
																	variable_names:innerHead
														DOT:.
												SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:id
															name_var:
																exact:
																	WILD:has
														DOT:.
										variableName:
											name_var:
												variable:
													variable_names:innerHead
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															exact:
																WILD:association_names
														name_var:
															variable:
																variable_names:quanta
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													EQUALS:=
													name_var:
														variable:
															variable_names:idValue
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:getId
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:quanta
																								name_var:
																									exact:
																										WILD:association_names
																								CAMEL:^
																								ACCESS:->
																group:
																	name_var:
																		variable:
																			variable_names:Associations
												SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:idValue
										WEAK:~
										typeName:
											STATEMENT_TYPE:Statement
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:requireHeader
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
							body_element:
								NEWLINE:$\n
						COLON::
				body_element:
					body_manipulate:
						name_var:
							variable:
								variable_names:requirementToken
						variableName:
							NAME:quanta
						COLON::
						tokenInstance:
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:innerHead
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:requireHeader
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											as_statement:
												body_statement:
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
															parameters:
														group:
															name_var:
																as_method:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:candidate
														DOT:.
														DOT:.
														group:
															parameters:
															name_var:
																exact:
																	WILD:getValue
										variableName:
											name_var:
												variable:
													variable_names:innerHead
									SEMICOLON:;
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:operator
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:negateOperator
																			BACKSLASH:\
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:operator
												SEMICOLON:;
									conditional:
										IF:if
									body_statement:
										OPERATOR:&& 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:|| 
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:quanta
														name_var:
															exact:
																WILD:NOT
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										body_call:
											group:
												name_var:
													variable:
														variable_names:showAsTrue
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										OPERATOR:&&! 
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:quanta
														ACCESS:->
														name_var:
															exact:
																WILD:NOT
										OPERATOR:== 
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:quanta
																					name_var:
																						exact:
																							WILD:ORDINAL
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										WEAK:~
										variableName:
											name_var:
												variable:
													variable_names:operator
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:operator
												name_var:
													variable:
														variable_names:set
											group:
												name_var:
													variable:
														variable_names:innerHead
											DOT:.
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:methodName
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															concat:
																name_var:
																	exact:
																		WILD:get
																name_var:
																	variable:
																		variable_names:statName
																		CAMEL:^
																PLUS:+
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:require_stat
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:innerHead
											group:
												parameters:
													method_argument:
														as_statement:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									ACCESS:->
																									name_var:
																										exact:
																											WILD:INTEGER
																									name_var:
																										variable:
																											variable_names:quanta
												name_var:
													variable:
														variable_names:add
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:quanta
																					name_var:
																						exact:
																							WILD:hero_stats
													group:
														name_var:
															variable:
																variable_names:toLowerCase
														parameters:
													DOT:.
										variableName:
											name_var:
												variable:
													variable_names:statName
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						body_statement:
							body_call:
								DOT:.
								group:
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:delimiter
									name_var:
										variable:
											variable_names:set
								group:
									name_var:
										variable:
											variable_names:requireHeader
						SEMICOLON:;
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:requireHeader
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				inner:
					IN:>
				methodName:
					name_var:
						variable:
							variable_names:getStatement
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:statementToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					COMMA:,
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						SEMICOLON:;
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:context
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:statementToken
											COMMA:,
										name_var:
											exact:
												variable_names:getStatement
												BACKSLASH:\
				typeName:
					STATEMENT_TYPE:Statement
		NEWLINE:$\n
		class_declaration:
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:left
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:initialLeft
																			PLUS:+
																			name_var:
																				variable:
																					variable_names:floatCast
								EQUALS:=
							SEMICOLON:;
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									exact:
										WILD:initialLeft
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:initialRight
							typeName:
								type_var:
									class:
										class_variable_names:Float
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialRight
								name_var:
									exact:
										WILD:right
								EQUALS:=
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
							conditional:
								IF:if
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:collection
									group:
										parameters:
										name_var:
											variable:
												variable_names:isEmpty
					methodName:
						name_var:
							variable:
								variable_names:select
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:collection.get((int)(collection.size()*Math.random()))
							SEMICOLON:;
					static:
						STA:@
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:TT
							ISTYPENAME:$
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:List
										template_parameters:
											template_parameter:
												type_var:
													exact:
														variable_names:T
														BACKSLASH:\
							variableName:
								name_var:
									variable:
										variable_names:collection
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:difference
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:top
										OPERATOR:- 
										body_call:
											group:
												name_var:
													exact:
														WILD:bottom
								EQUALS:=
							SEMICOLON:;
					static:
						STA:@
					methodName:
						name_var:
							variable:
								variable_names:getIntegerBetween
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:top
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:bottom
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:(int)(double)result
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Double
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:bottom
										body_call:
											group:
												name_var:
													exact:
														WILD:difference
										body_call:
											DOT:.
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:Math
											group:
												name_var:
													variable:
														variable_names:random
												parameters:
										OPERATOR:* 
										OPERATOR:+ 
								variableName:
									name_var:
										exact:
											WILD:result
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Double
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Float
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:left
										OPERATOR:- 
										body_call:
											group:
												name_var:
													exact:
														WILD:right
								variableName:
									name_var:
										exact:
											WILD:difference
								EQUALS:=
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:left
									OPERATOR:* 
									body_call:
										group:
											name_var:
												exact:
													WILD:difference
									body_call:
										group:
											name_var:
												exact:
													variable_names:Math
													BACKSLASH:\
										DOT:.
										group:
											name_var:
												variable:
													variable_names:random
											parameters:
									OPERATOR:+ 
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
			NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:initialRight
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							variableName:
								name_var:
									exact:
										WILD:initialLeft
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								EQUALS:=
								name_var:
									exact:
										WILD:left
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:initialLeft
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				variable:
																					variable_names:floatCast
																			name_var:
																				exact:
																					WILD:initialRight
								EQUALS:=
								name_var:
									exact:
										WILD:right
							SEMICOLON:;
					methodName:
						NAME:
							AS_METHOD_NAME:*
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
					typeName:
						type_var:
							class:
								class_variable_names:Float
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:(float)Math.random()
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getRandomFloat
					body_element:
						NEWLINE:$\n
					static:
						STA:@
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Float
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
				EQUALS:=
				variableName:
					name_var:
						exact:
							WILD:left
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:normalize
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0.001 
								OPERATOR:> 
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
										RETURN:return 
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Double
							variableName:
								name_var:
									variable:
										variable_names:value
					body_element:
						body_conditional:
							conditional:
								IF:if
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:-1
							body_statement:
								OPERATOR:< 
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-0.001 
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
			NEWLINE:$\n
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:floatCast
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:String
				inner:
					IN:>
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:(float)(int)
			NEWLINE:$\n
			className:
				variable_names:Range
			class_declaration:
				packageName:
					name_var:
						exact:
							WILD:misc
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						inline:
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:inputEntity
								typeName:
									type_var:
										class:
											class_variable_names:Entity
						body_element:
							body_return:
								SEMICOLON:;
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				variable:
																					variable_names:doubleCast
																			PLUS:+
																			name_var:
																				exact:
																					WILD:value
						typeName:
							type_var:
								class:
									class_variable_names:Float
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:use
				SEMICOLON:;
				NEWLINE:$\n
				interfaceName:
					type_var:
						access_multi:
							ACCESS:->
							type_var:
								class:
									class_variable_names:Modifier
							type_var:
								class:
									class_variable_names:Entity
				DOT:.
				SEMICOLON:;
				variable_declaration:
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:String
					inner:
						IN:>
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											WILD:(float)(double)
					variableName:
						name_var:
							variable:
								variable_names:doubleCast
				objectType:
					CLASS:class 
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Float
								variableName:
									name_var:
										exact:
											WILD:amount
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:inputEntity
								typeName:
									type_var:
										class:
											class_variable_names:Entity
							COMMA:,
						body_element:
							NEWLINE:$\n
						body_element:
							body_line:
								variable_assignment:
									EQUALS:=
									name_var:
										exact:
											WILD:value
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:value
											body_call:
												group:
													name_var:
														exact:
															WILD:amount
											OPERATOR:- 
								SEMICOLON:;
						methodName:
							name_var:
								variable:
									variable_names:decrease
						typeName:
							type_var:
								class:
									class_variable_names:void
						body_element:
							NEWLINE:$\n
				parentName:
					type_var:
						exact:
							variable_names:Object
							BACKSLASH:\
				variable_declaration:
					variableName:
						name_var:
							exact:
								WILD:value
					typeName:
						type_var:
							class:
								class_variable_names:Double
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0.0
					EQUALS:=
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				NEWLINE:$\n
				className:
					variable_names:Modifier
				NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:lowerBound
										SEMICOLON:;
										RETURN:return 
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:lowerBound
								body_call:
									group:
										name_var:
											variable:
												variable_names:upperBound
								OPERATOR:>= 
							conditional:
								IF:if
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:(int)((upperBound-lowerBound)*Math.random())+lowerBound
										SEMICOLON:;
										RETURN:return 
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					static:
						STA:@
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:lowerBound
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:upperBound
						COMMA:,
			NEWLINE:$\n
			objectType:
				CLASS:class 
			DOT:.
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Float
				EQUALS:=
				variableName:
					name_var:
						exact:
							WILD:right
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
			packageName:
				name_var:
					exact:
						WILD:misc
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Modifier
								type_var:
									class:
										class_variable_names:Entity
								ACCESS:->
					methodName:
						name_var:
							variable:
								variable_names:getModifier
					body_element:
						NEWLINE:$\n
					inline:
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Range
														type_var:
															class:
																class_variable_names:Modifier
														ACCESS:->
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																name_var:
																	exact:
																		variable_names:getRandom
																		BACKSLASH:\
											NEW:new 
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									exact:
										WILD:initialRight
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									exact:
										WILD:initialLeft
						COMMA:,
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			PLUS:+
																			name_var:
																				exact:
																					WILD:initialLeft
																			name_var:
																				variable:
																					variable_names:floatCast
								name_var:
									exact:
										WILD:left
								EQUALS:=
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									exact:
										WILD:right
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:initialRight
																			name_var:
																				variable:
																					variable_names:floatCast
																			PLUS:+
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						NEWLINE:$\n
		NEWLINE:$\n
		variable_declaration:
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
			variableName:
				name_var:
					variable:
						variable_names:declaredCritSet
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
							NEW:new 
			EQUALS:=
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			className:
				NAME:ByteOrder
			HID:<
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
		variable_declaration:
			inner:
				IN:>
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									NAME:
										NUMBER:4
			typeName:
				type_var:
					class:
						class_variable_names:Integer
			variableName:
				name_var:
					variable:
						variable_names:INT_SIZE
		NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		anonymous_class:
			className:
				NAME:GLU
			COLON::
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:glu
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			DOT:.
		anonymous_class:
			DOT:.
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			SEMICOLON:;
			className:
				NAME:Display
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:awt
						BACKSLASH:\
			COLON::
			SEMICOLON:;
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:image
						BACKSLASH:\
			className:
				NAME:BufferedImage
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			DOT:.
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:input
						BACKSLASH:\
			DOT:.
			HID:<
			className:
				NAME:Mouse
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
		anonymous_class:
			className:
				NAME:Keyboard
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			SEMICOLON:;
			HID:<
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:input
						BACKSLASH:\
			DOT:.
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			DOT:.
			HID:<
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
			className:
				NAME:PixelFormat
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:input
			DOT:.
			HID:<
			COLON::
			className:
				NAME:Cursor
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:gui
			DOT:.
			className:
				variable_names:Images
			packageName:
				name_var:
					exact:
						WILD:images
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
			HID:<
			className:
				NAME:ByteBuffer
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			HID:<
			SEMICOLON:;
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			className:
				NAME:DisplayMode
		anonymous_class:
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			className:
				NAME:Sys
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			className:
				NAME:PixelGrabber
			packageName:
				name_var:
					exact:
						variable_names:awt
						BACKSLASH:\
			SEMICOLON:;
			DOT:.
			COLON::
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:image
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:images
			className:
				variable_names:Colours
			objectType:
				CLASS:class 
			DOT:.
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:gui
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			HID:<
			className:
				NAME:FloatBuffer
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
			className:
				NAME:GL11
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
			SEMICOLON:;
			HID:<
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			COLON::
			DOT:.
			DOT:.
			className:
				NAME:GL12
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
			SEMICOLON:;
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:imageio
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:javax
			HID:<
			SEMICOLON:;
			className:
				NAME:ImageIO
			COLON::
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:gui
			className:
				variable_names:Drawables
			packageName:
				name_var:
					exact:
						WILD:images
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			objectType:
				CLASS:class 
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:nio
						BACKSLASH:\
			className:
				NAME:IntBuffer
			DOT:.
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												typeName:
													type_var:
														class:
															class_variable_names:HeroStats
												NEW:new 
												parameters:
							name_var:
								variable:
									variable_names:retainList
						group:
							name_var:
								variable:
									variable_names:context
		typeName:
			type_var:
				class:
					class_variable_names:void
		methodName:
			name_var:
				variable:
					variable_names:assignListElementNames
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		inline:
			COMMA:,
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:IToken
				variableName:
					name_var:
						variable:
							variable_names:root
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
				variableName:
					name_var:
						variable:
							variable_names:context
		body_element:
			NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		class_declaration:
			SEMICOLON:;
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:shortForms
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								parameters:
								NEW:new 
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashMap
				inner:
					IN:>
				typeName:
					type_var:
						class:
							class_variable_names:Map
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
								template_parameter:
									type_var:
										class:
											class_variable_names:String
			NEWLINE:$\n
			class_declaration:
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Placable
									ACCESS:->
									type_var:
										class:
											class_variable_names:Menu
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
						methodName:
							name_var:
								variable:
									variable_names:getPlacable
						inline:
						body_element:
							NEWLINE:$\n
				DOT:.
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:isPlacable
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							body_return:
								RETURN:return 
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
						body_element:
							NEWLINE:$\n
						inline:
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:treasuries
				objectType:
					CLASS:class 
				className:
					variable_names:Reward
				NEWLINE:$\n
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				packageName:
					name_var:
						exact:
							WILD:overview
				NEWLINE:$\n
				DOT:.
			packageName:
				name_var:
					exact:
						WILD:treasuries
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:IToken
							variableName:
								name_var:
									variable:
										variable_names:typeToken
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:paymentTypeDec
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:shortForm
																				CAMEL:^
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:longForm
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
																				CAMEL:^
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				CAMEL:^
																				name_var:
																					variable:
																						variable_names:typeToken
																				name_var:
																					exact:
																						WILD:longForm
														COMMA:,
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												ACCESS:->
												name_var:
													exact:
														WILD:typeName
												name_var:
													variable:
														variable_names:typeToken
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:typeName
																				ACCESS:->
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:longForm
																				CAMEL:^
														COMMA:,
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:shortForm
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
													name_var:
														exact:
															BACKSLASH:\
															variable_names:paymentTypeDec
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						body_element:
							body_conditional:
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											SEMICOLON:;
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																				name_var:
																					exact:
																						variable_names:getType
																						BACKSLASH:\
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:treasury
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:getAmount
															parameters:
													OPERATOR:>= 
								conditional:
									ELSE:else
						methodName:
							name_var:
								variable:
									variable_names:canPay
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Treasury
								variableName:
									name_var:
										variable:
											variable_names:treasury
						body_element:
							NEWLINE:$\n
						body_element:
							body_conditional:
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:true
											SEMICOLON:;
											RETURN:return 
									body_element:
										NEWLINE:$\n
								body_statement:
									body_call:
										group:
											parameters:
											name_var:
												exact:
													variable_names:isFree
													BACKSLASH:\
								conditional:
									IF:if
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Id
									ACCESS:->
									type_var:
										class:
											class_variable_names:PaymentType
									type_var:
										class:
											class_variable_names:Treasury
									ACCESS:->
						methodName:
							name_var:
								variable:
									variable_names:getType
						inline:
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
								RETURN:return 
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				DOT:.
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Treasury
									type_var:
										class:
											class_variable_names:Reward
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								RETURN:return 
						inline:
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getReward
				NEWLINE:$\n
				objectType:
					CLASS:class 
				NEWLINE:$\n
				DOT:.
				method_declaration:
					methodDefinition:
						body_element:
							body_return:
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1
								RETURN:return 
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getAmount
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						inline:
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:overview
				packageName:
					name_var:
						exact:
							WILD:treasuries
				className:
					variable_names:Cost
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						methodName:
							name_var:
								variable:
									variable_names:isFree
						body_element:
							body_return:
								SEMICOLON:;
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
						inline:
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								typeName:
									type_var:
										class:
											template_parameters:
												COMMA:,
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashMap
								parameters:
								NEW:new 
				inner:
					IN:>
				typeName:
					type_var:
						class:
							class_variable_names:Map
							template_parameters:
								COMMA:,
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								template_parameter:
									type_var:
										class:
											class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:longForms
				EQUALS:=
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:overview
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:typeName
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:shortForm
							typeName:
								type_var:
									class:
										class_variable_names:String
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:longForm
						COMMA:,
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						body_manipulate:
							class_declaration:
								variable_declaration:
									method_argument:
										body_statement:
											body_call:
												group:
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:PaymentType
																type_var:
																	class:
																		class_variable_names:Id
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:Treasury
													parameters:
													NEW:new 
									variableName:
										name_var:
											variable:
												variable_names:id
									static:
										STA:@
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:PaymentType
												type_var:
													class:
														class_variable_names:Treasury
												ACCESS:->
									EQUALS:=
								objectType:
									CLASS:class 
								className:
									variable_names:typeName
								NEWLINE:$\n
								FORSLASH:/
								NEWLINE:$\n
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:String
										methodName:
											name_var:
												variable:
													variable_names:getShortForm
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:shortForm
												SEMICOLON:;
										inline:
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										inline:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										typeName:
											type_var:
												class:
													class_variable_names:String
										methodName:
											name_var:
												variable:
													variable_names:getLongForm
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:longForm
												SEMICOLON:;
												RETURN:return 
								FORSLASH:/
								SEMICOLON:;
							methodName:
								ADD:+=
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Treasury
									type_var:
										class:
											class_variable_names:PaymentTypes
									ACCESS:->
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:put
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:longForm
											COMMA:,
									group:
										name_var:
											variable:
												variable_names:longForms
									DOT:.
							SEMICOLON:;
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:put
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:shortForm
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
									group:
										name_var:
											variable:
												variable_names:shortForms
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				FORSLASH:/
				NEWLINE:$\n
				NEWLINE:$\n
				className:
					variable_names:PaymentType
				class_declaration:
					FORSLASH:/
					className:
						variable_names:Id
					FORSLASH:/
					NEWLINE:$\n
					objectType:
						CLASS:class 
				NEWLINE:$\n
				NEWLINE:$\n
				objectType:
					CLASS:class 
				SEMICOLON:;
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:String
					variableName:
						name_var:
							variable:
								variable_names:longForm
				FORSLASH:/
				SEMICOLON:;
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:String
					variableName:
						name_var:
							variable:
								variable_names:shortForm
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:String
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeNameToken
												ACCESS:->
												name_var:
													exact:
														WILD:payment_long_type_names
							as_body:
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:get
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:typeNameToken
																					name_var:
																						exact:
																							WILD:payment_long_type_names
																					CAMEL:^
													DOT:.
													group:
														name_var:
															variable:
																variable_names:longForms
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								ELSE:else
								IF:if
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeNameToken
												ACCESS:->
												name_var:
													exact:
														WILD:item_names
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																CAMEL:^
																name_var:
																	variable:
																		variable_names:typeNameToken
																name_var:
																	exact:
																		WILD:item_names
																ACCESS:->
										RETURN:return 
								body_element:
									NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getTypeName
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:typeNameToken
							typeName:
								type_var:
									class:
										class_variable_names:IToken
					inner:
						IN:>
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:shortForms
													group:
														name_var:
															variable:
																variable_names:get
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:typeNameToken
																					CAMEL:^
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:payment_short_type_names
													DOT:.
										SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											access:
												name_var:
													exact:
														WILD:payment_short_type_names
												ACCESS:->
												name_var:
													variable:
														variable_names:typeNameToken
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
							conditional:
								IF:if
								ELSE:else
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										RETURN:return 
										SEMICOLON:;
							conditional:
								ELSE:else
			NEWLINE:$\n
			class_declaration:
				NEWLINE:$\n
				objectType:
					CLASS:class 
				FORSLASH:/
				className:
					variable_names:PaymentTypes
				FORSLASH:/
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								OPERATOR:== 
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
													name_var:
														variable:
															variable_names:put
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:id
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:PaymentType
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Treasury
										ACCESS:->
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:amount
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
									group:
										name_var:
											variable:
												variable_names:get
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:amount
													BACKSLASH:\
													OPERATOR:+ 
													body_call:
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
														group:
															name_var:
																exact:
																	WILD:idMap
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getValue
										name_var:
											variable:
												variable_names:setValue
									DOT:.
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Treasury
							variable_declaration:
								WEAK:~
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Int
												template_parameter:
													type_var:
														class:
															class_variable_names:idClass
												COMMA:,
											class_variable_names:Map
								method_argument:
									body_statement:
										body_call:
											NEWLINE:$\n
											group:
												typeName:
													type_var:
														class:
															class_variable_names:HashMap
															template_parameters:
																COMMA:,
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:idClass
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Int
												parameters:
												NEW:new 
											NEWLINE:$\n
										NEWLINE:$\n
										NEWLINE:$\n
								EQUALS:=
								variableName:
									name_var:
										exact:
											WILD:idMap
							methodName:
								ADD:+=
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:ParseContext
							variableName:
								name_var:
									variable:
										variable_names:data
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:setup
					body_element:
						body_line:
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Id
														name_var:
															variable:
																variable_names:PaymentType
														name_var:
															variable:
																variable_names:Treasury
														ACCESS:->
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:idClass
								typeName:
									CLASS_TYPE:Class 
							SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					methodName:
						name_var:
							variable:
								variable_names:get
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Treasury
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:PaymentType
										type_var:
											class:
												class_variable_names:Id
							variableName:
								name_var:
									variable:
										variable_names:id
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														exact:
															WILD:idMap
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		NEW:new 
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
							conditional:
								IF:if
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												exact:
													WILD:idMap
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:id
											name_var:
												variable:
													variable_names:get
										group:
											parameters:
											name_var:
												variable:
													variable_names:getValue
										DOT:.
							SEMICOLON:;
							RETURN:return 
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			objectType:
				CLASS:class 
			className:
				variable_names:Treasury
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
													name_var:
														variable:
															variable_names:put
												group:
													name_var:
														exact:
															WILD:idMap
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									DOT:.
									group:
										name_var:
											exact:
												WILD:idMap
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
								OPERATOR:== 
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
															name_var:
																variable:
																	variable_names:get
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getValue
														group:
															name_var:
																exact:
																	WILD:idMap
														DOT:.
													BACKSLASH:\
													OPERATOR:+ 
										name_var:
											variable:
												variable_names:setValue
									DOT:.
									DOT:.
									group:
										name_var:
											exact:
												WILD:idMap
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
										name_var:
											variable:
												variable_names:get
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:id
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Treasury
										type_var:
											class:
												class_variable_names:PaymentType
										type_var:
											class:
												class_variable_names:Id
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Skills
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
				SEMICOLON:;
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Treasury
				SEMICOLON:;
		body_element:
			body_manipulate:
				tokenInstance:
					tokenName:
						NAME:import_any
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												variable_names:importAny
												BACKSLASH:\
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:Gui
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
										name_var:
											variable:
												variable_names:importAny
					body_element:
						NEWLINE:$\n
				COLON::
				variableName:
					NAME:imports
				name_var:
					variable:
						variable_names:root
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Quests
						DOT:.
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Entity
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						DOT:.
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
							name_var:
								exact:
									variable_names:setupGui
									BACKSLASH:\
				SEMICOLON:;
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Aspects
						DOT:.
				SEMICOLON:;
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:import_any
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:imports
							variableName:
								NAME:import_events
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										variableName:
											NAME:element
										tokenInstance:
											COLON::
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:Events
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:element
																name_var:
																	variable:
																		variable_names:declaration
															DOT:.
													SEMICOLON:;
											tokenName:
												NAME:event_declaration
										COLON::
										name_var:
											variable:
												variable_names:import_events
								tokenName:
									NAME:IMPORT_EVENT
				name_var:
					variable:
						variable_names:root
				variableName:
					NAME:imports
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:../Questineer/src
							name_var:
								exact:
									BACKSLASH:\
									variable_names:setup
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:generate
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Environment
		body_element:
			body_line:
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:root
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:data
								group:
									name_var:
										variable:
											variable_names:getRoot
									parameters:
								DOT:.
					typeName:
						type_var:
							class:
								class_variable_names:IToken
				SEMICOLON:;
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:output
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						group:
							name_var:
								variable:
									variable_names:Tile
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Activities
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Relationship
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Conditions
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Items
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:data
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
method_declaration:
	methodDefinition:
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_PAYMENT_TYPE
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_payment_types
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Treasury
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:paymentTypeDec
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:payment_type_declaration
					COLON::
				variableName:
					NAME:import_payment_types
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_association
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_ASSOCIATION
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_association
							tokenInstance:
								tokenName:
									NAME:association_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Associations
												DOT:.
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
							COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								tokenName:
									NAME:aspect_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Aspects
										SEMICOLON:;
							name_var:
								variable:
									variable_names:import_aspects
							COLON::
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ASPECT
					COLON::
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_aspects
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:import_any
				typeName:
					type_var:
						class:
							class_variable_names:IToken
		body_element:
			body_manipulate:
				tokenInstance:
					tokenName:
						NAME:IMPORT_EVENT
					body_element:
						body_manipulate:
							tokenInstance:
								tokenName:
									NAME:event_declaration
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Events
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_events
							variableName:
								NAME:element
							COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_events
		body_element:
			body_manipulate:
				variableName:
					NAME:import_activities
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_ACTIVITY
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_activities
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Activities
										SEMICOLON:;
								tokenName:
									NAME:activity_declaration
								COLON::
								body_element:
									NEWLINE:$\n
							COLON::
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
				COLON::
				name_var:
					variable:
						variable_names:import_any
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_attacks
				COLON::
				tokenInstance:
					tokenName:
						NAME:IMPORT_ATTACK
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:attack_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Attacks
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_attacks
							variableName:
								NAME:element
					COLON::
					body_element:
						NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				variableName:
					NAME:import_quests
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_quests
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:typeDeclaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Quests
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:quest_declaration
							variableName:
								NAME:element
							COLON::
					tokenName:
						NAME:IMPORT_QUEST
					body_element:
						NEWLINE:$\n
				COLON::
				name_var:
					variable:
						variable_names:import_any
		inner:
			IN:>
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_map
				tokenInstance:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:Environment
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:import_map
										name_var:
											variable:
												variable_names:declaration
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_MAP
					body_element:
						NEWLINE:$\n
					COLON::
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:importAny
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Relationship
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:reason_declaration
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_reason
					tokenName:
						NAME:IMPORT_REASON
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_reason
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					COLON::
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							name_var:
								variable:
									variable_names:import_affinities
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:affinity_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Affinities
								COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_AFFINITY
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_affinities
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_traits
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_traits
							tokenInstance:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Traits
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:trait_declaration
							variableName:
								NAME:element
							COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_TRAIT
				COLON::
		body_element:
			body_manipulate:
				variableName:
					NAME:import_conditions
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_conditions
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								tokenName:
									NAME:condition_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Conditions
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_CONDITION
					body_element:
						NEWLINE:$\n
					COLON::
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_items
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								tokenName:
									NAME:import_any
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:importAny
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
							name_var:
								variable:
									variable_names:import_items
							COLON::
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Items
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
										SEMICOLON:;
								tokenName:
									NAME:item_declaration
								body_element:
									NEWLINE:$\n
								COLON::
							name_var:
								variable:
									variable_names:import_items
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_ITEM
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Skills
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
								tokenName:
									NAME:skill_declaration
							name_var:
								variable:
									variable_names:import_skills
							variableName:
								NAME:element
					COLON::
					tokenName:
						NAME:IMPORT_SKILL
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_skills
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_supports
				COLON::
				tokenInstance:
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Supports
										SEMICOLON:;
								COLON::
								tokenName:
									NAME:support_declaration
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_supports
							COLON::
					tokenName:
						NAME:IMPORT_SUPPORT
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:getTypeName
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:nameToken
				typeName:
					type_var:
						class:
							class_variable_names:IToken
		body_element:
			NEWLINE:$\n
		body_element:
			body_return:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
				RETURN:return 
				SEMICOLON:;
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:nameToken
				variableName:
					NAME:element
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:typeName
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:==
								body_call:
									group:
										name_var:
											variable:
												variable_names:isFirst
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:.
													name_var:
														variable:
															variable_names:append
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:nameBuilder
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	CAMEL:^
																	variable_names:element
										name_var:
											variable:
												variable_names:append
									DOT:.
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										variable_assignment:
											name_var:
												variable:
													variable_names:isFirst
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											EQUALS:=
		body_element:
			body_line:
				SEMICOLON:;
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:StringBuilder
					variableName:
						name_var:
							variable:
								variable_names:nameBuilder
					method_argument:
						body_statement:
							body_call:
								group:
									typeName:
										type_var:
											class:
												class_variable_names:StringBuilder
									NEW:new 
									parameters:
					EQUALS:=
		inner:
			IN:>
		body_element:
			body_line:
				SEMICOLON:;
				variable_declaration:
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:true
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					variableName:
						name_var:
							variable:
								variable_names:isFirst
					WEAK:~
		typeName:
			type_var:
				class:
					class_variable_names:String
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
comment:
	WILD:import images/image.clws
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:environments
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					DOT:.
					className:
						variable_names:EntryPoints
					NEWLINE:$\n
					objectType:
						CLASS:class 
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				class_declaration:
					objectType:
						CLASS:class 
					className:
						variable_names:Areas
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:environments
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
				NEWLINE:$\n
method_declaration:
	methodDefinition:
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:fileName
			COMMA:,
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:knownDirectory
				typeName:
					type_var:
						class:
							class_variable_names:String
		body_element:
			body_return:
				RETURN:return 
				SEMICOLON:;
				inner:
					IN:>
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:../Resource/
		typeName:
			type_var:
				class:
					class_variable_names:String
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:getDirectory
		body_element:
			NEWLINE:$\n<<