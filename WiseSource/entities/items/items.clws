import aspects/aspects.clws


class 'packageName'."entities"."items" Items {
  class 'packageName'."entities"."items" Id {
  }
  @Item createItem(String "itemName"){
  	return null;
  }
> void setup(ParseContext data){
	\createList(Aspect);
	Entity.addGainLoss(Aspect, Item);
	Item->Modifier.getContext().setEnder(|\getValue()|);
  }
> void declaration(IToken itemToken){
	String className = ^itemToken->"itemName";
	Items += class 'packageName'."entities"."items" className Item {
		  @Items->Id \id = new Items->Id();
		}
	Items->\className->*.appendToBody({ "name" = ''itemToken->"itemName"''; });
	Items->*"createItem".prependToBody({
			if "itemName".equals(''className'') {
				return new Items->\className();
			}
		});
#>	itemToken : element : animation { > Items->\className->* += { \image = `Images.animation(element)`;} }#
	itemToken : element : hp { 
 		Items->\className->* += { "hp"    = new Item->Modifier(`Entity.getRange(element)`,\this); }
		Items->\className->* += { "maxHp" = new Item->Modifier(`Entity.getRange(element)`,\this); } }
	itemToken : element : attack { Items->\className->* += { "dmg"    = new Item->Modifier(`Entity.getRange(element)`,\this); } }
	itemToken : element : defense { Items->\className->* += { "def"    = new Item->Modifier(`Entity.getRange(element)`,\this); } }
	itemToken : element : value  { Items->\className->* += { "value"  = new Item->Modifier(`Entity.getRange(element)`,\this); } }
	itemToken : element : weight { Items->\className->* += { "weight" = new Item->Modifier(`Entity.getRange(element)`,\this); } }
	itemToken : element : gain_aspect {
	   this.gain(element, "change_item","change_item", |\getItem()|, Aspects, Items->\className);
    }
	itemToken : element : gain_trait {
	  \this.gain(element, "equip","unequip", |\getHost()|, Traits, Items->\className);
    }
	itemToken : element : gain_attack {
	   \this.gain(element, "equip","unequip", |\getHost()|, Attacks, Items->\className);
    }
   itemToken : element : event {
	  Body bodyElementList = new Body ();
	  Context context = Events.addToEventMethod('element', Items->\className, bodyElementList); 
      element : atom : body_element {
		bodyElementList.add(\getBodyElement(atom, context));
	  }
	  Events.addToEventMethod('element', Items->\className, bodyElementList);
    }
  }
> void gain(IToken gainToken, String gainEventName, String loseEventName, Statement subject, Class gainClass, Class itemClass){
	String specificClassName = ^gainToken;
	Class specificClass = gainClass->\specificClassName;
	Class idClass = gainClass->Id;
    String asList = gainClass.getName().toLowerCase();
	Context gainContext = Events.addToEventMethod(gainEventName, itemClass, new Body ());
	Context loseContext = Events.addToEventMethod(loseEventName, itemClass, new Body ());
	if gainToken->"boolean_statement" == null {
	  Events.addToEventMethod(gainEventName, itemClass, {
		"event".subject.\gain(new specificClass(), this);
	  });
	  Events.addToEventMethod(loseEventName, itemClass, {
		"event".subject.\lose(specificClass."id",\this);
	  });
	}
	else {
      gainToken : atom : boolean_statement {
		Statement gainHeader = \getBooleanStatement(atom, gainContext);
		Statement loseHeader = \getBooleanStatement(atom, loseContext);
		Events.addToEventMethod(gainEventName, itemClass, {
		  if `\getBooleanStatement(atom, false, gainContext)` &&! "event".subject.\has(specificClass."id") {
			"event".subject.\gain(new specificClass(), \this);
		  }
	    });
		Events.addToEventMethod(loseEventName, itemClass, {
			if `\getBooleanStatement(atom, true, gainContext)` && "event".subject.\has(specificClass."id") {
				"event".subject.\lose(specificClass."id",\this);
			}
		});
	  }
	}
  }
}
class 'packageName'."entities"."items" Item \Object Source {
  class 'packageName'."entities"."items" Modifier \Object Entity->Modifier {
  	Entity->Modifier "range" = null;
  	Item "host" = null;
  	Float use(Entity "inputEntity"){
  	  return "range".use("inputEntity");
  	}
  	void decrease(Entity "inputEntity", Float "amount"){
  	  "range".decrease("inputEntity","amount");
  	}
  	Float getValue(){
  	  return "range".use("host".getEquipper());
  	}
  }
  String "name" = null;
  Entity "equipper" = null;
  Item->Modifier "hp" = null;
  Item->Modifier "maxHp" = null;
  Item->Modifier "dmg" = null;
  Item->Modifier "def" = null;
  Item->Modifier "value" = null;
  Item->Modifier "weight" = null;
  
  void on(Events->\Equip "event"){
  	"equipper" = "event".getHost();
  }
  void on(Events->\Unequip "event"){
    "equipper" = null;
  }
  void on(Events->\ChangeItem "event"){
  }
}