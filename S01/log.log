tiles.clws>>
method_declaration:
	methodDefinition:
		typeName:
			type_var:
				class:
					class_variable_names:String
		body_element:
			NEWLINE:$\n
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:knownDirectory
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:fileName
			COMMA:,
		body_element:
			body_return:
				RETURN:return 
				SEMICOLON:;
				inner:
					IN:>
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										WILD:../Resource/
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:getDirectory
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:menus
			NEWLINE:$\n
			class_declaration:
				objectType:
					INTERFACE:interface 
				NEWLINE:$\n
				FORSLASH:/
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:place
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Area
								variableName:
									name_var:
										variable:
											variable_names:area
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:x
								typeName:
									type_var:
										class:
											class_variable_names:Integer
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								variableName:
									name_var:
										variable:
											variable_names:y
							COMMA:,
							COMMA:,
						typeName:
							type_var:
								class:
									class_variable_names:void
				className:
					variable_names:Placable
				FORSLASH:/
				NEWLINE:$\n
			DOT:.
			className:
				variable_names:Menu
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		class_declaration:
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:setup
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:ParseContext
							variableName:
								name_var:
									variable:
										variable_names:data
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															variable:
																variable_names:Id
														ACCESS:->
														name_var:
															variable:
																variable_names:PaymentType
														name_var:
															variable:
																variable_names:Treasury
								typeName:
									CLASS_TYPE:Class 
								variableName:
									name_var:
										variable:
											variable_names:idClass
							SEMICOLON:;
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Treasury
							variable_declaration:
								variableName:
									name_var:
										exact:
											WILD:idMap
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Map
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Int
												template_parameter:
													type_var:
														class:
															class_variable_names:idClass
												COMMA:,
								method_argument:
									body_statement:
										NEWLINE:$\n
										body_call:
											NEWLINE:$\n
											group:
												typeName:
													type_var:
														class:
															template_parameters:
																COMMA:,
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Int
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:idClass
															class_variable_names:HashMap
												NEW:new 
												parameters:
											NEWLINE:$\n
										NEWLINE:$\n
								WEAK:~
							methodName:
								ADD:+=
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			objectType:
				CLASS:class 
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:get
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
									group:
										name_var:
											variable:
												variable_names:setValue
										parameters:
											method_argument:
												body_statement:
													OPERATOR:+ 
													body_call:
														DOT:.
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:getValue
															parameters:
														group:
															name_var:
																exact:
																	WILD:idMap
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
															name_var:
																variable:
																	variable_names:get
													BACKSLASH:\
													body_call:
														group:
															name_var:
																variable:
																	variable_names:amount
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												DOT:.
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
										SEMICOLON:;
							conditional:
								IF:if
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Treasury
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:PaymentType
							variableName:
								name_var:
									variable:
										variable_names:id
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:amount
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:id
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Treasury
										type_var:
											class:
												class_variable_names:PaymentType
										type_var:
											class:
												class_variable_names:Id
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:get
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
									group:
										parameters:
											method_argument:
												body_statement:
													BACKSLASH:\
													body_call:
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getValue
														group:
															name_var:
																exact:
																	WILD:idMap
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:get
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:id
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													OPERATOR:+ 
										name_var:
											variable:
												variable_names:setValue
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
										name_var:
											variable:
												variable_names:containsKey
									DOT:.
									group:
										name_var:
											exact:
												WILD:idMap
								OPERATOR:== 
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			SEMICOLON:;
			NEWLINE:$\n
			DOT:.
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:longForms
									group:
										parameters:
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:longForm
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
										name_var:
											variable:
												variable_names:put
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:shortForm
											COMMA:,
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:typeName
										name_var:
											variable:
												variable_names:put
									group:
										name_var:
											variable:
												variable_names:shortForms
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Treasury
									type_var:
										class:
											class_variable_names:PaymentTypes
									ACCESS:->
							methodName:
								ADD:+=
							class_declaration:
								SEMICOLON:;
								objectType:
									CLASS:class 
								FORSLASH:/
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Treasury
												type_var:
													class:
														class_variable_names:Id
												type_var:
													class:
														class_variable_names:PaymentType
												ACCESS:->
									static:
										STA:@
									method_argument:
										body_statement:
											body_call:
												group:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Id
																ACCESS:->
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:PaymentType
																type_var:
																	class:
																		class_variable_names:Treasury
													parameters:
													NEW:new 
									EQUALS:=
									variableName:
										name_var:
											variable:
												variable_names:id
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:String
										inline:
										methodName:
											name_var:
												variable:
													variable_names:getShortForm
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:shortForm
												SEMICOLON:;
												RETURN:return 
								NEWLINE:$\n
								NEWLINE:$\n
								FORSLASH:/
								NEWLINE:$\n
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										inline:
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	as_quote:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:longForm
												RETURN:return 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										methodName:
											name_var:
												variable:
													variable_names:getLongForm
										body_element:
											NEWLINE:$\n
										typeName:
											type_var:
												class:
													class_variable_names:String
								className:
									variable_names:typeName
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:shortForm
							typeName:
								type_var:
									class:
										class_variable_names:String
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:longForm
							typeName:
								type_var:
									class:
										class_variable_names:String
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:typeName
						COMMA:,
						COMMA:,
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inner:
						IN:>
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																CAMEL:^
																ACCESS:->
																name_var:
																	exact:
																		WILD:item_names
																name_var:
																	variable:
																		variable_names:typeNameToken
										RETURN:return 
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeNameToken
												name_var:
													exact:
														WILD:item_names
												ACCESS:->
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:typeNameToken
							typeName:
								type_var:
									class:
										class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getTypeName
					typeName:
						type_var:
							class:
								class_variable_names:String
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:typeNameToken
												name_var:
													exact:
														WILD:payment_short_type_names
												ACCESS:->
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:shortForms
													group:
														name_var:
															variable:
																variable_names:get
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					CAMEL:^
																					name_var:
																						variable:
																							variable_names:typeNameToken
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:payment_short_type_names
										SEMICOLON:;
										RETURN:return 
							conditional:
								ELSE:else
								IF:if
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											access:
												ACCESS:->
												name_var:
													exact:
														WILD:payment_long_type_names
												name_var:
													variable:
														variable_names:typeNameToken
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
							conditional:
								ELSE:else
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:longForms
													DOT:.
													group:
														name_var:
															variable:
																variable_names:get
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:payment_long_type_names
																					name_var:
																						variable:
																							variable_names:typeNameToken
																					CAMEL:^
																					ACCESS:->
										RETURN:return 
								body_element:
									NEWLINE:$\n
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								typeName:
									type_var:
										class:
											class_variable_names:HashMap
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
								parameters:
								NEW:new 
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:shortForms
				inner:
					IN:>
				typeName:
					type_var:
						class:
							template_parameters:
								COMMA:,
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								template_parameter:
									type_var:
										class:
											class_variable_names:String
							class_variable_names:Map
			NEWLINE:$\n
			class_declaration:
				NEWLINE:$\n
				SEMICOLON:;
				FORSLASH:/
				NEWLINE:$\n
				objectType:
					CLASS:class 
				className:
					variable_names:PaymentType
				NEWLINE:$\n
				NEWLINE:$\n
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:String
					variableName:
						name_var:
							variable:
								variable_names:shortForm
				class_declaration:
					FORSLASH:/
					objectType:
						CLASS:class 
					className:
						variable_names:Id
					FORSLASH:/
					NEWLINE:$\n
				SEMICOLON:;
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:String
					variableName:
						name_var:
							variable:
								variable_names:longForm
				FORSLASH:/
			SEMICOLON:;
			class_declaration:
				DOT:.
				packageName:
					name_var:
						exact:
							WILD:overview
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						inline:
						methodName:
							name_var:
								variable:
									variable_names:isPlacable
						body_element:
							body_return:
								SEMICOLON:;
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								RETURN:return 
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
						inline:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Placable
									ACCESS:->
									type_var:
										class:
											class_variable_names:Menu
						methodName:
							name_var:
								variable:
									variable_names:getPlacable
						body_element:
							NEWLINE:$\n
				className:
					variable_names:Reward
				DOT:.
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
				objectType:
					CLASS:class 
				packageName:
					name_var:
						exact:
							WILD:treasuries
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:treasuries
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				inner:
					IN:>
				method_argument:
					body_statement:
						body_call:
							group:
								parameters:
								typeName:
									type_var:
										class:
											class_variable_names:HashMap
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												template_parameter:
													type_var:
														class:
															class_variable_names:String
												COMMA:,
								NEW:new 
				typeName:
					type_var:
						class:
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								COMMA:,
								template_parameter:
									type_var:
										class:
											class_variable_names:String
							class_variable_names:Map
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:longForms
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:PaymentType
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										ACCESS:->
										type_var:
											class:
												class_variable_names:Treasury
							variableName:
								name_var:
									variable:
										variable_names:id
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:idMap
												DOT:.
												group:
													name_var:
														variable:
															variable_names:put
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			type_var:
																				class:
																					class_variable_names:Int
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									NAME:
																										NUMBER:0
																		NEW:new 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														COMMA:,
							body_statement:
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										name_var:
											exact:
												WILD:idMap
									DOT:.
									group:
										name_var:
											variable:
												variable_names:containsKey
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:id
							conditional:
								IF:if
					methodName:
						name_var:
							variable:
								variable_names:get
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													WILD:idMap
										DOT:.
										group:
											name_var:
												variable:
													variable_names:getValue
											parameters:
										group:
											name_var:
												variable:
													variable_names:get
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:id
										DOT:.
							SEMICOLON:;
							RETURN:return 
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						NEWLINE:$\n
			class_declaration:
				FORSLASH:/
				objectType:
					CLASS:class 
				NEWLINE:$\n
				className:
					variable_names:PaymentTypes
				FORSLASH:/
			className:
				variable_names:Treasury
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:overview
				DOT:.
				objectType:
					CLASS:class 
				className:
					variable_names:Cost
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Treasury
									type_var:
										class:
											class_variable_names:Reward
									ACCESS:->
						methodName:
							name_var:
								variable:
									variable_names:getReward
						inline:
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
								RETURN:return 
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:canPay
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Treasury
								variableName:
									name_var:
										variable:
											variable_names:treasury
						body_element:
							body_conditional:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													variable_names:isFree
													BACKSLASH:\
											parameters:
								conditional:
									IF:if
								as_body:
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_return:
											RETURN:return 
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:true
											SEMICOLON:;
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						body_element:
							body_conditional:
								conditional:
									ELSE:else
								as_body:
									body_element:
										body_return:
											SEMICOLON:;
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:getAmount
																	BACKSLASH:\
															parameters:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:treasury
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getType
																				parameters:
															name_var:
																variable:
																	variable_names:get
													OPERATOR:>= 
											RETURN:return 
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Treasury
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
									type_var:
										class:
											class_variable_names:PaymentType
									ACCESS:->
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								SEMICOLON:;
								RETURN:return 
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getType
						inline:
						body_element:
							NEWLINE:$\n
				method_declaration:
					methodDefinition:
						inline:
						methodName:
							name_var:
								variable:
									variable_names:getAmount
						body_element:
							body_return:
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1
								RETURN:return 
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
				packageName:
					name_var:
						exact:
							WILD:treasuries
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:isFree
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						inline:
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
								SEMICOLON:;
								RETURN:return 
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
				DOT:.
				packageName:
					name_var:
						as_string:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:packageName
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:paymentTypeDec
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:IToken
							variableName:
								name_var:
									variable:
										variable_names:typeToken
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:paymentTypeDec
															BACKSLASH:\
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:shortForm
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:longForm
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:typeToken
																				CAMEL:^
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:longForm
																				name_var:
																					variable:
																						variable_names:typeToken
														COMMA:,
								body_element:
									NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															variable_names:paymentTypeDec
															BACKSLASH:\
													parameters:
														COMMA:,
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				ACCESS:->
																				CAMEL:^
																				name_var:
																					exact:
																						WILD:typeName
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				CAMEL:^
																				name_var:
																					variable:
																						variable_names:typeToken
																				name_var:
																					exact:
																						WILD:longForm
																				ACCESS:->
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:typeToken
																				name_var:
																					exact:
																						WILD:shortForm
																				CAMEL:^
																				ACCESS:->
										SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												ACCESS:->
												name_var:
													variable:
														variable_names:typeToken
												name_var:
													exact:
														WILD:typeName
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:overview
			NEWLINE:$\n
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					body_conditional:
						conditional:
							IF:if
						body_statement:
							body_call:
								group:
									name_var:
										access:
											name_var:
												exact:
													WILD:statement
											name_var:
												variable:
													variable_names:variableDeclarationToken
											ACCESS:->
							OPERATOR:!= 
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
						as_body:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_line:
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														EQUALS:=
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variable_header
																						name_var:
																							exact:
																								WILD:variableName
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									variable_names:getStatement
																									BACKSLASH:\
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:variableDeclarationToken
																														name_var:
																															exact:
																																WILD:statement
																														ACCESS:->
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:context
																								COMMA:,
													SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
				inner:
					IN:>
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:typeName
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													variable_names:getTypeName
													BACKSLASH:\
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:variableDeclarationToken
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:type_name
																		name_var:
																			exact:
																				WILD:variable_header
							EQUALS:=
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					COMMA:,
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:variableDeclarationToken
				body_element:
					body_conditional:
						conditional:
							ELSE:else
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_line:
													variable_declaration:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														EQUALS:=
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							exact:
																								WILD:variableName
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variable_header
																						name_var:
																							variable:
																								variable_names:variableDeclarationToken
																						ACCESS:->
													SEMICOLON:;
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getVariableDeclaration
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
											name_var:
												variable:
													variable_names:getClassContext
										group:
											name_var:
												variable:
													variable_names:context
										DOT:.
							typeName:
								CONTEXT_TYPE:Context 
							variableName:
								name_var:
									variable:
										variable_names:type
				body_element:
					body_conditional:
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:Generator
														BACKSLASH:\
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableDeclarationToken
											DOT:.
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													concat:
														name_var:
															exact:
																WILD:!
														PLUS:+
														name_var:
															variable:
																variable_names:typeName
														name_var:
															exact:
																WILD:Could not find type:
														PLUS:+
									THROW:throw 
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					inline:
					methodName:
						name_var:
							variable:
								variable_names:load
					typeName:
						type_var:
							class:
								class_variable_names:void
			NEWLINE:$\n
			DOT:.
			objectType:
				INTERFACE:interface 
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:interfaces
			className:
				variable_names:Loaddable
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
		class_declaration:
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Listenable
			packageName:
				name_var:
					exact:
						WILD:interfaces
			HID:<
			templateTypeName:
				NAME:TypeName
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				INTERFACE:interface 
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:TypeName
							variableName:
								name_var:
									exact:
										WILD:event
					methodName:
						name_var:
							variable:
								variable_names:listen
			IN:>
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			className:
				variable_names:Usable
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									variable:
										variable_names:user
					typeName:
						type_var:
							class:
								class_variable_names:Float
					methodName:
						name_var:
							variable:
								variable_names:getRange
			NEWLINE:$\n
			DOT:.
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:use
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:user
							typeName:
								type_var:
									class:
										class_variable_names:Entity
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:activity
							typeName:
								type_var:
									class:
										class_variable_names:Activity
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getId
					inline:
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Id
								type_var:
									class:
										class_variable_names:Usable
								ACCESS:->
			objectType:
				INTERFACE:interface 
			class_declaration:
				objectType:
					CLASS:class 
				className:
					variable_names:Id
				FORSLASH:/
				NEWLINE:$\n
				FORSLASH:/
			NEWLINE:$\n
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:canChase
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:getTargetCriteria
					inline:
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Criteria
								type_var:
									class:
										class_variable_names:Target
								ACCESS:->
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:variableHeaderToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
				typeName:
					VARIABLE_TYPE:Variable 
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getVariableFromHeader
				body_element:
					body_conditional:
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									THROW:throw 
									body_statement:
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableHeaderToken
											DOT:.
											group:
												name_var:
													exact:
														variable_names:Generator
														BACKSLASH:\
										body_call:
											group:
												name_var:
													concat:
														name_var:
															variable:
																variable_names:typeName
														name_var:
															exact:
																WILD:Could not find type:
														PLUS:+
														name_var:
															exact:
																WILD:!
														PLUS:+
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							typeName:
								CONTEXT_TYPE:Context 
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:context
										group:
											name_var:
												variable:
													variable_names:getClassContext
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
							variableName:
								name_var:
									variable:
										variable_names:type
				body_element:
					body_return:
						method_argument:
							SEMICOLON:;
							variable_declaration:
								variableName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	exact:
																		WILD:variableName
																ACCESS:->
																name_var:
																	variable:
																		variable_names:variableHeaderToken
								typeName:
									type_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:typeName
						RETURN:return 
						SEMICOLON:;
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:typeName
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:type_name
																		name_var:
																			variable:
																				variable_names:variableHeaderToken
											name_var:
												exact:
													variable_names:getTypeName
													BACKSLASH:\
							typeName:
								type_var:
									class:
										class_variable_names:String
							EQUALS:=
		NEWLINE:$\n
		anonymous_class:
			HID:<
			className:
				NAME:Random
			COLON::
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		variable_declaration:
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:declaredMapSet
			typeName:
				type_var:
					class:
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
						class_variable_names:Set
			method_argument:
				body_statement:
					body_call:
						group:
							parameters:
							NEW:new 
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
			inner:
				IN:>
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			DOT:.
			class_declaration:
				FORSLASH:/
				variable_declaration:
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					typeName:
						type_var:
							class:
								class_variable_names:Evaluable
					variableName:
						name_var:
							variable:
								variable_names:right
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:getValue
						typeName:
							type_var:
								class:
									class_variable_names:float
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:right
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:user
												name_var:
													variable:
														variable_names:getValue
											DOT:.
										BACKSLASH:\
										body_call:
											group:
												name_var:
													variable:
														variable_names:getValue
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:user
											group:
												name_var:
													variable:
														variable_names:left
											DOT:.
										OPERATOR:-
								SEMICOLON:;
								RETURN:return 
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:user
								typeName:
									type_var:
										class:
											class_variable_names:Entity
				variable_declaration:
					EQUALS:=
					variableName:
						name_var:
							variable:
								variable_names:left
					typeName:
						type_var:
							class:
								class_variable_names:Evaluable
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
				FORSLASH:/
				interfaceName:
					type_var:
						class:
							class_variable_names:Evaluable
				SEMICOLON:;
				NEWLINE:$\n
				className:
					variable_names:Minus
				SEMICOLON:;
				objectType:
					CLASS:class 
				NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
			className:
				variable_names:Operators
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			class_declaration:
				NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:right
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:Evaluable
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:getValue
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:user
						body_element:
							body_return:
								SEMICOLON:;
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:user
												name_var:
													variable:
														variable_names:getValue
											DOT:.
											group:
												name_var:
													variable:
														variable_names:left
										OPERATOR:+
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:right
											group:
												name_var:
													variable:
														variable_names:getValue
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:user
										BACKSLASH:\
						typeName:
							type_var:
								class:
									class_variable_names:float
				NEWLINE:$\n
				SEMICOLON:;
				FORSLASH:/
				FORSLASH:/
				interfaceName:
					type_var:
						class:
							class_variable_names:Evaluable
				objectType:
					CLASS:class 
				variable_declaration:
					typeName:
						type_var:
							class:
								class_variable_names:Evaluable
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					EQUALS:=
					variableName:
						name_var:
							variable:
								variable_names:left
				SEMICOLON:;
				className:
					variable_names:Plus
				NEWLINE:$\n
			class_declaration:
				SEMICOLON:;
				className:
					variable_names:Divide
				NEWLINE:$\n
				variable_declaration:
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					EQUALS:=
					variableName:
						name_var:
							variable:
								variable_names:right
					typeName:
						type_var:
							class:
								class_variable_names:Evaluable
				NEWLINE:$\n
				objectType:
					CLASS:class 
				SEMICOLON:;
				FORSLASH:/
				interfaceName:
					type_var:
						class:
							class_variable_names:Evaluable
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:getValue
						typeName:
							type_var:
								class:
									class_variable_names:float
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:user
								typeName:
									type_var:
										class:
											class_variable_names:Entity
						body_element:
							body_return:
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:left
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getValue
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:user
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getValue
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:user
											group:
												name_var:
													variable:
														variable_names:right
										BACKSLASH:\
										OPERATOR:/
								RETURN:return 
				variable_declaration:
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					typeName:
						type_var:
							class:
								class_variable_names:Evaluable
					EQUALS:=
					variableName:
						name_var:
							variable:
								variable_names:left
				FORSLASH:/
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			objectType:
				CLASS:class 
			class_declaration:
				interfaceName:
					type_var:
						class:
							class_variable_names:Evaluable
				NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:value
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:Float
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
				FORSLASH:/
				method_declaration:
					methodDefinition:
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:int
								variableName:
									name_var:
										variable:
											variable_names:intValue
						body_element:
							NEWLINE:$\n
						methodName:
							NAME:
								AS_METHOD_NAME:*
						typeName:
							type_var:
								class:
									class_variable_names:Value
						body_element:
							body_line:
								SEMICOLON:;
								variable_assignment:
									method_argument:
										body_statement:
											body_call:
												as_braced:
													right:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:intValue
													left:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:float
									EQUALS:=
									name_var:
										variable:
											variable_names:value
						body_element:
							NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
				className:
					variable_names:Value
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:getValue
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:user
						body_element:
							body_return:
								RETURN:return 
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:value
						typeName:
							type_var:
								class:
									class_variable_names:float
				FORSLASH:/
				NEWLINE:$\n
				SEMICOLON:;
				objectType:
					CLASS:class 
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				objectType:
					CLASS:class 
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:left
					typeName:
						type_var:
							class:
								class_variable_names:Evaluable
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					EQUALS:=
				SEMICOLON:;
				SEMICOLON:;
				NEWLINE:$\n
				className:
					variable_names:Multiply
				NEWLINE:$\n
				FORSLASH:/
				NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:right
					EQUALS:=
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					typeName:
						type_var:
							class:
								class_variable_names:Evaluable
				FORSLASH:/
				interfaceName:
					type_var:
						class:
							class_variable_names:Evaluable
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						typeName:
							type_var:
								class:
									class_variable_names:float
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:user
						methodName:
							name_var:
								variable:
									variable_names:getValue
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:getValue
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:user
											DOT:.
											group:
												name_var:
													variable:
														variable_names:left
										BACKSLASH:\
										body_call:
											group:
												name_var:
													variable:
														variable_names:getValue
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:user
											group:
												name_var:
													variable:
														variable_names:right
											DOT:.
										OPERATOR:*
								SEMICOLON:;
								RETURN:return 
			NEWLINE:$\n
			NEWLINE:$\n
			class_declaration:
				FORSLASH:/
				NEWLINE:$\n
				class_declaration:
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											OPERATOR:*
											body_call:
												group:
													name_var:
														variable:
															variable_names:value
												DOT:.
												group:
													name_var:
														variable:
															variable_names:getValue
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:user
											body_call:
												group:
													name_var:
														variable:
															variable_names:getValue
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:user
												group:
													name_var:
														variable:
															variable_names:toGet
												DOT:.
							typeName:
								type_var:
									class:
										class_variable_names:float
							methodName:
								name_var:
									variable:
										variable_names:getValue
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
					interfaceName:
						type_var:
							class:
								class_variable_names:Evaluable
					SEMICOLON:;
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:value
						typeName:
							type_var:
								class:
									class_variable_names:Evaluable
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
					NEWLINE:$\n
					NEWLINE:$\n
					FORSLASH:/
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:toGet
						EQUALS:=
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Stat
									ACCESS:->
									type_var:
										class:
											class_variable_names:Entity
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					className:
						variable_names:Variable
					FORSLASH:/
				FORSLASH:/
				NEWLINE:$\n
				className:
					variable_names:Stat
				objectType:
					CLASS:class 
				NEWLINE:$\n
				class_declaration:
					className:
						variable_names:Value
					variable_declaration:
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:toGet
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Stat
									type_var:
										class:
											class_variable_names:Entity
									ACCESS:->
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					NEWLINE:$\n
					SEMICOLON:;
					objectType:
						CLASS:class 
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Float
						variableName:
							name_var:
								variable:
									variable_names:value
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Value
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:stat
										name_var:
											variable:
												variable_names:toGet
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								NAME:
									AS_METHOD_NAME:*
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:int
									variableName:
										name_var:
											variable:
												variable_names:intValue
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:stat
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Stat
												type_var:
													class:
														class_variable_names:Entity
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													as_braced:
														left:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:float
														right:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:intValue
										name_var:
											variable:
												variable_names:value
										EQUALS:=
									SEMICOLON:;
					SEMICOLON:;
					FORSLASH:/
					interfaceName:
						type_var:
							class:
								class_variable_names:Evaluable
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:float
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:getValue
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											OPERATOR:*
											body_call:
												group:
													name_var:
														variable:
															variable_names:toGet
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:user
													name_var:
														variable:
															variable_names:getValue
											body_call:
												group:
													name_var:
														variable:
															variable_names:value
									SEMICOLON:;
					NEWLINE:$\n
					FORSLASH:/
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			DOT:.
			className:
				variable_names:Evaluable
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									variable:
										variable_names:user
					typeName:
						type_var:
							class:
								class_variable_names:float
					methodName:
						name_var:
							variable:
								variable_names:getValue
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			NEWLINE:$\n
			className:
				variable_names:ListMaps
			objectType:
				CLASS:class 
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:misc
		NEWLINE:$\n
		class_declaration:
			className:
				variable_names:Tickable
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:interfaces
			NEWLINE:$\n
			objectType:
				INTERFACE:interface 
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:tick
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Double
							variableName:
								name_var:
									exact:
										WILD:millisSinceLastFrame
					typeName:
						type_var:
							class:
								class_variable_names:void
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			DOT:.
		method_declaration:
			methodDefinition:
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:result
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:result
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
											NEW:new 
											typeName:
												BODY_TYPE:Body 
							typeName:
								BODY_TYPE:Body 
						SEMICOLON:;
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getBodyElements
				typeName:
					BODY_TYPE:Body 
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					body_line:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:result
								group:
									name_var:
										variable:
											variable_names:setParentContext
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
								DOT:.
						SEMICOLON:;
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:elementsToken
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						variableName:
							NAME:element
						tokenInstance:
							body_element:
								NEWLINE:$\n
							COLON::
							tokenName:
								NAME:body_element
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:result
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																						name_var:
																							variable:
																								variable_names:getContext
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:result
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getBodyElement
						name_var:
							variable:
								variable_names:elementsToken
						COLON::
		NEWLINE:$\n
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				inner:
					IN:>
				inline:
					COMMA:,
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:booleanStatement
						typeName:
							type_var:
								class:
									class_variable_names:IToken
				typeName:
					STATEMENT_TYPE:Statement
				methodName:
					name_var:
						variable:
							variable_names:getBooleanStatement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												BACKSLASH:\
												variable_names:getBooleanStatement
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:false
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:booleanStatement
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:context
											COMMA:,
											COMMA:,
						SEMICOLON:;
		method_declaration:
			methodDefinition:
				typeName:
					VARIABLE_TYPE:Variable 
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			variable:
																				variable_names:variableHeaderToken
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:type_name
											name_var:
												exact:
													variable_names:getTypeName
													BACKSLASH:\
							variableName:
								name_var:
									variable:
										variable_names:typeName
						SEMICOLON:;
				body_element:
					body_line:
						SEMICOLON:;
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:inputClass
										DOT:.
										group:
											parameters:
											name_var:
												variable:
													variable_names:getContext
										DOT:.
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:typeName
											name_var:
												variable:
													variable_names:getClassContext
							typeName:
								CONTEXT_TYPE:Context 
							variableName:
								name_var:
									variable:
										variable_names:type
							EQUALS:=
				body_element:
					body_manipulate:
						methodName:
							ADD:+=
						type_var:
							class:
								class_variable_names:inputClass
						variable_declaration:
							variableName:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														access:
															ACCESS:->
															name_var:
																exact:
																	WILD:variableName
															name_var:
																variable:
																	variable_names:variableHeaderToken
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:typeName
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:variableHeaderToken
						typeName:
							type_var:
								class:
									class_variable_names:IToken
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:inputClass
						typeName:
							CLASS_TYPE:Class 
				body_element:
					body_conditional:
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							body_call:
								group:
									name_var:
										variable:
											variable_names:type
						conditional:
							IF:if
						as_body:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_throw:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													exact:
														variable_names:Generator
														BACKSLASH:\
											group:
												name_var:
													variable:
														variable_names:completeTokenErrorMessage
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:variableHeaderToken
										OPERATOR:+ 
										body_call:
											group:
												name_var:
													concat:
														PLUS:+
														name_var:
															variable:
																variable_names:typeName
														PLUS:+
														name_var:
															exact:
																WILD:!
														name_var:
															exact:
																WILD:Could not find type:
									SEMICOLON:;
									THROW:throw 
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				inner:
					IN:>
				body_element:
					body_return:
						SEMICOLON:;
						RETURN:return 
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:getVariable
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:variableHeaderToken
																						name_var:
																							exact:
																								WILD:variableName
																						ACCESS:->
									group:
										name_var:
											variable:
												variable_names:inputClass
									DOT:.
				methodName:
					name_var:
						variable:
							variable_names:addVariableHeader
		NEWLINE:$\n
		SEMICOLON:;
		SEMICOLON:;
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_line:
						SEMICOLON:;
						body_statement:
							body_call:
								DOT:.
								group:
									name_var:
										variable:
											variable_names:elseBody
								group:
									name_var:
										variable:
											variable_names:setParentContext
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getIfStatement
				body_element:
					body_line:
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											typeName:
												STATEMENT_TYPE:Statement
											parameters:
							variableName:
								name_var:
									variable:
										variable_names:header
							EQUALS:=
							typeName:
								STATEMENT_TYPE:Statement
						SEMICOLON:;
				body_element:
					body_line:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:body
								group:
									name_var:
										variable:
											variable_names:setParentContext
									parameters:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:context
								DOT:.
						SEMICOLON:;
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:0 
							OPERATOR:== 
						as_body:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													conditional:
														IF:if
									SEMICOLON:;
						conditional:
							IF:if
				body_element:
					body_line:
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:elseBody
							method_argument:
								body_statement:
									body_call:
										group:
											typeName:
												BODY_TYPE:Body 
											parameters:
											NEW:new 
						SEMICOLON:;
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:elseHeader
													conditional:
														ELSE:else
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
											body_element:
												body_conditional:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													conditional:
														IF:if
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
									RETURN:return 
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:2 
						conditional:
							ELSE:else
							IF:if
				body_element:
					NEWLINE:$\n
				body_element:
					body_line:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:elseHeader
							typeName:
								STATEMENT_TYPE:Statement
							EQUALS:=
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
											typeName:
												STATEMENT_TYPE:Statement
						SEMICOLON:;
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:header
													conditional:
														IF:if
											body_element:
												body_conditional:
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:elseBody
													conditional:
														ELSE:else
									RETURN:return 
						conditional:
							ELSE:else
							IF:if
						body_statement:
							OPERATOR:== 
							body_call:
								group:
									name_var:
										variable:
											variable_names:mode
							body_call:
								group:
									name_var:
										exact:
											NAME:
												NUMBER:1 
				body_element:
					NEWLINE:$\n
				body_element:
					body_manipulate:
						COLON::
						tokenInstance:
							tokenName:
								NAME:body_element
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:body
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:getBodyElement
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:getContext
																						parameters:
																					group:
																						name_var:
																							variable:
																								variable_names:body
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																		COMMA:,
												name_var:
													variable:
														variable_names:add
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							NEWLINE:$\n
						variableName:
							NAME:element
						tokenInstance:
							tokenName:
								NAME:boolean_statement
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_line:
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:header
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			variable_names:getBooleanStatement
																			BACKSLASH:\
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:context
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
												name_var:
													variable:
														variable_names:add
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
						name_var:
							variable:
								variable_names:ifStatementToken
						tokenInstance:
							body_element:
								body_line:
									variable_assignment:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
										name_var:
											variable:
												variable_names:mode
									SEMICOLON:;
							NEWLINE:$\n
							tokenName:
								NAME:else_statement
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									variableName:
										NAME:atom
									COLON::
									name_var:
										variable:
											variable_names:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:boolean_statement
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:context
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					COMMA:,
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBooleanStatement
															name_var:
																variable:
																	variable_names:add
														group:
															name_var:
																variable:
																	variable_names:elseHeader
														DOT:.
										COLON::
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:mode
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:2
												SEMICOLON:;
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										NEWLINE:$\n
										tokenName:
											NAME:body_element
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:elseBody
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:getContext
																									parameters:
																								DOT:.
																								group:
																									name_var:
																										variable:
																											variable_names:elseBody
																				name_var:
																					exact:
																						variable_names:getBodyElement
																						BACKSLASH:\
												SEMICOLON:;
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getVariableFromHeader
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														ACCESS:->
																														name_var:
																															variable:
																																variable_names:atom
																														name_var:
																															exact:
																																WILD:variable_header
																														name_var:
																															exact:
																																WILD:variable_declaration
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getContext
																												parameters:
																											DOT:.
																											group:
																												name_var:
																													variable:
																														variable_names:elseBody
																	DOT:.
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getContext
																	group:
																		name_var:
																			variable:
																				variable_names:elseBody
																	DOT:.
													body_element:
														NEWLINE:$\n
												body_statement:
													OPERATOR:!= 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		variable:
																			variable_names:atom
																	ACCESS:->
																	name_var:
																		exact:
																			WILD:variable_declaration
							body_element:
								NEWLINE:$\n
				body_element:
					body_conditional:
						as_body:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									RETURN:return 
						conditional:
							ELSE:else
				inline:
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:ifStatementToken
					COMMA:,
				body_element:
					body_line:
						variable_declaration:
							WEAK:~
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												exact:
													NAME:
														NUMBER:0
							EQUALS:=
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:mode
						SEMICOLON:;
				body_element:
					body_line:
						variable_declaration:
							method_argument:
								body_statement:
									body_call:
										group:
											NEW:new 
											parameters:
											typeName:
												BODY_TYPE:Body 
							typeName:
								BODY_TYPE:Body 
							EQUALS:=
							variableName:
								name_var:
									variable:
										variable_names:body
						SEMICOLON:;
		SEMICOLON:;
		class_declaration:
			NEWLINE:$\n
			DOT:.
			DOT:.
			className:
				variable_names:Source
			packageName:
				name_var:
					exact:
						WILD:misc
			objectType:
				INTERFACE:interface 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:interfaces
		variable_declaration:
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:<T>T
			variableName:
				name_var:
					variable:
						variable_names:TT
			typeName:
				type_var:
					class:
						class_variable_names:String
			EQUALS:=
		NEWLINE:$\n
		method_declaration:
			methodDefinition:
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
				typeName:
					STATEMENT_TYPE:Statement
				body_element:
					NEWLINE:$\n
				inline:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:elementToken
					variable_declaration:
						typeName:
							CONTEXT_TYPE:Context 
						variableName:
							name_var:
								variable:
									variable_names:context
					COMMA:,
				body_element:
					body_manipulate:
						tokenInstance:
							NEWLINE:$\n
							tokenName:
								NAME:if_statement
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getIfStatement
									RETURN:return 
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							tokenName:
								NAME:variable_declaration
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getVariableDeclaration
									RETURN:return 
									SEMICOLON:;
						tokenInstance:
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getForStatement
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:for_statement
							NEWLINE:$\n
							COLON::
							body_element:
								NEWLINE:$\n
						tokenInstance:
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getStatement
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:context
																						COMMA:,
													SEMICOLON:;
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:statement
							body_element:
								NEWLINE:$\n
							COLON::
							NEWLINE:$\n
						tokenInstance:
							NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							variable_names:getActivityStatement
																							BACKSLASH:\
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																						COMMA:,
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:context
													SEMICOLON:;
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:activity_statement
							COLON::
						tokenInstance:
							NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:subject
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:variable_call
																					name_var:
																						variable:
																							variable_names:element
																					ACCESS:->
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
										EQUALS:=
										typeName:
											STATEMENT_TYPE:Statement
							COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							tokenName:
								NAME:acquisition
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:getAcquisition
													parameters:
														COMMA:,
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:acquisition
																				name_var:
																					variable:
																						variable_names:element
																				ACCESS:->
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:context
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
							body_element:
								NEWLINE:$\n
						name_var:
							variable:
								variable_names:elementToken
						tokenInstance:
							COLON::
							tokenName:
								NAME:imposition
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												OPERATOR:!= 
												OPERATOR:|| 
												OPERATOR:!= 
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	exact:
																		WILD:imposition
																ACCESS:->
																name_var:
																	exact:
																		WILD:PLUS
																name_var:
																	variable:
																		variable_names:element
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	exact:
																		WILD:IMPOSE
																ACCESS:->
																name_var:
																	exact:
																		WILD:imposition
																name_var:
																	variable:
																		variable_names:element
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										variableName:
											name_var:
												variable:
													variable_names:doom
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Entity
												DOT:.
												group:
													name_var:
														variable:
															variable_names:getImposition
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					exact:
																						WILD:imposition
																				name_var:
																					variable:
																						variable_names:element
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:subject
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:doom
														COMMA:,
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getVariableCall
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:element
																					name_var:
																						exact:
																							WILD:variable_call
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
										variableName:
											name_var:
												variable:
													variable_names:subject
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
						tokenInstance:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							BACKSLASH:\
																							variable_names:getAssociationStatement
																					parameters:
																						COMMA:,
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:context
													SEMICOLON:;
							tokenName:
								NAME:association_statement
						tokenInstance:
							NEWLINE:$\n
							tokenName:
								NAME:return_statement
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							COLON::
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										as_statement:
											body_element:
												body_return:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:context
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:element
																							COMMA:,
																						name_var:
																							exact:
																								variable_names:getStatement
																								BACKSLASH:\
													SEMICOLON:;
													RETURN:return 
									RETURN:return 
						COLON::
						variableName:
							NAME:element
				methodName:
					name_var:
						variable:
							variable_names:getBodyElement
				body_element:
					NEWLINE:$\n
		method_declaration:
			methodDefinition:
				body_element:
					body_return:
						RETURN:return 
						SEMICOLON:;
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
				body_element:
					NEWLINE:$\n
				methodName:
					name_var:
						variable:
							variable_names:getForStatement
				inner:
					IN:>
				body_element:
					NEWLINE:$\n
				body_element:
					NEWLINE:$\n
				body_element:
					body_conditional:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
							OPERATOR:!= 
							body_call:
								group:
									name_var:
										access:
											name_var:
												variable:
													variable_names:forStatementToken
											name_var:
												exact:
													WILD:fromList
											ACCESS:->
						as_body:
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											CONTEXT_TYPE:Context 
										variableName:
											name_var:
												variable:
													variable_names:type
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getClassContext
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:typeName
													group:
														name_var:
															variable:
																variable_names:context
													DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										as_statement:
											body_element:
												body_conditional:
													conditional:
														FOR:for
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:typeName
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:variableHeaderToken
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:variableName
													body_statement:
														body_call:
															group:
																name_var:
																	as_method:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:right
													as_method:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:body
													OPERATOR:: 
									SEMICOLON:;
									RETURN:return 
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:right
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																variable_names:getStatement
																BACKSLASH:\
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:forStatementToken
																					ACCESS:->
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:fromList
																					name_var:
																						exact:
																							WILD:statement
															COMMA:,
										typeName:
											STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														variable_declaration:
															variableName:
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							ACCESS:->
																							name_var:
																								exact:
																									WILD:variableName
																							name_var:
																								variable:
																									variable_names:variableHeaderToken
															typeName:
																type_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:typeName
														SEMICOLON:;
												name_var:
													variable:
														variable_names:add
											DOT:.
											group:
												name_var:
													variable:
														variable_names:context
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:IToken
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:variableHeaderToken
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																ACCESS:->
																ACCESS:->
																name_var:
																	exact:
																		WILD:fromList
																name_var:
																	variable:
																		variable_names:forStatementToken
																name_var:
																	exact:
																		WILD:variable_header
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:body
										EQUALS:=
										typeName:
											BODY_TYPE:Body 
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
															COMMA:,
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:forStatementToken
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:context
														name_var:
															exact:
																BACKSLASH:\
																variable_names:getBodyElements
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:typeName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																variable_names:getTypeName
																BACKSLASH:\
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:type_name
																					name_var:
																						variable:
																							variable_names:variableHeaderToken
																					ACCESS:->
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_throw:
												THROW:throw 
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:completeTokenErrorMessage
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:variableHeaderToken
														DOT:.
														group:
															name_var:
																exact:
																	variable_names:Generator
																	BACKSLASH:\
													OPERATOR:+ 
													body_call:
														group:
															name_var:
																concat:
																	PLUS:+
																	name_var:
																		exact:
																			WILD:!
																	name_var:
																		exact:
																			WILD:Could not find type:
																	PLUS:+
																	name_var:
																		variable:
																			variable_names:typeName
												SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											group:
												name_var:
													variable:
														variable_names:type
										OPERATOR:== 
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
						conditional:
							IF:if
				body_element:
					NEWLINE:$\n
				typeName:
					STATEMENT_TYPE:Statement
				inline:
					COMMA:,
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:context
						typeName:
							CONTEXT_TYPE:Context 
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:IToken
						variableName:
							name_var:
								variable:
									variable_names:forStatementToken
		variable_declaration:
			EQUALS:=
			inner:
				IN:>
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			variableName:
				name_var:
					variable:
						variable_names:declaredListSet
			method_argument:
				body_statement:
					body_call:
						group:
							NEW:new 
							typeName:
								type_var:
									class:
										class_variable_names:HashSet
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
							parameters:
		NEWLINE:$\n
		variable_declaration:
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:declaredCritSet
			typeName:
				type_var:
					class:
						class_variable_names:Set
						template_parameters:
							template_parameter:
								type_var:
									class:
										class_variable_names:String
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
										class_variable_names:HashSet
							NEW:new 
							parameters:
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			HID:<
			class_declaration:
				NEWLINE:$\n
				objectType:
					CLASS:class 
				className:
					variable_names:Target
				NEWLINE:$\n
				NEWLINE:$\n
				FORSLASH:/
				FORSLASH:/
				method_declaration:
					methodDefinition:
						inline:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Entity
								variableName:
									name_var:
										variable:
											variable_names:candidate
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								SEMICOLON:;
								RETURN:return 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
						methodName:
							name_var:
								variable:
									variable_names:satisfies
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:satisfies
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:candidate
								typeName:
									type_var:
										class:
											class_variable_names:Tile
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
								SEMICOLON:;
								RETURN:return 
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						body_element:
							NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			IN:>
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					inline:
						variable_declaration:
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															WILD:TypeName
							variableName:
								name_var:
									exact:
										WILD:candidate
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:false
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:satisfies
			NEWLINE:$\n
			NEWLINE:$\n
			className:
				variable_names:Criteria
			templateTypeName:
				NAME:TypeName
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
		class_declaration:
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:right
				typeName:
					type_var:
						class:
							class_variable_names:Float
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0f
				typeName:
					type_var:
						class:
							class_variable_names:Float
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:left
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						NAME:
							AS_METHOD_NAME:*
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								name_var:
									variable:
										variable_names:right
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											as_braced:
												right:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialRight
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:initialLeft
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:initialRight
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											as_braced:
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
												right:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialLeft
								name_var:
									variable:
										variable_names:left
								EQUALS:=
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Range
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
					methodName:
						name_var:
							variable:
								variable_names:chance
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							variableName:
								name_var:
									variable:
										variable_names:percent
					static:
						STA:@
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											parameters:
											name_var:
												variable:
													variable_names:nextFloat
										group:
											name_var:
												variable:
													variable_names:randomizer
									OPERATOR:<= 
									body_call:
										group:
											name_var:
												variable:
													variable_names:percent
					body_element:
						NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Double
							variableName:
								name_var:
									variable:
										variable_names:percent
					methodName:
						name_var:
							variable:
								variable_names:chance
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:randomizer
										group:
											parameters:
											name_var:
												variable:
													variable_names:nextDouble
									body_call:
										group:
											name_var:
												variable:
													variable_names:percent
									OPERATOR:<= 
							SEMICOLON:;
							RETURN:return 
					typeName:
						type_var:
							class:
								class_variable_names:Boolean
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:value
							typeName:
								type_var:
									class:
										class_variable_names:Double
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
										RETURN:return 
					static:
						STA:@
					methodName:
						name_var:
							variable:
								variable_names:normalize
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:< 
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-0.001 
							conditional:
								IF:if
								ELSE:else
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:-1
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					body_element:
						body_conditional:
							body_statement:
								OPERATOR:> 
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0.001 
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:1
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					typeName:
						type_var:
							class:
								class_variable_names:Integer
					methodName:
						name_var:
							variable:
								variable_names:getIntegerBetween
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:bottom
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:top
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
					body_element:
						body_return:
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										as_braced:
											left:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:int
											right:
												body_statement:
													body_call:
														as_braced:
															left:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:double
															right:
																body_statement:
																	body_call:
																		as_braced:
																			left:
																				body_statement:
																					body_call:
																						as_braced:
																							OPERATOR:* 
																							right:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:bottom
																									BACKSLASH:\
																									OPERATOR:+ 
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:randomizer
																										DOT:.
																										group:
																											name_var:
																												variable:
																													variable_names:nextDouble
																											parameters:
																							left:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:top
																									OPERATOR:- 
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:bottom
							RETURN:return 
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:collection
										DOT:.
										group:
											name_var:
												variable:
													variable_names:get
											parameters:
												method_argument:
													body_statement:
														body_call:
															as_braced:
																left:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:int
																right:
																	body_statement:
																		body_call:
																			as_braced:
																				left:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:nextFloat
																								parameters:
																							group:
																								name_var:
																									variable:
																										variable_names:randomizer
																							DOT:.
																						body_call:
																							DOT:.
																							group:
																								parameters:
																								name_var:
																									variable:
																										variable_names:size
																							group:
																								name_var:
																									variable:
																										variable_names:collection
																						OPERATOR:*
							SEMICOLON:;
					static:
						STA:@
					typeName:
						type_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:TT
							ISTYPENAME:$
					methodName:
						name_var:
							variable:
								variable_names:select
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:collection
							typeName:
								type_var:
									class:
										class_variable_names:List
										template_parameters:
											template_parameter:
												type_var:
													exact:
														variable_names:T
														BACKSLASH:\
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										SEMICOLON:;
										RETURN:return 
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:collection
									group:
										parameters:
										name_var:
											variable:
												variable_names:isEmpty
							conditional:
								IF:if
			SEMICOLON:;
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			interfaceName:
				type_var:
					class:
						class_variable_names:Evaluable
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_assignment:
								name_var:
									variable:
										variable_names:left
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											as_braced:
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
												right:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialLeft
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					methodName:
						NAME:
							AS_METHOD_NAME:*
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							variableName:
								name_var:
									variable:
										variable_names:initialRight
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:initialLeft
						COMMA:,
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						body_line:
							variable_assignment:
								EQUALS:=
								name_var:
									variable:
										variable_names:right
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:initialRight
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													as_braced:
														right:
															body_statement:
																body_call:
																	as_braced:
																		right:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:lowerBound
																		OPERATOR:+
																		left:
																			body_statement:
																				body_call:
																					as_braced:
																						left:
																							body_statement:
																								OPERATOR:-
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:lowerBound
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:upperBound
																						OPERATOR:*
																						right:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:randomizer
																									group:
																										name_var:
																											variable:
																												variable_names:nextFloat
																										parameters:
																									DOT:.
														left:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:int
										RETURN:return 
								body_element:
									NEWLINE:$\n
							conditional:
								ELSE:else
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:upperBound
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:lowerBound
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
					body_element:
						NEWLINE:$\n
					static:
						STA:@
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_return:
										SEMICOLON:;
										RETURN:return 
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:lowerBound
							body_statement:
								OPERATOR:>= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:lowerBound
								body_call:
									group:
										name_var:
											variable:
												variable_names:upperBound
							conditional:
								IF:if
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:Integer
			NEWLINE:$\n
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:Random
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:Random
								parameters:
				variableName:
					name_var:
						variable:
							variable_names:randomizer
				static:
					STA:@
				EQUALS:=
			parentName:
				type_var:
					class:
						class_variable_names:Object
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:initialRight
							typeName:
								type_var:
									class:
										class_variable_names:Integer
						COMMA:,
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Float
							variableName:
								name_var:
									variable:
										variable_names:initialLeft
					body_element:
						body_line:
							variable_assignment:
								name_var:
									variable:
										variable_names:left
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:initialLeft
							SEMICOLON:;
					methodName:
						NAME:
							AS_METHOD_NAME:*
					typeName:
						type_var:
							class:
								class_variable_names:Range
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											as_braced:
												right:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:initialRight
												left:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:float
								name_var:
									variable:
										variable_names:right
			method_declaration:
				methodDefinition:
					body_element:
						body_return:
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:nextFloat
											parameters:
										group:
											name_var:
												variable:
													variable_names:randomizer
										DOT:.
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					inline:
					typeName:
						type_var:
							class:
								class_variable_names:Float
					methodName:
						name_var:
							variable:
								variable_names:getRandomFloat
					static:
						STA:@
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_return:
							RETURN:return 
							SEMICOLON:;
							method_argument:
								body_statement:
									body_call:
										as_braced:
											left:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:float
											right:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:getRandom
																	BACKSLASH:\
															parameters:
											BACKSLASH:\
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:float
					methodName:
						name_var:
							variable:
								variable_names:getValue
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							variableName:
								name_var:
									variable:
										variable_names:user
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:Range
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										as_braced:
											right:
												body_statement:
													BACKSLASH:\
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:nextDouble
															parameters:
														group:
															name_var:
																variable:
																	variable_names:randomizer
													body_call:
														group:
															name_var:
																variable:
																	variable_names:left
													OPERATOR:+ 
											left:
												body_statement:
													OPERATOR:- 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:left
													body_call:
														group:
															name_var:
																variable:
																	variable_names:right
											OPERATOR:* 
							RETURN:return 
							SEMICOLON:;
					methodName:
						name_var:
							variable:
								variable_names:getRandom
					typeName:
						type_var:
							class:
								class_variable_names:double
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			objectType:
				CLASS:class 
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		anonymous_class:
			HID:<
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			className:
				NAME:HashMap
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:lists
						BACKSLASH:\
			className:
				NAME:Rules
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:RegexParser
			inner:
				IN:>
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:lazyNameParser
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:GeneralTokens
						DOT:.
						group:
							name_var:
								variable:
									variable_names:NAME
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			SEMICOLON:;
			className:
				NAME:Iterable
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			DOT:.
			HID:<
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:io
						BACKSLASH:\
			HID:<
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			className:
				NAME:File
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			SEMICOLON:;
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			className:
				NAME:Arrays
		SEMICOLON:;
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Rules
						DOT:.
						group:
							name_var:
								variable:
									variable_names:base
			typeName:
				type_var:
					class:
						class_variable_names:IParser
			variableName:
				name_var:
					variable:
						variable_names:rootParser
			EQUALS:=
			inner:
				IN:>
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:token
						BACKSLASH:\
			className:
				NAME:IToken
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			DOT:.
			HID:<
			DOT:.
			SEMICOLON:;
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:List
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:listnames
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:parser
						group:
							name_var:
								variable:
									variable_names:Listnames
						DOT:.
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:lang
						BACKSLASH:\
			SEMICOLON:;
			COLON::
			className:
				NAME:StringBuilder
			DOT:.
			HID:<
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			DOT:.
			SEMICOLON:;
			className:
				NAME:Entry
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:generation
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
		anonymous_class:
			DOT:.
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			className:
				NAME:Collections
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:javax
						BACKSLASH:\
			className:
				NAME:JFrame
			COLON::
			HID:<
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:swing
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			HID:<
			className:
				NAME:HashSet
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:com.rem.qstnr
			EQUALS:=
			variableName:
				name_var:
					variable:
						variable_names:packageName
			typeName:
				type_var:
					class:
						class_variable_names:String
			inner:
				IN:>
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			HID:<
			className:
				NAME:Thread
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			HID:<
			COLON::
			className:
				NAME:ArrayList
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:awt
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			HID:<
			className:
				NAME:Graphics
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:Scanner
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
			HID:<
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			HID:<
			SEMICOLON:;
			className:
				NAME:List
		NEWLINE:$\n
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			DOT:.
			COLON::
			SEMICOLON:;
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			className:
				NAME:Comparable
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:generation
			COLON::
			HID:<
			className:
				NAME:ListEntry
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			DOT:.
			SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			COLON::
			className:
				NAME:TreeSet
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
			HID:<
			DOT:.
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			HID:<
			DOT:.
			className:
				NAME:LinkedList
			SEMICOLON:;
			COLON::
		anonymous_class:
			className:
				NAME:Generator
			SEMICOLON:;
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			HID:<
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			packageName:
				name_var:
					exact:
						variable_names:generation
						BACKSLASH:\
		anonymous_class:
			COLON::
			className:
				NAME:GeneralTokens
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lists
			SEMICOLON:;
			HID:<
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			SEMICOLON:;
			HID:<
			className:
				NAME:Math
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lang
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			DOT:.
			className:
				NAME:Runnable
			SEMICOLON:;
		anonymous_class:
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			COLON::
			HID:<
			className:
				NAME:Comparator
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
		variable_declaration:
			typeName:
				type_var:
					class:
						class_variable_names:List
			EQUALS:=
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:parser
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Rules
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:rules
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:ParseContext
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			SEMICOLON:;
			COLON::
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:com
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
		NEWLINE:$\n
		anonymous_class:
			COLON::
			className:
				NAME:Iterator
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:util
			SEMICOLON:;
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			DOT:.
		anonymous_class:
			className:
				NAME:Iterator
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			SEMICOLON:;
			COLON::
		anonymous_class:
			COLON::
			DOT:.
			HID:<
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			className:
				NAME:Map
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:lists
						BACKSLASH:\
			className:
				NAME:Listnames
			COLON::
			SEMICOLON:;
			HID:<
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			DOT:.
			DOT:.
			className:
				NAME:IParser
			DOT:.
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			className:
				NAME:Collection
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:parser
						BACKSLASH:\
			SEMICOLON:;
			className:
				NAME:RegexParser
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:com
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:parser
			DOT:.
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:rem
			DOT:.
			DOT:.
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			className:
				NAME:Set
			HID:<
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			COLON::
		NEWLINE:$\n
		NEWLINE:$\n
imports:
	IMPORT_CLASS:
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:mainStringArgs
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:String[]
			EQUALS:=
			typeName:
				type_var:
					class:
						class_variable_names:String
			inner:
				IN:>
		class_declaration:
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:KeyboardEvent
										type_var:
											class:
												class_variable_names:Release
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
							variableName:
								name_var:
									variable:
										variable_names:event
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						body_line:
							body_statement:
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:event
														group:
															name_var:
																variable:
																	variable_names:getKeyInt
															parameters:
							SEMICOLON:;
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					methodName:
						name_var:
							variable:
								variable_names:listen
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Drag
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
							variableName:
								name_var:
									variable:
										variable_names:event
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:changeState
										parameters:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:male
														group:
															name_var:
																variable:
																	variable_names:ImageStates
									group:
										name_var:
											variable:
												variable_names:hero
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
									group:
										name_var:
											variable:
												variable_names:add
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Environments
																		type_var:
																			exact:
																				BACKSLASH:\
																				variable_names:Town
									DOT:.
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:hero
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:environments
														DOT:.
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
															name_var:
																variable:
																	variable_names:getEntryPoint
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
															name_var:
																variable:
																	variable_names:get
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:0
															name_var:
																variable:
																	variable_names:getArea
										name_var:
											variable:
												variable_names:setSpawn
									DOT:.
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:hero
									DOT:.
									group:
										name_var:
											variable:
												variable_names:start
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			exact:
																				variable_names:Exploring
																				BACKSLASH:\
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Activities
															NEW:new 
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:200
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										NEW:new 
										typeName:
											type_var:
												class:
													class_variable_names:Associations
										parameters:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			exact:
																				variable_names:Load
																				BACKSLASH:\
																		type_var:
																			class:
																				class_variable_names:Events
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:null
															NEW:new 
										NAME:on
							SEMICOLON:;
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:male_hero_base
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:Images
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Entities
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Hero
												NEW:new 
								EQUALS:=
								name_var:
									variable:
										variable_names:hero
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:addKeyboardListener
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
									group:
										name_var:
											variable:
												variable_names:InputHandler
									DOT:.
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:hero
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:idle
														group:
															name_var:
																variable:
																	variable_names:ImageStates
														DOT:.
										name_var:
											variable:
												variable_names:changeState
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:InputHandler
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:this
										name_var:
											variable:
												variable_names:addMouseListener
									DOT:.
							SEMICOLON:;
					body_element:
						body_conditional:
							OPERATOR::
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:load
													parameters:
												group:
													name_var:
														variable:
															variable_names:environment
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								FOR:for
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:environment
								typeName:
									type_var:
										class:
											class_variable_names:Environment
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
					methodName:
						name_var:
							variable:
								variable_names:load
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:environments
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			exact:
																				variable_names:Forest
																				BACKSLASH:\
																		type_var:
																			class:
																				class_variable_names:Environments
																		ACCESS:->
															NEW:new 
										name_var:
											variable:
												variable_names:add
							SEMICOLON:;
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:hero
									DOT:.
									group:
										parameters:
										name_var:
											variable:
												variable_names:load
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
										name_var:
											variable:
												variable_names:getArea
									group:
										name_var:
											variable:
												variable_names:environments
									group:
										name_var:
											variable:
												variable_names:accept
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:hero
									DOT:.
									DOT:.
									group:
										name_var:
											variable:
												variable_names:get
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0
										name_var:
											variable:
												variable_names:getEntryPoint
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							variable_assignment:
								method_argument:
									body_statement:
										OPERATOR:/
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:1000.0
										body_call:
											group:
												name_var:
													variable:
														variable_names:currentTimeMillis
												parameters:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:System
											DOT:.
								name_var:
									variable:
										variable_names:thisTick
								EQUALS:=
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									DOT:.
									group:
										parameters:
										name_var:
											variable:
												variable_names:display
									group:
										name_var:
											variable:
												variable_names:focusArea
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:renderer
												group:
													name_var:
														variable:
															variable_names:Gui
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:-0.01f
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:17
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:update
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.01f
														COMMA:,
												group:
													name_var:
														variable:
															variable_names:renderer
												group:
													name_var:
														variable:
															variable_names:Gui
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:31
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:30
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
													name_var:
														variable:
															variable_names:moveView
												group:
													name_var:
														variable:
															variable_names:Gui
												group:
													name_var:
														variable:
															variable_names:renderer
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:19
										name_var:
											variable:
												variable_names:pressedKeys
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:undisplay
													parameters:
												group:
													name_var:
														variable:
															variable_names:focusArea
												DOT:.
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:tick
													parameters:
														method_argument:
															body_statement:
																OPERATOR:-
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:thisTick
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:lastTick
												group:
													name_var:
														variable:
															variable_names:environment
												DOT:.
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Environment
								variableName:
									name_var:
										variable:
											variable_names:environment
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:environments
							OPERATOR::
							conditional:
								FOR:for
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:32
							conditional:
								IF:if
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Gui
												group:
													name_var:
														variable:
															variable_names:moveView
													parameters:
														COMMA:,
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:-0.01f
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				NAME:
																					NUMBER:0.0f
												group:
													name_var:
														variable:
															variable_names:renderer
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
					body_element:
						body_conditional:
							conditional:
								IF:if
							body_statement:
								OPERATOR:!= 
								body_call:
									group:
										parameters:
										name_var:
											variable:
												variable_names:getLocation
									group:
										parameters:
										name_var:
											variable:
												variable_names:getArea
									DOT:.
									group:
										name_var:
											variable:
												variable_names:hero
									DOT:.
								body_call:
									group:
										name_var:
											variable:
												variable_names:focusArea
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										variable_assignment:
											method_argument:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:hero
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getLocation
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getArea
											name_var:
												variable:
													variable_names:focusArea
											EQUALS:=
								body_element:
									body_conditional:
										as_body:
											body_element:
												body_line:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:focusArea
															group:
																name_var:
																	variable:
																		variable_names:undisplay
																parameters:
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											OPERATOR:!= 
											body_call:
												group:
													name_var:
														variable:
															variable_names:focusArea
										conditional:
											IF:if
					body_element:
						body_line:
							variable_assignment:
								name_var:
									variable:
										variable_names:lastTick
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:thisTick
							SEMICOLON:;
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
											OPERATOR:= 
											body_call:
												group:
													name_var:
														variable:
															variable_names:isRunning
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Gui
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:pressedKeys
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
			interfaceName:
				type_var:
					access_multi:
						type_var:
							class:
								class_variable_names:Listener
						type_var:
							class:
								class_variable_names:InputHandler
						ACCESS:->
						type_var:
							class:
								class_variable_names:MouseEvent
						ACCESS:->
						ACCESS:->
						type_var:
							class:
								class_variable_names:Events
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:mosiac
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
				typeName:
					type_var:
						class:
							class_variable_names:Tile
				WEAK:~
				EQUALS:=
			parentName:
				type_var:
					exact:
						variable_names:Object
						BACKSLASH:\
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:pressedKeys
				ARRAY_TYPE:[]
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								array_parameters:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:128
								typeName:
									type_var:
										class:
											class_variable_names:boolean
				typeName:
					type_var:
						class:
							class_variable_names:boolean
			method_declaration:
				methodDefinition:
					static:
						STA:@
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										NEW:new 
										parameters:
										typeName:
											type_var:
												class:
													class_variable_names:Gui
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:args
							typeName:
								type_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:mainStringArgs
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:main
			packageName:
				name_var:
					exact:
						WILD:game
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:1000.0
						OPERATOR:/
						body_call:
							group:
								parameters:
								name_var:
									variable:
										variable_names:currentTimeMillis
							group:
								name_var:
									exact:
										BACKSLASH:\
										variable_names:System
							DOT:.
				variableName:
					name_var:
						variable:
							variable_names:lastTick
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:Double
				WEAK:~
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:listen
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Release
										type_var:
											class:
												class_variable_names:MouseEvent
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
			NEWLINE:$\n
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:MouseEvent
										ACCESS:->
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Press
							variableName:
								name_var:
									variable:
										variable_names:event
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
												NAME:nextLong
											group:
												NEW:new 
												parameters:
												typeName:
													type_var:
														class:
															class_variable_names:Random
								typeName:
									type_var:
										class:
											class_variable_names:Long
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:seed
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:out
									group:
										name_var:
											variable:
												variable_names:println
										parameters:
											method_argument:
												body_statement:
													OPERATOR:+
													BACKSLASH:\
													OPERATOR:+
													body_call:
														group:
															name_var:
																variable:
																	variable_names:seed
													body_call:
														group:
															name_var:
																as_quote:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:L
													body_call:
														group:
															name_var:
																as_quote:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:Seed:
													BACKSLASH:\
									group:
										name_var:
											variable:
												variable_names:System
									DOT:.
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:findSeed
					inline:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:randomizer
									DOT:.
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:seed
										name_var:
											variable:
												variable_names:setSeed
									group:
										name_var:
											variable:
												variable_names:Range
									DOT:.
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:newRange
								method_argument:
									body_statement:
										body_call:
											group:
												NEW:new 
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:0
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			NAME:
																				NUMBER:0
												typeName:
													type_var:
														class:
															class_variable_names:Range
								typeName:
									type_var:
										class:
											class_variable_names:Range
							SEMICOLON:;
			SEMICOLON:;
			className:
				variable_names:Game
			objectType:
				CLASS:class 
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:event
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:InputHandler
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:KeyboardEvent
										type_var:
											class:
												class_variable_names:Press
										ACCESS:->
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:listen
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										array_parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:getKeyInt
															parameters:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:event
										name_var:
											variable:
												variable_names:pressedKeys
								OPERATOR:= 
								body_call:
									group:
										name_var:
											variable:
												variable_names:true
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:listen
					typeName:
						type_var:
							class:
								class_variable_names:void
					inline:
						variable_declaration:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Move
										type_var:
											class:
												class_variable_names:MouseEvent
										type_var:
											class:
												class_variable_names:InputHandler
							variableName:
								name_var:
									variable:
										variable_names:event
			NEWLINE:$\n
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								parameters:
								NEW:new 
								typeName:
									type_var:
										class:
											class_variable_names:ArrayList
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Environment
				variableName:
					name_var:
						variable:
							variable_names:environments
				EQUALS:=
				typeName:
					type_var:
						class:
							class_variable_names:List
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:Environment
				WEAK:~
			variable_declaration:
				WEAK:~
				variableName:
					name_var:
						variable:
							variable_names:focusArea
				typeName:
					type_var:
						class:
							class_variable_names:Area
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			NEWLINE:$\n
			variable_declaration:
				EQUALS:=
				WEAK:~
				typeName:
					type_var:
						class:
							class_variable_names:Double
				variableName:
					name_var:
						variable:
							variable_names:thisTick
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:lastTick
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									variable:
										variable_names:null
				typeName:
					type_var:
						class:
							class_variable_names:Entity
				WEAK:~
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:hero
			interfaceName:
				type_var:
					access_multi:
						type_var:
							class:
								class_variable_names:InputHandler
						ACCESS:->
						type_var:
							class:
								class_variable_names:KeyboardEvent
						type_var:
							class:
								class_variable_names:Listener
						ACCESS:->
						ACCESS:->
						type_var:
							class:
								class_variable_names:Events
			SEMICOLON:;
		SEMICOLON:;
		NEWLINE:$\n
		NEWLINE:$\n
NEWLINE:$\n
comment:
	WILD:import images/image.clws
NEWLINE:$\n
anonymous_class:
	className:
		NAME:HeroStats
	packageName:
		name_var:
			exact:
				BACKSLASH:\
				variable_names:lists
	SEMICOLON:;
	COLON::
	HID:<
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			SEMICOLON:;
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			className:
				NAME:DisplayMode
		imports:
			IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
			HID:<
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			className:
				NAME:Display
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
			DOT:.
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			HID:<
			COLON::
			DOT:.
			className:
				NAME:ByteBuffer
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:nio
						BACKSLASH:\
			SEMICOLON:;
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			className:
				NAME:GLU
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:util
						BACKSLASH:\
			DOT:.
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:glu
						BACKSLASH:\
		NEWLINE:$\n
		class_declaration:
			className:
				variable_names:Colours
			objectType:
				CLASS:class 
			DOT:.
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:gui
			packageName:
				name_var:
					exact:
						WILD:images
		NEWLINE:$\n
		NEWLINE:$\n
		SEMICOLON:;
		anonymous_class:
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			SEMICOLON:;
			className:
				NAME:Cursor
			COLON::
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:input
			DOT:.
		anonymous_class:
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			className:
				NAME:Sys
			COLON::
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			DOT:.
			HID:<
		anonymous_class:
			SEMICOLON:;
			DOT:.
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
			packageName:
				name_var:
					exact:
						variable_names:input
						BACKSLASH:\
			className:
				NAME:Keyboard
			COLON::
		imports:
			IMPORT_CLASS:
		NEWLINE:$\n
		class_declaration:
			DOT:.
			SEMICOLON:;
			NEWLINE:$\n
			objectType:
				ENUMERATION:enum 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			className:
				variable_names:ImageStates
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:images
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:gui
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:void
				variableName:
					name_var:
						variable:
							variable_names:DEFAULT
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:void
				variableName:
					name_var:
						variable:
							variable_names:ASCEND
		NEWLINE:$\n
		variable_declaration:
			variableName:
				name_var:
					variable:
						variable_names:INT_SIZE
			inner:
				IN:>
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									NAME:
										NUMBER:4
			typeName:
				type_var:
					class:
						class_variable_names:Integer
			EQUALS:=
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:nio
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			SEMICOLON:;
			className:
				NAME:IntBuffer
		anonymous_class:
			className:
				NAME:ByteOrder
			COLON::
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
		NEWLINE:$\n
		variable_declaration:
			method_argument:
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									WILD:final Gui.Image.States
			typeName:
				type_var:
					class:
						class_variable_names:String
			inner:
				IN:>
			variableName:
				name_var:
					variable:
						variable_names:finalImageStatesClassName
			EQUALS:=
		NEWLINE:$\n
		anonymous_class:
			className:
				NAME:Mouse
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:lwjgl
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			DOT:.
			HID:<
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:input
						BACKSLASH:\
			COLON::
			SEMICOLON:;
		anonymous_class:
			COLON::
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			DOT:.
			className:
				NAME:GL11
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			DOT:.
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			class_declaration:
				NEWLINE:$\n
				FORSLASH:/
				FORSLASH:/
				className:
					variable_names:Flipped
				objectType:
					CLASS:class 
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:images
			NEWLINE:$\n
			packageName:
				name_var:
					exact:
						WILD:gui
			DOT:.
			DOT:.
			objectType:
				CLASS:class 
			className:
				variable_names:Images
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			COLON::
			className:
				NAME:ImageIO
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:imageio
			SEMICOLON:;
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:javax
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			className:
				NAME:BufferedImage
			HID:<
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:awt
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			COLON::
			DOT:.
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:image
		NEWLINE:$\n
		anonymous_class:
			SEMICOLON:;
			COLON::
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:nio
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:java
			HID:<
			className:
				NAME:FloatBuffer
		NEWLINE:$\n
		anonymous_class:
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:java
						BACKSLASH:\
			packageName:
				name_var:
					exact:
						variable_names:awt
						BACKSLASH:\
			DOT:.
			className:
				NAME:PixelGrabber
			COLON::
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:image
		anonymous_class:
			DOT:.
			HID:<
			packageName:
				name_var:
					exact:
						variable_names:org
						BACKSLASH:\
			className:
				NAME:PixelFormat
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			COLON::
			SEMICOLON:;
			DOT:.
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:opengl
		NEWLINE:$\n
		NEWLINE:$\n
		NEWLINE:$\n
		anonymous_class:
			HID:<
			COLON::
			DOT:.
			className:
				NAME:GL12
			packageName:
				name_var:
					exact:
						variable_names:opengl
						BACKSLASH:\
			DOT:.
			packageName:
				name_var:
					exact:
						variable_names:lwjgl
						BACKSLASH:\
			SEMICOLON:;
			packageName:
				name_var:
					exact:
						BACKSLASH:\
						variable_names:org
		NEWLINE:$\n
		NEWLINE:$\n
		class_declaration:
			packageName:
				name_var:
					exact:
						WILD:gui
			objectType:
				CLASS:class 
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			DOT:.
			packageName:
				name_var:
					exact:
						WILD:images
			DOT:.
			className:
				variable_names:Drawables
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					tokenName:
						NAME:IMPORT_EVENT
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_events
							tokenInstance:
								tokenName:
									NAME:event_declaration
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Events
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
										SEMICOLON:;
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
				variableName:
					NAME:import_events
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_supports
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_supports
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Supports
								tokenName:
									NAME:support_declaration
								body_element:
									NEWLINE:$\n
					tokenName:
						NAME:IMPORT_SUPPORT
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Traits
												DOT:.
								tokenName:
									NAME:trait_declaration
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_traits
							COLON::
							variableName:
								NAME:element
					tokenName:
						NAME:IMPORT_TRAIT
				variableName:
					NAME:import_traits
		body_element:
			body_manipulate:
				variableName:
					NAME:import_activities
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					COLON::
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ACTIVITY
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_activities
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Activities
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								COLON::
								tokenName:
									NAME:activity_declaration
								body_element:
									NEWLINE:$\n
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				tokenInstance:
					COLON::
					tokenName:
						NAME:IMPORT_AFFINITY
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Affinities
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:affinity_declaration
							name_var:
								variable:
									variable_names:import_affinities
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_affinities
		inline:
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:import_any
				typeName:
					type_var:
						class:
							class_variable_names:IToken
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_aspects
				tokenInstance:
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							tokenInstance:
								tokenName:
									NAME:aspect_declaration
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Aspects
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							COLON::
							name_var:
								variable:
									variable_names:import_aspects
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_ASPECT
				name_var:
					variable:
						variable_names:import_any
		methodName:
			name_var:
				variable:
					variable_names:importAny
		body_element:
			body_manipulate:
				variableName:
					NAME:import_conditions
				name_var:
					variable:
						variable_names:import_any
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_conditions
							tokenInstance:
								tokenName:
									NAME:condition_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Conditions
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
								COLON::
								body_element:
									NEWLINE:$\n
							COLON::
					tokenName:
						NAME:IMPORT_CONDITION
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_reason
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:reason_declaration
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Relationship
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								body_element:
									NEWLINE:$\n
								COLON::
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
					COLON::
					tokenName:
						NAME:IMPORT_REASON
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_reason
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				name_var:
					variable:
						variable_names:import_any
				tokenInstance:
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								tokenName:
									NAME:attack_declaration
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												group:
													name_var:
														variable:
															variable_names:Attacks
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_attacks
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ATTACK
				variableName:
					NAME:import_attacks
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				variableName:
					NAME:import_skills
				COLON::
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								tokenName:
									NAME:skill_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												group:
													name_var:
														variable:
															variable_names:Skills
												DOT:.
								body_element:
									NEWLINE:$\n
								COLON::
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_skills
					tokenName:
						NAME:IMPORT_SKILL
					COLON::
					body_element:
						NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					tokenName:
						NAME:IMPORT_PAYMENT_TYPE
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Treasury
												group:
													name_var:
														variable:
															variable_names:paymentTypeDec
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
										SEMICOLON:;
								tokenName:
									NAME:payment_type_declaration
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:import_payment_types
				variableName:
					NAME:import_payment_types
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:import_items
				tokenInstance:
					body_element:
						body_manipulate:
							variableName:
								NAME:element
							COLON::
							name_var:
								variable:
									variable_names:import_items
							tokenInstance:
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:Items
												group:
													name_var:
														variable:
															variable_names:declaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:item_declaration
								COLON::
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					tokenName:
						NAME:IMPORT_ITEM
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								tokenName:
									NAME:import_any
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:importAny
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
								body_element:
									NEWLINE:$\n
							name_var:
								variable:
									variable_names:import_items
							variableName:
								NAME:element
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				tokenInstance:
					tokenName:
						NAME:IMPORT_ASSOCIATION
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_association
							COLON::
							variableName:
								NAME:element
							tokenInstance:
								tokenName:
									NAME:association_declaration
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
													name_var:
														variable:
															variable_names:declaration
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Associations
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								COLON::
					body_element:
						NEWLINE:$\n
					COLON::
					body_element:
						NEWLINE:$\n
				variableName:
					NAME:import_association
				name_var:
					variable:
						variable_names:import_any
				COLON::
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_manipulate:
				name_var:
					variable:
						variable_names:import_any
				COLON::
				variableName:
					NAME:import_map
				tokenInstance:
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:Environment
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:import_map
										name_var:
											variable:
												variable_names:declaration
									DOT:.
					tokenName:
						NAME:IMPORT_MAP
		body_element:
			body_manipulate:
				variableName:
					NAME:import_quests
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							name_var:
								variable:
									variable_names:import_quests
							variableName:
								NAME:element
							COLON::
							tokenInstance:
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:quest_declaration
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:Quests
												group:
													name_var:
														variable:
															variable_names:typeDeclaration
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:element
					COLON::
					tokenName:
						NAME:IMPORT_QUEST
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:import_any
				COLON::
NEWLINE:$\n
imports:
	IMPORT_CLASS:
		NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:behaviours
					packageName:
						name_var:
							exact:
								WILD:activities
					DOT:.
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					DOT:.
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Activities
									class_declaration:
										NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Activity
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
											variableName:
												name_var:
													variable:
														variable_names:id
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
																		type_var:
																			class:
																				class_variable_names:Activity
											static:
												STA:@
											EQUALS:=
										NEWLINE:$\n
										NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
														SEMICOLON:;
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												inline:
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Usable
															type_var:
																class:
																	class_variable_names:List
															ACCESS:->
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:allUsables
												methodName:
													name_var:
														variable:
															variable_names:getUsables
												inline:
										variable_declaration:
											static:
												STA:@
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:List
														ACCESS:->
														type_var:
															class:
																class_variable_names:Usable
											variableName:
												name_var:
													variable:
														variable_names:allUsables
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Usable
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:List
															parameters:
															NEW:new 
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:hasFailed
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:host
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:hasSucceeded
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:host
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
										NEWLINE:$\n
										SEMICOLON:;
										NEWLINE:$\n
										SEMICOLON:;
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												inline:
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														SEMICOLON:;
														RETURN:return 
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Activity
															ACCESS:->
															type_var:
																class:
																	class_variable_names:Id
												methodName:
													name_var:
														variable:
															variable_names:getId
												body_element:
													NEWLINE:$\n
										className:
											variable_names:activityName
										SEMICOLON:;
										objectType:
											CLASS:class 
										FORSLASH:/
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												inline:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:activityName
										NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Activity
										variable_declaration:
											WEAK:~
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											typeName:
												type_var:
													class:
														class_variable_names:Entity
											variableName:
												name_var:
													variable:
														variable_names:host
										NEWLINE:$\n
									methodName:
										ADD:+=
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:setAssignment
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getStatement
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											DOT:.
																											group:
																												parameters:
																												name_var:
																													variable:
																														variable_names:getContext
																											group:
																												name_var:
																													access:
																														ACCESS:->
																														name_var:
																															as_string:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				variable:
																																					variable_names:activityName
																														name_var:
																															variable:
																																variable_names:Activities
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:element
																														ACCESS:->
																														name_var:
																															exact:
																																WILD:statement
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:variable
															SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		exact:
																			WILD:statement
																	name_var:
																		variable:
																			variable_names:element
																	ACCESS:->
													OPERATOR:!= 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			BACKSLASH:\
																			variable_names:addVariableHeader
																	parameters:
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:element
																								ACCESS:->
																								name_var:
																									exact:
																										WILD:variable_header
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									variable:
																										variable_names:Activities
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
													variableName:
														name_var:
															variable:
																variable_names:variable
													typeName:
														VARIABLE_TYPE:Variable 
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:variable_declaration
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:variable
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:true
															name_var:
																variable:
																	variable_names:setIsWeak
														DOT:.
										body_element:
											NEWLINE:$\n
									COLON::
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:activityName
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																CAMEL:^
																ACCESS:->
																name_var:
																	exact:
																		WILD:activityName
																name_var:
																	variable:
																		variable_names:declarationToken
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:getTarget
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Activities
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
												methodName:
													ADD:+=
												method_declaration:
													methodDefinition:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														methodName:
															name_var:
																variable:
																	variable_names:getTarget
														inline:
															COMMA:,
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:host
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:targetCriteria
																typeName:
																	type_var:
																		access_multi:
																			ACCESS:->
																			type_var:
																				class:
																					class_variable_names:Target
																			type_var:
																				class:
																					class_variable_names:Criteria
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														CONTEXT_TYPE:Context 
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													EQUALS:=
													method_argument:
														body_statement:
															OPERATOR:->*
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:Activities
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:getContext
																	parameters:
																group:
																	name_var:
																		exact:
																			WILD:getTarget[Entity,EntityCriteria]
																DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												tokenInstance:
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:body_element
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:getTarget[Entity,EntityCriteria]
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																		name_var:
																			variable:
																				variable_names:appendToBody
																	DOT:.
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
																				ACCESS:->
																OPERATOR:->*
													body_element:
														NEWLINE:$\n
													COLON::
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
												COLON::
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:step
														ACCESS:->
														name_var:
															variable:
																variable_names:declarationToken
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												name_var:
													variable:
														variable_names:declarationToken
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_manipulate:
															type_var:
																access_multi:
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:activityName
																	type_var:
																		class:
																			class_variable_names:Activities
																	ACCESS:->
															method_declaration:
																methodDefinition:
																	inline:
																		variable_declaration:
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Entity
																			variableName:
																				name_var:
																					variable:
																						variable_names:host
																	typeName:
																		type_var:
																			class:
																				class_variable_names:Boolean
																	methodName:
																		name_var:
																			variable:
																				variable_names:step
															methodName:
																ADD:+=
													COLON::
													tokenName:
														NAME:step
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:step
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								exact:
																									BACKSLASH:\
																									variable_names:getBodyElements
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:stepContext
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:element
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
																OPERATOR:->*
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:step
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:getContext
																				parameters:
																		OPERATOR:->*
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																						ACCESS:->
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:stepContext
																typeName:
																	CONTEXT_TYPE:Context 
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:element
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:hasFailed[Entity]
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	SEMICOLON:;
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	RETURN:return 
												name_var:
													variable:
														variable_names:appendToBody
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												tokenInstance:
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:listenContext
																method_argument:
																	body_statement:
																		OPERATOR:->*
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:listen
																			group:
																				name_var:
																					variable:
																						variable_names:getContext
																				parameters:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																typeName:
																	CONTEXT_TYPE:Context 
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:Activities
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				ACCESS:->
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:listen
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:listenContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:element
																							name_var:
																								exact:
																									variable_names:getBodyElements
																									BACKSLASH:\
																	DOT:.
																OPERATOR:->*
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:listen
													body_element:
														body_manipulate:
															method_declaration:
																methodDefinition:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:void
																	inline:
																		variable_declaration:
																			variableName:
																				name_var:
																					variable:
																						variable_names:event
																			typeName:
																				type_var:
																					access_multi:
																						type_var:
																							class:
																								class_variable_names:Event
																						type_var:
																							class:
																								class_variable_names:Entity
																						ACCESS:->
																		variable_declaration:
																			typeName:
																				type_var:
																					class:
																						class_variable_names:Entity
																			variableName:
																				name_var:
																					variable:
																						variable_names:host
																		COMMA:,
																	methodName:
																		name_var:
																			variable:
																				variable_names:listen
															methodName:
																ADD:+=
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Activities
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:activityName
												variableName:
													NAME:element
												name_var:
													variable:
														variable_names:declarationToken
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															exact:
																WILD:listen
														ACCESS:->
														name_var:
															variable:
																variable_names:declarationToken
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:event
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Events
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:event_names
																											name_var:
																												variable:
																													variable_names:element
																											ACCESS:->
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:eventContext
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																					COMMA:,
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getBodyElements
															name_var:
																variable:
																	variable_names:addToEventMethod
														DOT:.
										body_element:
											body_line:
												variable_declaration:
													typeName:
														CONTEXT_TYPE:Context 
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Events
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:Activities
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:activityName
																								ACCESS:->
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												access:
																													ACCESS:->
																													name_var:
																														exact:
																															WILD:event_names
																													name_var:
																														variable:
																															variable_names:element
																	name_var:
																		variable:
																			variable_names:getEventContext
																DOT:.
												SEMICOLON:;
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													access:
														ACCESS:->
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														name_var:
															variable:
																variable_names:Activities
														ACCESS:->
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:hasSucceeded[Entity]
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:false
																	RETURN:return 
																	SEMICOLON:;
												name_var:
													variable:
														variable_names:appendToBody
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Activities
										body_call:
											group:
												name_var:
													variable:
														variable_names:prependToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_return:
																				RETURN:return 
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:activityName
																											type_var:
																												class:
																													class_variable_names:Activities
																											ACCESS:->
																								NEW:new 
																				SEMICOLON:;
																	conditional:
																		IF:if
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_quote:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																				name_var:
																					variable:
																						variable_names:equals
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:activityName
															body_element:
																NEWLINE:$\n
											group:
												name_var:
													exact:
														WILD:create
											DOT:.
										OPERATOR:->*
									SEMICOLON:;
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:methodName
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		concat:
																			name_var:
																				exact:
																					WILD:gain[
																			name_var:
																				exact:
																					WILD:,Source]
																			PLUS:+
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:element
																			PLUS:+
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:element
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:toLowerCase
													variableName:
														name_var:
															variable:
																variable_names:variableName
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:appendToBody
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:Activities
																									ACCESS:->
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:activityName
																						DOT:.
																						DOT:.
																						group:
																							name_var:
																								exact:
																									WILD:allUsables
																						group:
																							name_var:
																								variable:
																									variable_names:add
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													as_string:
																														body_statement:
																															body_call:
																																group:
																																	name_var:
																																		variable:
																																			variable_names:variableName
																				SEMICOLON:;
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:methodName
														DOT:.
													OPERATOR:->*
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Entity
												SEMICOLON:;
										tokenName:
											NAME:className
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:IToken
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_manipulate:
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										tokenName:
											NAME:getDestination
										body_element:
											body_manipulate:
												COLON::
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:getDestination[Entity]
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:getTargetContext
																								COMMA:,
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
																		name_var:
																			variable:
																				variable_names:appendToBody
																	DOT:.
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				name_var:
																					variable:
																						variable_names:Activities
																OPERATOR:->*
															SEMICOLON:;
													tokenName:
														NAME:body_element
													COLON::
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Activities
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:activityName
														ACCESS:->
												method_declaration:
													methodDefinition:
														methodName:
															name_var:
																variable:
																	variable_names:getDestination
														inline:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:host
																typeName:
																	type_var:
																		class:
																			class_variable_names:Entity
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												methodName:
													ADD:+=
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													method_argument:
														body_statement:
															OPERATOR:->*
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:getDestination[Entity]
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getContext
															body_call:
																group:
																	name_var:
																		access:
																			ACCESS:->
																			ACCESS:->
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:activityName
																			name_var:
																				variable:
																					variable_names:Activities
													variableName:
														name_var:
															variable:
																variable_names:getTargetContext
													typeName:
														CONTEXT_TYPE:Context 
												SEMICOLON:;
									variableName:
										NAME:element
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:addVariableHeader
																	BACKSLASH:\
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
										COLON::
										tokenName:
											NAME:variable_header
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:description
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
																					name_var:
																						exact:
																							WILD:description
							body_element:
								body_manipulate:
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:failContext
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																						ACCESS:->
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:getContext
																				parameters:
																			DOT:.
																			group:
																				name_var:
																					exact:
																						WILD:hasFailed[Entity]
																		OPERATOR:->*
																EQUALS:=
																typeName:
																	CONTEXT_TYPE:Context 
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										SEMICOLON:;
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																										RETURN:return 
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	BACKSLASH:\
																																	variable_names:getBooleanStatement
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:element
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:failContext
																							conditional:
																								IF:if
																		name_var:
																			variable:
																				variable_names:appendToBody
																	DOT:.
																	group:
																		name_var:
																			exact:
																				WILD:hasFailed[Entity]
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			access:
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
												conditional:
													ELSE:else
										tokenName:
											NAME:endState
										COLON::
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													body_call:
														group:
															name_var:
																access:
																	name_var:
																		exact:
																			WILD:SUCCEED
																	ACCESS:->
																	name_var:
																		variable:
																			variable_names:element
													OPERATOR:!= 
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																typeName:
																	CONTEXT_TYPE:Context 
																variableName:
																	name_var:
																		variable:
																			variable_names:successContext
																method_argument:
																	body_statement:
																		OPERATOR:->*
																		body_call:
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:getContext
																			group:
																				name_var:
																					exact:
																						WILD:hasSucceeded[Entity]
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:Activities
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:activityName
																EQUALS:=
															SEMICOLON:;
													body_element:
														body_line:
															body_statement:
																OPERATOR:->*
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:appendToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							as_body:
																								body_element:
																									body_return:
																										SEMICOLON:;
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:true
																										RETURN:return 
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							exact:
																																								WILD:boolean_statement
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:element
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:successContext
																							conditional:
																								IF:if
																	group:
																		name_var:
																			exact:
																				WILD:hasSucceeded[Entity]
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activityName
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					variable:
																						variable_names:Activities
															SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									COLON::
									name_var:
										variable:
											variable_names:declarationToken
					packageName:
						name_var:
							exact:
								WILD:entities
					className:
						variable_names:Activities
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:activityName
									typeName:
										type_var:
											class:
												class_variable_names:String
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							static:
								STA:@
							typeName:
								type_var:
									class:
										class_variable_names:Activity
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:data
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
							methodName:
								name_var:
									variable:
										variable_names:setup
							inner:
								IN:>
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													method_argument:
														body_entries:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:idle
												name_var:
													variable:
														variable_names:addToEventMethod
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:success
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													COMMA:,
													COMMA:,
													method_argument:
														body_entries:
												name_var:
													variable:
														variable_names:addToEventMethod
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
													method_argument:
														body_entries:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:load
													COMMA:,
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_entries:
													COMMA:,
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Activity
											group:
												name_var:
													variable:
														variable_names:Events
							body_element:
								NEWLINE:$\n
					objectType:
						CLASS:class 
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					class_declaration:
						FORSLASH:/
						NEWLINE:$\n
						objectType:
							CLASS:class 
						class_declaration:
							NEWLINE:$\n
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:Activity
								variableName:
									name_var:
										variable:
											variable_names:host
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								EQUALS:=
							className:
								variable_names:Fail
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											exact:
												BACKSLASH:\
												variable_names:Fail
										type_var:
											class:
												class_variable_names:Listener
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
							SEMICOLON:;
							FORSLASH:/
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:host
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:event
														name_var:
															variable:
																variable_names:on
									methodName:
										name_var:
											variable:
												variable_names:listen
									inline:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Events
														type_var:
															exact:
																variable_names:Fail
																BACKSLASH:\
														ACCESS:->
											variableName:
												name_var:
													variable:
														variable_names:event
									body_element:
										NEWLINE:$\n
							NEWLINE:$\n
							objectType:
								CLASS:class 
							FORSLASH:/
						FORSLASH:/
						className:
							variable_names:Listeners
						NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getInRangeUsables
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:List
										type_var:
											class:
												class_variable_names:Usable
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														NEW:new 
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:List
																	type_var:
																		class:
																			class_variable_names:Usable
																	ACCESS:->
										typeName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Usable
													type_var:
														class:
															class_variable_names:List
										variableName:
											name_var:
												variable:
													variable_names:result
										EQUALS:=
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									OPERATOR:: 
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:usable
										typeName:
											type_var:
												class:
													class_variable_names:Usable
									conditional:
										FOR:for
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:getUsables
												parameters:
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:potentialRange
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:usable
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:host
																	name_var:
																		variable:
																			variable_names:getRange
																DOT:.
													typeName:
														type_var:
															class:
																class_variable_names:Float
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:potentialRange
													body_call:
														group:
															name_var:
																variable:
																	variable_names:usable
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getTargetCriteria
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:toTarget
															name_var:
																variable:
																	variable_names:satisfies
														DOT:.
														DOT:.
													OPERATOR:<= 
													OPERATOR:&& 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:distanceToTarget
												conditional:
													IF:if
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:result
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:usable
																	DOT:.
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:result
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:host
													DOT:.
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getLocation
														parameters:
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:toTarget
																		DOT:.
																		group:
																			parameters:
																			name_var:
																				variable:
																					variable_names:getLocation
														name_var:
															variable:
																variable_names:getDistanceTo
										variableName:
											name_var:
												variable:
													variable_names:distanceToTarget
										typeName:
											type_var:
												class:
													class_variable_names:Double
							body_element:
								NEWLINE:$\n
							inline:
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:toTarget
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:exploredAreas
						method_argument:
							body_statement:
								body_call:
									group:
										NEW:new 
										typeName:
											type_var:
												class:
													class_variable_names:HashSet
													template_parameters:
														template_parameter:
															type_var:
																class:
																	class_variable_names:Area
										parameters:
						EQUALS:=
						WEAK:~
						typeName:
							type_var:
								class:
									template_parameters:
										template_parameter:
											type_var:
												class:
													class_variable_names:Area
									class_variable_names:Set
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:event
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Entity
												type_var:
													class:
														class_variable_names:Event
												ACCESS:->
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:listen
							typeName:
								type_var:
									class:
										class_variable_names:void
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:hasFailed
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:failed
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:exploredAreas
												group:
													name_var:
														variable:
															variable_names:contains
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:area
												DOT:.
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Area
									variableName:
										name_var:
											variable:
												variable_names:area
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:hasExplored
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Usable
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:failed
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:true
												SEMICOLON:;
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							inline:
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					parameters:
																					name_var:
																						exact:
																							variable_names:getUsables
																							BACKSLASH:\
																name_var:
																	variable:
																		variable_names:select
															group:
																name_var:
																	variable:
																		variable_names:Range
															DOT:.
												RETURN:return 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:getUsables
												parameters:
											group:
												parameters:
												name_var:
													variable:
														variable_names:isEmpty
											DOT:.
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:pick
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getId
							inline:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Activity
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								variable:
									variable_names:name
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:point
												name_var:
													variable:
														variable_names:add
											group:
												name_var:
													variable:
														variable_names:exploredPoints
											DOT:.
									SEMICOLON:;
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:point
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Tiles
												ACCESS:->
												type_var:
													class:
														class_variable_names:EntryPoint
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:rememberEntryPoint
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:targetCriteria
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Target
												type_var:
													class:
														class_variable_names:Criteria
												ACCESS:->
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Entity
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												DOT:.
												group:
													parameters:
													name_var:
														variable:
															variable_names:getLocation
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:targetCriteria
													name_var:
														variable:
															variable_names:getClosestEntity
												group:
													name_var:
														variable:
															variable_names:host
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getTarget
					method_declaration:
						methodDefinition:
							inline:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:List
										type_var:
											class:
												class_variable_names:Usable
										ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:getUsables
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:exploredAreas
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newArea
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:explore
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Area
									variableName:
										name_var:
											variable:
												variable_names:newArea
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:failed
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:false
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						EQUALS:=
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:description
						typeName:
							type_var:
								class:
									class_variable_names:String
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					SEMICOLON:;
					className:
						variable_names:Activity
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:event
									typeName:
										type_var:
											access_multi:
												type_var:
													exact:
														BACKSLASH:\
														variable_names:Tick
												type_var:
													class:
														class_variable_names:Events
												ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:event
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
													DOT:.
										variableName:
											name_var:
												variable:
													variable_names:host
										EQUALS:=
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:stop
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														group:
															name_var:
																variable:
																	variable_names:host
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				NEW:new 
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							type_var:
																								exact:
																									variable_names:Success
																									BACKSLASH:\
																							ACCESS:->
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:hasSucceeded
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
									conditional:
										IF:if
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:host
																				typeName:
																					type_var:
																						access_multi:
																							ACCESS:->
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:Fail
																							type_var:
																								class:
																									class_variable_names:Events
																				NEW:new 
															name_var:
																exact:
																	variable_names:on
																	BACKSLASH:\
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:stop
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:this
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:host
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:hasFailed
														BACKSLASH:\
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
									conditional:
										IF:if
										ELSE:else
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:host
														group:
															name_var:
																variable:
																	variable_names:isIdle
															parameters:
														DOT:.
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															body_statement:
																OPERATOR:==
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:failed
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:false
																OPERATOR:&& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:false
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																		name_var:
																			exact:
																				variable_names:step
																				BACKSLASH:\
																OPERATOR:== 
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		SEMICOLON:;
																		body_statement:
																			body_call:
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										typeName:
																											type_var:
																												access_multi:
																													type_var:
																														class:
																															class_variable_names:Events
																													ACCESS:->
																													type_var:
																														exact:
																															BACKSLASH:\
																															variable_names:Idle
																										NEW:new 
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:host
																											COMMA:,
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:this
																					name_var:
																						exact:
																							variable_names:on
																							BACKSLASH:\
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:newHost
							methodName:
								name_var:
									variable:
										variable_names:setHost
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:add
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Usable
									variableName:
										name_var:
											variable:
												variable_names:newUsable
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:activities
					NEWLINE:$\n
					variable_declaration:
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Entity
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:targetEntity
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							inline:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											OPERATOR:|| 
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											OPERATOR:!= 
											body_call:
												group:
													name_var:
														variable:
															variable_names:targetEntity
											body_call:
												group:
													name_var:
														variable:
															variable_names:targetDen
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											OPERATOR:!= 
							methodName:
								name_var:
									variable:
										variable_names:hasTarget
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
												conditional:
													FOR:for
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Usable
													variableName:
														name_var:
															variable:
																variable_names:usable
												OPERATOR:: 
												as_body:
													body_element:
														body_conditional:
															conditional:
																IF:if
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_return:
																		RETURN:return 
																		SEMICOLON:;
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:true
															body_statement:
																body_call:
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getFocusSkill
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:host
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	group:
																		name_var:
																			variable:
																				variable_names:use
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:host
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:this
																OPERATOR:!=
																OPERATOR:&& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:usable
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										OPERATOR:|| 
										OPERATOR:== 
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:getFocusSkill
											group:
												name_var:
													variable:
														variable_names:use
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:host
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:this
											DOT:.
											group:
												name_var:
													variable:
														variable_names:host
											DOT:.
										body_call:
											group:
												name_var:
													variable:
														variable_names:host
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getFocusSkill
												parameters:
										OPERATOR:|| 
										body_call:
											group:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:getUsables
												parameters:
											DOT:.
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:getFocusSkill
																	parameters:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:host
												name_var:
													variable:
														variable_names:contains
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										OPERATOR:==
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:false
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
							methodName:
								name_var:
									variable:
										variable_names:step
					class_declaration:
						method_declaration:
							methodDefinition:
								inline:
								methodName:
									name_var:
										variable:
											variable_names:create
								typeName:
									type_var:
										class:
											class_variable_names:Activity
						FORSLASH:/
						NEWLINE:$\n
						NEWLINE:$\n
						className:
							variable_names:Factory
						FORSLASH:/
						objectType:
							INTERFACE:interface 
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Tile
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getDestination
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newUsable
									typeName:
										type_var:
											class:
												class_variable_names:Usable
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:remove
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:hasSucceeded
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
					variable_declaration:
						EQUALS:=
						WEAK:~
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:MonsterDen
									type_var:
										class:
											class_variable_names:Tiles
						variableName:
							name_var:
								variable:
									variable_names:targetDen
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getFurthestAvailableUsable
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:-1f
										typeName:
											type_var:
												class:
													class_variable_names:Float
										variableName:
											name_var:
												variable:
													variable_names:longestRange
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							inline:
								COMMA:,
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:toTarget
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Usable
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:result
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:result
										typeName:
											type_var:
												class:
													class_variable_names:Usable
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
									SEMICOLON:;
							body_element:
								body_conditional:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Usable
										variableName:
											name_var:
												variable:
													variable_names:usable
									OPERATOR:: 
									as_body:
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:longestRange
													OPERATOR:> 
													OPERATOR:&& 
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:usable
														group:
															name_var:
																variable:
																	variable_names:satisfies
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:toTarget
														DOT:.
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getTargetCriteria
													body_call:
														group:
															name_var:
																variable:
																	variable_names:potentialRange
												as_body:
													body_element:
														body_line:
															variable_assignment:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:usable
																name_var:
																	variable:
																		variable_names:result
																EQUALS:=
															SEMICOLON:;
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	variable:
																		variable_names:longestRange
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:potentialRange
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													IF:if
										body_element:
											body_line:
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:host
																	name_var:
																		variable:
																			variable_names:getRange
																group:
																	name_var:
																		variable:
																			variable_names:usable
													typeName:
														type_var:
															class:
																class_variable_names:Float
													variableName:
														name_var:
															variable:
																variable_names:potentialRange
													EQUALS:=
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									conditional:
										FOR:for
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:getUsables
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Usable
										type_var:
											class:
												class_variable_names:List
										ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getAvailableUsables
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Tile
									variableName:
										name_var:
											variable:
												variable_names:toTarget
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														parameters:
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Usable
																	type_var:
																		class:
																			class_variable_names:List
														NEW:new 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:result
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:List
													type_var:
														class:
															class_variable_names:Usable
													ACCESS:->
									SEMICOLON:;
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:result
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Usable
										variableName:
											name_var:
												variable:
													variable_names:usable
									conditional:
										FOR:for
									OPERATOR:: 
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:getUsables
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:result
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:usable
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:usable
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getTargetCriteria
														DOT:.
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:toTarget
															name_var:
																variable:
																	variable_names:satisfies
												conditional:
													IF:if
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Usable
										type_var:
											class:
												class_variable_names:List
										ACCESS:->
							methodName:
								name_var:
									variable:
										variable_names:getAvailableUsables
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:result
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:result
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:List
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Usable
														parameters:
										typeName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Usable
													type_var:
														class:
															class_variable_names:List
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Usable
										variableName:
											name_var:
												variable:
													variable_names:usable
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
												parameters:
									conditional:
										FOR:for
									OPERATOR:: 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													body_call:
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getTargetCriteria
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:toTarget
															name_var:
																variable:
																	variable_names:satisfies
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:usable
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:usable
																	group:
																		name_var:
																			variable:
																				variable_names:result
																	DOT:.
															SEMICOLON:;
										body_element:
											NEWLINE:$\n
							inline:
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:toTarget
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:host
									typeName:
										type_var:
											class:
												class_variable_names:Entity
					class_declaration:
						objectType:
							CLASS:class 
						FORSLASH:/
						NEWLINE:$\n
						FORSLASH:/
						className:
							variable_names:Id
					NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:on
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
										EQUALS:=
										name_var:
											variable:
												variable_names:failed
									SEMICOLON:;
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:entitiesToTarget
									OPERATOR:: 
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:candidate
										typeName:
											type_var:
												class:
													class_variable_names:Entity
									conditional:
										FOR:for
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													FOR:for
												variable_declaration:
													variableName:
														name_var:
															variable:
																variable_names:usable
													typeName:
														type_var:
															class:
																class_variable_names:Usable
												OPERATOR:: 
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															conditional:
																IF:if
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:start
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										parameters:
																											COMMA:,
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															name_var:
																																variable:
																																	variable_names:usable
																														group:
																															name_var:
																																variable:
																																	variable_names:getRange
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:event
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:getHost
																																				parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	NAME:
																																		NUMBER:25
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:candidate
																											COMMA:,
																										NEW:new 
																										typeName:
																											type_var:
																												access_multi:
																													ACCESS:->
																													type_var:
																														class:
																															class_variable_names:Activities
																													type_var:
																														exact:
																															BACKSLASH:\
																															variable_names:ChasingEntity
																				DOT:.
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:event
																				group:
																					name_var:
																						variable:
																							variable_names:getHost
																					parameters:
																		SEMICOLON:;
																body_element:
																	body_return:
																		VOID:void
																		RETURN:return 
																		SEMICOLON:;
															body_statement:
																body_call:
																	DOT:.
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:usable
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getTargetCriteria
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:candidate
																		name_var:
																			variable:
																				variable_names:satisfies
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	variable_names:getUsables
																	BACKSLASH:\
															parameters:
										body_element:
											NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										typeName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Entity
													type_var:
														class:
															class_variable_names:List
										variableName:
											name_var:
												variable:
													variable_names:entitiesToTarget
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:getEntitiesWithin
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:20f
													group:
														name_var:
															variable:
																variable_names:event
													DOT:.
													group:
														name_var:
															variable:
																variable_names:getHost
														parameters:
													group:
														parameters:
														name_var:
															variable:
																variable_names:getLocation
													DOT:.
													DOT:.
									SEMICOLON:;
							inline:
								variable_declaration:
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													class:
														class_variable_names:Events
												type_var:
													exact:
														variable_names:Idle
														BACKSLASH:\
									variableName:
										name_var:
											variable:
												variable_names:event
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					SEMICOLON:;
					DOT:.
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					SEMICOLON:;
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:exploredPoints
						WEAK:~
						typeName:
							type_var:
								class:
									template_parameters:
										template_parameter:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Tiles
													SPECIAL_ACCESS:\>
													type_var:
														class:
															class_variable_names:EntryPoint
									class_variable_names:Set
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
										NEW:new 
										typeName:
											type_var:
												class:
													template_parameters:
														template_parameter:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:EntryPoint
																	type_var:
																		class:
																			class_variable_names:Tiles
																	SPECIAL_ACCESS:\>
													class_variable_names:HashSet
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Tile
									variableName:
										name_var:
											variable:
												variable_names:toTarget
							body_element:
								body_conditional:
									as_body:
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:getRange
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:host
																group:
																	name_var:
																		variable:
																			variable_names:usable
																DOT:.
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:Float
													variableName:
														name_var:
															variable:
																variable_names:potentialRange
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													OPERATOR:<= 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:potentialRange
													body_call:
														group:
															name_var:
																variable:
																	variable_names:distanceToTarget
													OPERATOR:&& 
													body_call:
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:toTarget
															name_var:
																variable:
																	variable_names:satisfies
														group:
															name_var:
																variable:
																	variable_names:usable
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getTargetCriteria
														DOT:.
														DOT:.
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:usable
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:result
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Usable
										variableName:
											name_var:
												variable:
													variable_names:usable
									conditional:
										FOR:for
									OPERATOR:: 
							methodName:
								name_var:
									variable:
										variable_names:getInRangeUsables
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:distanceToTarget
										typeName:
											type_var:
												class:
													class_variable_names:Double
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:host
													DOT:.
													group:
														parameters:
														name_var:
															variable:
																variable_names:getLocation
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:toTarget
														name_var:
															variable:
																variable_names:getDistanceTo
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:List
										type_var:
											class:
												class_variable_names:Usable
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:result
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:List
													type_var:
														class:
															class_variable_names:Usable
										variableName:
											name_var:
												variable:
													variable_names:result
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Usable
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:List
														parameters:
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getFurthestAvailableUsable
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Usable
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											variable:
												variable_names:host
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Tile
									variableName:
										name_var:
											variable:
												variable_names:toTarget
							body_element:
								body_conditional:
									conditional:
										FOR:for
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												body_statement:
													OPERATOR:> 
													OPERATOR:&& 
													body_call:
														DOT:.
														group:
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:toTarget
															name_var:
																variable:
																	variable_names:satisfies
														group:
															name_var:
																variable:
																	variable_names:usable
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getTargetCriteria
														DOT:.
													body_call:
														group:
															name_var:
																variable:
																	variable_names:longestRange
													body_call:
														group:
															name_var:
																variable:
																	variable_names:potentialRange
												conditional:
													IF:if
												as_body:
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																EQUALS:=
																name_var:
																	variable:
																		variable_names:result
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:usable
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_assignment:
																name_var:
																	variable:
																		variable_names:longestRange
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:potentialRange
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Float
													variableName:
														name_var:
															variable:
																variable_names:potentialRange
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:host
																	name_var:
																		variable:
																			variable_names:getRange
																group:
																	name_var:
																		variable:
																			variable_names:usable
																DOT:.
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
									OPERATOR:: 
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:getUsables
														BACKSLASH:\
												parameters:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:usable
										typeName:
											type_var:
												class:
													class_variable_names:Usable
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:result
									RETURN:return 
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:result
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:null
										typeName:
											type_var:
												class:
													class_variable_names:Usable
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:longestRange
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:-1f
										typeName:
											type_var:
												class:
													class_variable_names:Float
									SEMICOLON:;
		imports:
			IMPORT_CLASS:
				NEWLINE:$\n
				NEWLINE:$\n
				class_declaration:
					NEWLINE:$\n
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:hasAffinity
							inner:
								IN:>
							typeName:
								STATEMENT_TYPE:Statement
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:affinityName
									typeName:
										type_var:
											class:
												class_variable_names:String
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:defender
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:id
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:Affinities
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:affinityName
																					ACCESS:->
																		DOT:.
														name_var:
															variable:
																variable_names:has
													DOT:.
									SEMICOLON:;
					NEWLINE:$\n
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:name
																name_var:
																	variable:
																		variable_names:Affinities
																ACCESS:->
													group:
														name_var:
															variable:
																variable_names:id
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							typeName:
								STATEMENT_TYPE:Statement
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Affinities
					packageName:
						name_var:
							exact:
								WILD:affinities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					packageName:
						name_var:
							exact:
								WILD:mods
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
												name_var:
													variable:
														variable_names:getMethod
											group:
												name_var:
													variable:
														variable_names:Affinities
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:equals
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:affinityName
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:affinityClassName
																	as_body:
																		body_element:
																			body_return:
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								NEW:new 
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Affinities
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:affinityClassName
																											ACCESS:->
																								parameters:
																				RETURN:return 
																	conditional:
																		IF:if
												name_var:
													variable:
														variable_names:prependToBody
											DOT:.
											DOT:.
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								body_manipulate:
									type_var:
										class:
											class_variable_names:Affinities
									methodName:
										ADD:+=
									class_declaration:
										SEMICOLON:;
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:affinityName
														SEMICOLON:;
												methodName:
													name_var:
														variable:
															variable_names:getName
												typeName:
													type_var:
														class:
															class_variable_names:String
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
										variable_declaration:
											static:
												STA:@
											EQUALS:=
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Affinity
														type_var:
															class:
																class_variable_names:Id
														ACCESS:->
											variableName:
												name_var:
													exact:
														WILD:id
											method_argument:
												body_statement:
													body_call:
														group:
															parameters:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Affinity
																		type_var:
																			class:
																				class_variable_names:Id
																		ACCESS:->
										packageName:
											name_var:
												exact:
													WILD:entities
										NEWLINE:$\n
										packageName:
											name_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:packageName
										DOT:.
										NEWLINE:$\n
										DOT:.
										objectType:
											CLASS:class 
										packageName:
											name_var:
												exact:
													WILD:affinities
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Double
												methodName:
													name_var:
														variable:
															variable_names:modify
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:damage
														SEMICOLON:;
												body_element:
													body_conditional:
														conditional:
															IF:if
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		OPERATOR:/= 
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:weaknesses
												body_element:
													NEWLINE:$\n
												body_element:
													body_conditional:
														conditional:
															IF:if
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:damage
																		OPERATOR:*= 
																		body_call:
																			group:
																				name_var:
																					exact:
																						NAME:
																							NUMBER:2.0
														body_statement:
															body_call:
																group:
																	name_var:
																		as_method:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:strengths
												body_element:
													NEWLINE:$\n
												inline:
													COMMA:,
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Double
														variableName:
															name_var:
																exact:
																	WILD:damage
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:defender
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
										DOT:.
										NEWLINE:$\n
										parentName:
											type_var:
												class:
													class_variable_names:Affinity
										className:
											variable_names:affinityClassName
										NEWLINE:$\n
										packageName:
											name_var:
												exact:
													WILD:mods
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															STATEMENT_TYPE:Statement
														NEW:new 
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
										variableName:
											name_var:
												variable:
													variable_names:strengths
										typeName:
											STATEMENT_TYPE:Statement
							body_element:
								body_manipulate:
									COLON::
									variableName:
										NAME:element
									tokenInstance:
										tokenName:
											NAME:weakness_name
										body_element:
											body_line:
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:hasAffinity
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											CAMEL:^
																											variable_names:element
														group:
															name_var:
																variable:
																	variable_names:weaknesses
												SEMICOLON:;
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									name_var:
										variable:
											variable_names:declarationToken
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						variable:
																							variable_names:declarationToken
																					name_var:
																						exact:
																							WILD:affinityName
																					ACCESS:->
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:affinityName
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														typeName:
															STATEMENT_TYPE:Statement
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:||
										variableName:
											name_var:
												variable:
													variable_names:weaknesses
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:affinityClassName
										typeName:
											type_var:
												class:
													class_variable_names:String
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:affinityName
																CAMEL:^
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									COLON::
									tokenInstance:
										tokenName:
											NAME:strength_name
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:strengths
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:element
																											CAMEL:^
																				name_var:
																					exact:
																						variable_names:hasAffinity
																						BACKSLASH:\
														DOT:.
										body_element:
											NEWLINE:$\n
					method_declaration:
						methodDefinition:
							static:
								STA:@
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											exact:
												WILD:affinityName
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Affinity
							methodName:
								name_var:
									variable:
										variable_names:create
					NEWLINE:$\n
				class_declaration:
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
										type_var:
											class:
												class_variable_names:Affinity
							methodName:
								name_var:
									variable:
										variable_names:getId
							inline:
					DOT:.
					NEWLINE:$\n
					className:
						variable_names:Affinity
					NEWLINE:$\n
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:mods
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0.0
									SEMICOLON:;
									RETURN:return 
							typeName:
								type_var:
									class:
										class_variable_names:Double
							inline:
								COMMA:,
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Double
									variableName:
										name_var:
											exact:
												WILD:damage
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:defender
							methodName:
								name_var:
									variable:
										variable_names:modify
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:String
						variableName:
							name_var:
								exact:
									WILD:name
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					parentName:
						type_var:
							exact:
								BACKSLASH:\
								variable_names:Object
					class_declaration:
						DOT:.
						className:
							variable_names:Id
						DOT:.
						objectType:
							CLASS:class 
						packageName:
							name_var:
								exact:
									WILD:entities
						packageName:
							name_var:
								exact:
									WILD:affinities
						DOT:.
						packageName:
							name_var:
								exact:
									WILD:mods
						packageName:
							name_var:
								as_string:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:packageName
						NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					packageName:
						name_var:
							exact:
								WILD:affinities
		imports:
			IMPORT_CLASS:
				class_declaration:
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Activity
						variableName:
							name_var:
								variable:
									variable_names:currentActivity
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										OPERATOR:!= 
										body_call:
											group:
												name_var:
													variable:
														variable_names:currentActivity
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:currentActivity
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																				NEW:new 
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								exact:
																									variable_names:Tick
																									BACKSLASH:\
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
												SEMICOLON:;
										body_element:
											body_return:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:true
												RETURN:return 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:on
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:this
																				typeName:
																					type_var:
																						access_multi:
																							type_var:
																								class:
																									class_variable_names:Events
																							ACCESS:->
																							type_var:
																								exact:
																									BACKSLASH:\
																									variable_names:StartQuest
																				NEW:new 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:status
										body_call:
											group:
												name_var:
													variable:
														variable_names:UNSTARTED
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Activity
									variableName:
										name_var:
											variable:
												variable_names:activity
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								COMMA:,
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					SEMICOLON:;
					NEWLINE:$\n
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					NEWLINE:$\n
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:UNSTARTED
						variableName:
							name_var:
								variable:
									variable_names:status
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						WEAK:~
					NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:IN_PROGRESS
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						EQUALS:=
						static:
							STA:@
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					objectType:
						CLASS:class 
					class_declaration:
						objectType:
							CLASS:class 
						NEWLINE:$\n
						NEWLINE:$\n
						NEWLINE:$\n
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Target
									type_var:
										class:
											class_variable_names:Criteria
									ACCESS:->
						method_declaration:
							methodDefinition:
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								body_element:
									body_return:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
										SEMICOLON:;
										RETURN:return 
								inline:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:candidate
										typeName:
											type_var:
												class:
													class_variable_names:Tile
								methodName:
									name_var:
										variable:
											variable_names:satisfies
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
						FORSLASH:/
						method_declaration:
							methodDefinition:
								body_element:
									body_return:
										RETURN:return 
										SEMICOLON:;
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:false
								inline:
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:user
										typeName:
											type_var:
												class:
													class_variable_names:Entity
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
								methodName:
									name_var:
										variable:
											variable_names:satisfies
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
						className:
							variable_names:TargetCriteria
						WEAK:~
						FORSLASH:/
					DOT:.
					SEMICOLON:;
					NEWLINE:$\n
					DOT:.
					SEMICOLON:;
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newIndex
													EQUALS:=
													name_var:
														variable:
															variable_names:currentActivityIndex
										body_element:
											body_line:
												variable_assignment:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:activities
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:newIndex
																	name_var:
																		variable:
																			variable_names:get
																DOT:.
													EQUALS:=
													name_var:
														variable:
															variable_names:currentActivity
												SEMICOLON:;
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newIndex
										OPERATOR:< 
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											group:
												parameters:
												name_var:
													variable:
														variable_names:size
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newIndex
									typeName:
										type_var:
											class:
												class_variable_names:Integer
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:advanceTo
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												variable_assignment:
													name_var:
														variable:
															variable_names:status
													EQUALS:=
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:SUCCESS
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
					SEMICOLON:;
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:2
						variableName:
							name_var:
								variable:
									variable_names:FAIL
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						static:
							STA:@
					NEWLINE:$\n
					variable_declaration:
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Activity
									ACCESS:->
									type_var:
										class:
											class_variable_names:List
						variableName:
							name_var:
								variable:
									variable_names:activities
						WEAK:~
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										parameters:
										typeName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Activity
													type_var:
														class:
															class_variable_names:List
													ACCESS:->
										NEW:new 
					packageName:
						name_var:
							exact:
								WILD:behaviours
					DOT:.
					parentName:
						type_var:
							class:
								class_variable_names:Object
					class_declaration:
						NEWLINE:$\n
						class_declaration:
							className:
								variable_names:Fail
							FORSLASH:/
							NEWLINE:$\n
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:host
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								typeName:
									type_var:
										class:
											class_variable_names:Quest
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									inline:
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:event
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															exact:
																variable_names:Fail
																BACKSLASH:\
														type_var:
															class:
																class_variable_names:Events
									methodName:
										name_var:
											variable:
												variable_names:listen
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:host
													DOT:.
													group:
														name_var:
															variable:
																variable_names:on
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:(Events.Fail)event
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
							FORSLASH:/
							NEWLINE:$\n
							objectType:
								CLASS:class 
							SEMICOLON:;
							parentName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Listener
										ACCESS:->
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										type_var:
											class:
												class_variable_names:Fail
						className:
							variable_names:Listeners
						objectType:
							CLASS:class 
						NEWLINE:$\n
						class_declaration:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:nextIndex
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:-1
								typeName:
									type_var:
										class:
											class_variable_names:Integer
								EQUALS:=
							SEMICOLON:;
							SEMICOLON:;
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
								variableName:
									name_var:
										variable:
											variable_names:host
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Quest
							parentName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Events
										ACCESS:->
										type_var:
											class:
												class_variable_names:Success
										type_var:
											class:
												class_variable_names:Listener
							FORSLASH:/
							NEWLINE:$\n
							NEWLINE:$\n
							className:
								variable_names:Success
							FORSLASH:/
							NEWLINE:$\n
							objectType:
								CLASS:class 
							NEWLINE:$\n
							method_declaration:
								methodDefinition:
									typeName:
										type_var:
											class:
												class_variable_names:void
									body_element:
										NEWLINE:$\n
									methodName:
										name_var:
											variable:
												variable_names:listen
									body_element:
										NEWLINE:$\n
									inline:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:Events
														type_var:
															exact:
																variable_names:Success
																BACKSLASH:\
											variableName:
												name_var:
													variable:
														variable_names:event
									body_element:
										body_line:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:advanceTo
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:nextIndex
													DOT:.
													group:
														name_var:
															variable:
																variable_names:host
											SEMICOLON:;
						FORSLASH:/
						NEWLINE:$\n
						FORSLASH:/
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0f
									SEMICOLON:;
							methodName:
								name_var:
									variable:
										variable_names:getRange
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:entities
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					SEMICOLON:;
					NEWLINE:$\n
					class_declaration:
						FORSLASH:/
						NEWLINE:$\n
						parentName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
									type_var:
										class:
											class_variable_names:Usable
						className:
							variable_names:Id
						objectType:
							CLASS:class 
						FORSLASH:/
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:activities
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newActivity
												name_var:
													variable:
														variable_names:add
											DOT:.
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newActivity
											DOT:.
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					exact:
																						variable_names:Fail
																						BACKSLASH:\
																				type_var:
																					class:
																						class_variable_names:Listeners
																				type_var:
																					class:
																						class_variable_names:Quest
																				ACCESS:->
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:newActivity
									typeName:
										type_var:
											class:
												class_variable_names:Activity
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:add
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:add
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:this
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:activities
																					group:
																						name_var:
																							variable:
																								variable_names:size
																						parameters:
																					DOT:.
																		COMMA:,
																	NEW:new 
																	typeName:
																		type_var:
																			access_multi:
																				ACCESS:->
																				type_var:
																					class:
																						class_variable_names:Listeners
																				ACCESS:->
																				type_var:
																					exact:
																						variable_names:Success
																						BACKSLASH:\
																				type_var:
																					class:
																						class_variable_names:Quest
											group:
												name_var:
													variable:
														variable_names:newActivity
											DOT:.
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:1
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:SUCCESS
					SEMICOLON:;
					className:
						variable_names:Quest
					packageName:
						name_var:
							exact:
								WILD:quests
					variable_declaration:
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						EQUALS:=
						static:
							STA:@
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:UNSTARTED
					variable_declaration:
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						variableName:
							name_var:
								variable:
									variable_names:currentActivityIndex
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						WEAK:~
						EQUALS:=
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:canChase
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							inline:
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Criteria
										type_var:
											class:
												class_variable_names:Target
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getTargetCriteria
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													NEW:new 
													parameters:
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	class:
																		class_variable_names:TargetCriteria
																type_var:
																	class:
																		class_variable_names:Quest
					method_declaration:
						methodDefinition:
							inline:
							typeName:
								type_var:
									access_multi:
										type_var:
											class:
												class_variable_names:Quest
										ACCESS:->
										type_var:
											class:
												class_variable_names:Id
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
				NEWLINE:$\n
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:entities
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:quests
					className:
						variable_names:Quests
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:behaviours
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										OPERATOR:->*
										body_call:
											group:
												name_var:
													exact:
														WILD:fulfill
											DOT:.
											group:
												parameters:
													method_argument:
														body_entries:
															body_element:
																body_return:
																	SEMICOLON:;
																	RETURN:return 
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:true
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
												name_var:
													variable:
														variable_names:prependToBody
										body_call:
											group:
												name_var:
													access:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														ACCESS:->
														name_var:
															variable:
																variable_names:Quests
														ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:typeDeclaration
							body_element:
								body_manipulate:
									class_declaration:
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:fulfill
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:destinationReached
														typeName:
															type_var:
																class:
																	class_variable_names:Area
													COMMA:,
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:quester
												body_element:
													NEWLINE:$\n
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:generateDestinations
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:quester
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
												typeName:
													type_var:
														class:
															class_variable_names:void
										NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										className:
											variable_names:questName
										parentName:
											type_var:
												class:
													class_variable_names:Quest
										FORSLASH:/
									type_var:
										class:
											class_variable_names:Quests
									methodName:
										ADD:+=
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											body_line:
												variable_declaration:
													typeName:
														STATEMENT_TYPE:Statement
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:tileClause
													method_argument:
														body_statement:
															body_call:
																group:
																	NEW:new 
																	parameters:
																	typeName:
																		STATEMENT_TYPE:Statement
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												variable_declaration:
													WEAK:~
													method_argument:
														body_statement:
															NEWLINE:$\n
															body_call:
																NEWLINE:$\n
																group:
																	parameters:
																	typeName:
																		type_var:
																			class:
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Area
																				class_variable_names:HashSet
																	NEW:new 
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					PLUS:+
																					name_var:
																						variable:
																							variable_names:tileCount
																					name_var:
																						exact:
																							WILD:toVisit
													typeName:
														type_var:
															class:
																class_variable_names:Set
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Area
													EQUALS:=
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														type_var:
															class:
																class_variable_names:Quests
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:quest_destination
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													BACKSLASH:\
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileCount
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													COLON::
													body_element:
														body_line:
															body_statement:
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	group:
																		name_var:
																			variable:
																				variable_names:set
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:negatedOperator
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_line:
																							SEMICOLON:;
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														DOT:.
																														group:
																															name_var:
																																exact:
																																	WILD:quester
																														DOT:.
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			DOT:.
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												variable:
																																													variable_names:mapName
																																						name_var:
																																							variable:
																																								variable_names:Environments
																																						ACCESS:->
																															name_var:
																																variable:
																																	variable_names:getEnvironment
																														group:
																															parameters:
																															name_var:
																																variable:
																																	variable_names:getLocation
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					access:
																																						name_var:
																																							as_string:
																																								body_statement:
																																									body_call:
																																										group:
																																											name_var:
																																												concat:
																																													PLUS:+
																																													name_var:
																																														variable:
																																															variable_names:tileName
																																													name_var:
																																														variable:
																																															variable_names:mapName
																																						ACCESS:->
																																						name_var:
																																							variable:
																																								variable_names:Tiles
																																			group:
																																				name_var:
																																					exact:
																																						WILD:id
																																			DOT:.
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					exact:
																																						WILD:quester
																																			DOT:.
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:getLocation
																																				parameters:
																															name_var:
																																variable:
																																	variable_names:getNodeFromId
																														DOT:.
																										name_var:
																											variable:
																												variable_names:add
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	name_var:
																																		exact:
																																			WILD:toVisited
																																	PLUS:+
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																					body_element:
																						NEWLINE:$\n
																	group:
																		name_var:
																			exact:
																				WILD:generateDestinations
																	DOT:.
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tileClause
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:tileNameClause
																	DOT:.
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:tileName
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											name_var:
																												exact:
																													WILD:tileName
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:atom
																			DOT:.
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																					COMMA:,
																				name_var:
																					variable:
																						variable_names:replace
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_declaration:
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																ACCESS:->
																																name_var:
																																	variable:
																																		variable_names:atom
																																name_var:
																																	exact:
																																		WILD:ORDINAL
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:negateOperator
																variableName:
																	name_var:
																		variable:
																			variable_names:negatedOperator
															SEMICOLON:;
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	STATEMENT_TYPE:Statement
																variableName:
																	name_var:
																		variable:
																			variable_names:tileNameClause
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				typeName:
																					STATEMENT_TYPE:Statement
																				parameters:
																				NEW:new 
																EQUALS:=
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														access:
																															ACCESS:->
																															name_var:
																																variable:
																																	variable_names:atom
																															name_var:
																																exact:
																																	WILD:INTEGER
																		name_var:
																			variable:
																				variable_names:add
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
													tokenName:
														NAME:quest_tile_description
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																variableName:
																	name_var:
																		variable:
																			variable_names:mapName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				parameters:
																					COMMA:,
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD: 
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:
																				name_var:
																					variable:
																						variable_names:replace
																			group:
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										access:
																											ACCESS:->
																											name_var:
																												variable:
																													variable_names:atom
																											name_var:
																												exact:
																													WILD:mapName
																			DOT:.
																typeName:
																	type_var:
																		class:
																			class_variable_names:String
																EQUALS:=
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																OPERATOR:->*
																body_call:
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				body_entries:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_conditional:
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									DOT:.
																									group:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																concat:
																																	PLUS:+
																																	name_var:
																																		exact:
																																			WILD:toVisit
																																	name_var:
																																		variable:
																																			variable_names:tileCount
																									group:
																										name_var:
																											variable:
																												variable_names:contains
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																exact:
																																	WILD:destinationReached
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_line:
																										SEMICOLON:;
																										body_statement:
																											body_call:
																												group:
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			exact:
																																				WILD:destinationReached
																													name_var:
																														variable:
																															variable_names:add
																												group:
																													name_var:
																														as_string:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			concat:
																																				name_var:
																																					exact:
																																						WILD:visited
																																				name_var:
																																					variable:
																																						variable_names:tileCount
																																				PLUS:+
																												DOT:.
																		name_var:
																			variable:
																				variable_names:prependToBody
																	group:
																		name_var:
																			exact:
																				WILD:fulfill
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Quests
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:tileNameClause
																	DOT:.
																	group:
																		parameters:
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														concat:
																															name_var:
																																exact:
																																	WILD:visited
																															name_var:
																																variable:
																																	variable_names:tileCount
																															PLUS:+
																							group:
																								parameters:
																								name_var:
																									variable:
																										variable_names:size
																		name_var:
																			variable:
																				variable_names:add
												COLON::
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileClause
														group:
															name_var:
																variable:
																	variable_names:brace
															parameters:
														DOT:.
												SEMICOLON:;
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileClause
														group:
															name_var:
																variable:
																	variable_names:set
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:||
														DOT:.
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:tileClauses
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:tileClause
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:questName
														type_var:
															class:
																class_variable_names:Quests
												variable_declaration:
													WEAK:~
													EQUALS:=
													typeName:
														type_var:
															class:
																template_parameters:
																	template_parameter:
																		type_var:
																			class:
																				class_variable_names:Area
																class_variable_names:Set
													method_argument:
														body_statement:
															body_call:
																NEWLINE:$\n
																group:
																	parameters:
																	typeName:
																		type_var:
																			class:
																				class_variable_names:HashSet
																				template_parameters:
																					template_parameter:
																						type_var:
																							class:
																								class_variable_names:Area
																	NEW:new 
															NEWLINE:$\n
													variableName:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				concat:
																					PLUS:+
																					name_var:
																						exact:
																							WILD:visited
																					name_var:
																						variable:
																							variable_names:tileCount
												methodName:
													ADD:+=
									variableName:
										NAME:element
									name_var:
										variable:
											variable_names:declarationToken
									COLON::
							inner:
								IN:>
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:String
										variableName:
											name_var:
												variable:
													variable_names:questName
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					name_var:
																						exact:
																							WILD:questName
																					name_var:
																						variable:
																							variable_names:declarationToken
																					ACCESS:->
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										typeName:
											type_var:
												class:
													class_variable_names:Integer
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:tileCount
										WEAK:~
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																NAME:
																	NUMBER:0
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_line:
									variable_declaration:
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				access:
																					ACCESS:->
																					name_var:
																						variable:
																							variable_names:declarationToken
																					name_var:
																						exact:
																							WILD:description
										variableName:
											name_var:
												variable:
													variable_names:description
										EQUALS:=
										typeName:
											type_var:
												class:
													class_variable_names:String
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									COLON::
									tokenInstance:
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												tokenInstance:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													tokenName:
														NAME:body_element
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:add
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								COMMA:,
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:eventContext
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:atom
																							name_var:
																								exact:
																									variable_names:getBodyElement
																									BACKSLASH:\
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:eventBody
															SEMICOLON:;
													COLON::
												COLON::
												variableName:
													NAME:atom
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													EQUALS:=
													variableName:
														name_var:
															variable:
																variable_names:eventContext
													typeName:
														CONTEXT_TYPE:Context 
													method_argument:
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:Events
																group:
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:eventName
																		COMMA:,
																		COMMA:,
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								name_var:
																									variable:
																										variable_names:Quests
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:questName
																								ACCESS:->
																		method_argument:
																			body_entries:
																	name_var:
																		variable:
																			variable_names:addToEventMethod
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventBody
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Quests
																						ACCESS:->
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:questName
															name_var:
																variable:
																	variable_names:addToEventMethod
														group:
															name_var:
																variable:
																	variable_names:Events
														DOT:.
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															parameters:
																method_argument:
																	as_statement:
																		body_element:
																			body_line:
																				body_statement:
																					body_call:
																						group:
																							parameters:
																								method_argument:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													exact:
																														WILD:event
																							name_var:
																								variable:
																									variable_names:on
																						group:
																							name_var:
																								variable:
																									variable_names:super
																						DOT:.
																				SEMICOLON:;
															name_var:
																variable:
																	variable_names:add
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:eventBody
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
													body_call:
														group:
															name_var:
																exact:
																	WILD:start
													OPERATOR:== 
													OPERATOR:|| 
													body_call:
														group:
															name_var:
																exact:
																	WILD:load
													OPERATOR:== 
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:startQuest
																name_var:
																	variable:
																		variable_names:eventName
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												variable_declaration:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							access:
																								ACCESS:->
																								name_var:
																									exact:
																										WILD:event_names
																								name_var:
																									variable:
																										variable_names:element
													WEAK:~
													EQUALS:=
													typeName:
														type_var:
															class:
																class_variable_names:String
													variableName:
														name_var:
															variable:
																variable_names:eventName
										body_element:
											body_line:
												variable_declaration:
													EQUALS:=
													typeName:
														BODY_TYPE:Body 
													method_argument:
														body_statement:
															body_call:
																group:
																	typeName:
																		BODY_TYPE:Body 
																	parameters:
																	NEW:new 
													variableName:
														name_var:
															variable:
																variable_names:eventBody
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:event
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:tileClauses
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:&&
												name_var:
													variable:
														variable_names:set
											DOT:.
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														NEW:new 
														parameters:
														typeName:
															STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:tileClauses
							body_element:
								body_conditional:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:tileClauses
											group:
												name_var:
													variable:
														variable_names:size
												parameters:
											DOT:.
										OPERATOR:> 
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:Quests
													OPERATOR:->*
													body_call:
														group:
															name_var:
																exact:
																	WILD:fulfill
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:prependToBody
															parameters:
																method_argument:
																	body_entries:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_conditional:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_method:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:tileClauses
																				as_body:
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						NEWLINE:$\n
																					body_element:
																						body_return:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:false
																							RETURN:return 
																							SEMICOLON:;
																				conditional:
																					IF:if
																		body_element:
																			NEWLINE:$\n
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
					objectType:
						CLASS:class 
					DOT:.
					DOT:.
					method_declaration:
						methodDefinition:
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Events
											DOT:.
											group:
												name_var:
													variable:
														variable_names:addToEventMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:startQuest
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													COMMA:,
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:status
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:FAIL
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	conditional:
																		ELSE:else
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_conditional:
																	conditional:
																		IF:if
																	as_body:
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:currentActivity
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:activities
																								DOT:.
																								group:
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															exact:
																																NAME:
																																	NUMBER:0
																									name_var:
																										variable:
																											variable_names:get
																					EQUALS:=
																				SEMICOLON:;
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:status
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:IN_PROGRESS
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			body_line:
																				SEMICOLON:;
																				variable_assignment:
																					name_var:
																						variable:
																							variable_names:currentActivityIndex
																					EQUALS:=
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:0
																		body_element:
																			NEWLINE:$\n
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		OPERATOR:==
																		body_call:
																			group:
																				name_var:
																					exact:
																						WILD:activities
																			DOT:.
																			group:
																				parameters:
																				name_var:
																					variable:
																						variable_names:isEmpty
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:false
													COMMA:,
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											DOT:.
											group:
												parameters:
													COMMA:,
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:fail
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	variable_assignment:
																		EQUALS:=
																		name_var:
																			variable:
																				variable_names:status
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:FAIL
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Quest
													COMMA:,
												name_var:
													variable:
														variable_names:addToEventMethod
											group:
												name_var:
													variable:
														variable_names:Events
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							inner:
								IN:>
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
					DOT:.
					NEWLINE:$\n
				NEWLINE:$\n
		class_declaration:
			objectType:
				CLASS:class 
			NEWLINE:$\n
			DOT:.
			variable_declaration:
				EQUALS:=
				variableName:
					name_var:
						variable:
							variable_names:value
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									exact:
										NAME:
											NUMBER:0
				typeName:
					type_var:
						class:
							class_variable_names:Integer
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:increase
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:amount
							typeName:
								type_var:
									class:
										class_variable_names:Integer
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:amount
								OPERATOR:+= 
								BACKSLASH:\
								body_call:
									group:
										name_var:
											variable:
												variable_names:value
							SEMICOLON:;
					typeName:
						type_var:
							class:
								class_variable_names:void
			packageName:
				name_var:
					exact:
						WILD:misc
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			method_declaration:
				methodDefinition:
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							variableName:
								name_var:
									variable:
										variable_names:newValue
					body_element:
						body_line:
							variable_assignment:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:newValue
								EQUALS:=
								name_var:
									variable:
										variable_names:value
							SEMICOLON:;
					methodName:
						name_var:
							variable:
								variable_names:setValue
					body_element:
						NEWLINE:$\n
			className:
				variable_names:Int
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
				imports:
					IMPORT_CLASS:
				class_declaration:
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											STATEMENT_TYPE:Statement
										variableName:
											name_var:
												variable:
													variable_names:description
										method_argument:
											body_statement:
												body_call:
													group:
														typeName:
															STATEMENT_TYPE:Statement
														NEW:new 
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:+
										EQUALS:=
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									SEMICOLON:;
									variable_declaration:
										variableName:
											name_var:
												variable:
													variable_names:skillName
										typeName:
											type_var:
												class:
													class_variable_names:String
										EQUALS:=
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															access:
																name_var:
																	variable:
																		variable_names:declarationToken
																name_var:
																	exact:
																		WILD:skillName
																CAMEL:^
																ACCESS:->
							body_element:
								body_manipulate:
									tokenInstance:
										body_element:
											NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										tokenName:
											NAME:variable_header
										body_element:
											body_line:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	BACKSLASH:\
																	variable_names:addVariableHeader
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						name_var:
																							variable:
																								variable_names:Skills
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																						ACCESS:->
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:element
												SEMICOLON:;
									variableName:
										NAME:element
									tokenInstance:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												variableName:
													NAME:atom
												tokenInstance:
													tokenName:
														NAME:boolean_statement
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					variable:
																						variable_names:TargetCriteria
																				ACCESS:->
																				ACCESS:->
																				name_var:
																					as_string:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																				name_var:
																					variable:
																						variable_names:Skills
																				ACCESS:->
																OPERATOR:->*
																body_call:
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:prependToBody
																		parameters:
																			method_argument:
																				as_statement:
																					body_element:
																						body_conditional:
																							as_body:
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									NEWLINE:$\n
																								body_element:
																									body_return:
																										RETURN:return 
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:false
																										SEMICOLON:;
																							conditional:
																								IF:if
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											as_method:
																												body_statement:
																													body_call:
																														group:
																															parameters:
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:canUseContext
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:true
																																COMMA:,
																																method_argument:
																																	body_statement:
																																		body_call:
																																			group:
																																				name_var:
																																					variable:
																																						variable_names:atom
																																COMMA:,
																															name_var:
																																exact:
																																	variable_names:getBooleanStatement
																																	BACKSLASH:\
																	group:
																		name_var:
																			exact:
																				WILD:satisfies[Entity]
													COLON::
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	CONTEXT_TYPE:Context 
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:canUseContext
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:TargetCriteria
																						name_var:
																							variable:
																								variable_names:Skills
																						name_var:
																							as_string:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:skillName
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:getContext
																				parameters:
																			group:
																				name_var:
																					variable:
																						variable_names:getMethod
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:satisfies[Entity]
																			DOT:.
													body_element:
														NEWLINE:$\n
												name_var:
													variable:
														variable_names:element
												COLON::
										tokenName:
											NAME:require
										COLON::
										NEWLINE:$\n
									tokenInstance:
										NEWLINE:$\n
										body_element:
											body_manipulate:
												COLON::
												name_var:
													variable:
														variable_names:element
												variableName:
													NAME:atom
												tokenInstance:
													body_element:
														body_manipulate:
															body:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				as_method:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getBodyElement
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:useContext
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Skills
																	type_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:skillName
																	ACCESS:->
																	ACCESS:->
																	as_method:
																		ACCESS:->
																		name_var:
																			exact:
																				WILD:use
																		AS_METHOD_NAME:*
															methodName:
																ADD:+=
													COLON::
													tokenName:
														NAME:body_element
													body_element:
														NEWLINE:$\n
													NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:use
									tokenInstance:
										NEWLINE:$\n
										COLON::
										body_element:
											body_manipulate:
												name_var:
													variable:
														variable_names:element
												COLON::
												tokenInstance:
													tokenName:
														NAME:option
													body_element:
														NEWLINE:$\n
													body_element:
														body_conditional:
															body_statement:
																body_call:
																	group:
																		name_var:
																			access:
																				name_var:
																					exact:
																						WILD:boolean_statement
																				name_var:
																					variable:
																						variable_names:atom
																				ACCESS:->
																OPERATOR:!= 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:null
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_line:
																		variable_declaration:
																			EQUALS:=
																			method_argument:
																				as_statement:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									as_method:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														exact:
																															variable_names:getBooleanStatement
																															BACKSLASH:\
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			variable:
																																				variable_names:useContext
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			access:
																																				name_var:
																																					exact:
																																						WILD:boolean_statement
																																				name_var:
																																					variable:
																																						variable_names:atom
																																				ACCESS:->
																			variableName:
																				name_var:
																					variable:
																						variable_names:bool
																			typeName:
																				STATEMENT_TYPE:Statement
																		SEMICOLON:;
																body_element:
																	body_conditional:
																		conditional:
																			ELSE:else
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													as_body:
																														body_element:
																															body_conditional:
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																																as_body:
																																	body_element:
																																		body_return:
																																			SEMICOLON:;
																																			RETURN:return 
																																			VOID:void
																																conditional:
																																	IF:if
																																	ELSE:else
																							DOT:.
																							group:
																								name_var:
																									exact:
																										WILD:use
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		as_body:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					variable_assignment:
																						name_var:
																							variable:
																								variable_names:isFirst
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						EQUALS:=
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									access:
																										ACCESS:->
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:bool
																													conditional:
																														IF:if
																													as_body:
																														body_element:
																															body_conditional:
																																as_body:
																																	body_element:
																																		body_return:
																																			VOID:void
																																			SEMICOLON:;
																																			RETURN:return 
																																conditional:
																																	IF:if
																																body_statement:
																																	body_call:
																																		group:
																																			name_var:
																																				as_method:
																																					body_statement:
																																						body_call:
																																							group:
																																								name_var:
																																									variable:
																																										variable_names:chance
																							DOT:.
																			body_element:
																				NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
															conditional:
																IF:if
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															variable_declaration:
																typeName:
																	STATEMENT_TYPE:Statement
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_method:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											exact:
																												BACKSLASH:\
																												variable_names:getChance
																										parameters:
																											method_argument:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																access:
																																	name_var:
																																		exact:
																																			WILD:has_chance
																																	ACCESS:->
																																	name_var:
																																		variable:
																																			variable_names:atom
																EQUALS:=
																variableName:
																	name_var:
																		variable:
																			variable_names:chance
													COLON::
													body_element:
														body_conditional:
															conditional:
																ELSE:else
															as_body:
																body_element:
																	NEWLINE:$\n
																body_element:
																	NEWLINE:$\n
																body_element:
																	body_conditional:
																		conditional:
																			IF:if
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:isFirst
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									access:
																										name_var:
																											variable:
																												variable_names:Skills
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										ACCESS:->
																										ACCESS:->
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							group:
																								name_var:
																									variable:
																										variable_names:prependToBody
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														IF:if
																													as_body:
																														body_element:
																															body_return:
																																RETURN:return 
																																SEMICOLON:;
																																VOID:void
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																							DOT:.
																			body_element:
																				body_line:
																					variable_assignment:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:false
																						EQUALS:=
																						name_var:
																							variable:
																								variable_names:isFirst
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				NEWLINE:$\n
																body_element:
																	body_conditional:
																		as_body:
																			body_element:
																				NEWLINE:$\n
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										WILD:use
																							DOT:.
																							group:
																								parameters:
																									method_argument:
																										as_statement:
																											body_element:
																												body_conditional:
																													conditional:
																														ELSE:else
																														IF:if
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	as_method:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:chance
																													as_body:
																														body_element:
																															body_return:
																																RETURN:return 
																																SEMICOLON:;
																																VOID:void
																								name_var:
																									variable:
																										variable_names:prependToBody
																						OPERATOR:->*
																						body_call:
																							group:
																								name_var:
																									access:
																										name_var:
																											as_string:
																												body_statement:
																													body_call:
																														group:
																															name_var:
																																variable:
																																	variable_names:skillName
																										name_var:
																											variable:
																												variable_names:Skills
																										ACCESS:->
																										ACCESS:->
																					SEMICOLON:;
																			body_element:
																				NEWLINE:$\n
																		conditional:
																			ELSE:else
																body_element:
																	NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												variableName:
													NAME:atom
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:miss
									name_var:
										variable:
											variable_names:declarationToken
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										tokenName:
											NAME:cooldown
										NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_manipulate:
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															variable_assignment:
																name_var:
																	exact:
																		WILD:cost
																EQUALS:=
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								group:
																									parameters:
																										COMMA:,
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																name_var:
																																	exact:
																																		WILD:stat_range
																																name_var:
																																	variable:
																																		variable_names:element
																																ACCESS:->
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:useContext
																									name_var:
																										variable:
																											variable_names:getStatRange
																								DOT:.
															SEMICOLON:;
												type_var:
													access_multi:
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														ACCESS:->
														type_var:
															class:
																class_variable_names:Skills
														ACCESS:->
														as_method:
															ACCESS:->
															AS_METHOD_NAME:*
									COLON::
									tokenInstance:
										body_element:
											NEWLINE:$\n
										NEWLINE:$\n
										COLON::
										body_element:
											body_manipulate:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Skills
														as_method:
															AS_METHOD_NAME:*
															ACCESS:->
														ACCESS:->
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														ACCESS:->
												methodName:
													ADD:+=
												body:
													body_element:
														body_line:
															variable_assignment:
																EQUALS:=
																name_var:
																	exact:
																		WILD:range
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					as_method:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:Entity
																								DOT:.
																								group:
																									name_var:
																										variable:
																											variable_names:getStatRange
																									parameters:
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															access:
																																name_var:
																																	exact:
																																		WILD:stat_range
																																name_var:
																																	variable:
																																		variable_names:element
																																ACCESS:->
																										COMMA:,
																										method_argument:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:useContext
															SEMICOLON:;
										tokenName:
											NAME:range
										body_element:
											NEWLINE:$\n
							body_element:
								body_manipulate:
									class_declaration:
										NEWLINE:$\n
										NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Skill
														ACCESS:->
														type_var:
															class:
																class_variable_names:Id
											static:
												STA:@
											variableName:
												name_var:
													exact:
														WILD:id
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															NEW:new 
															parameters:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:Id
																		type_var:
																			class:
																				class_variable_names:Skill
										FORSLASH:/
										NEWLINE:$\n
										className:
											variable_names:skillName
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_method:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:description
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getDescription
												inline:
										parentName:
											type_var:
												class:
													class_variable_names:Skill
										SEMICOLON:;
										NEWLINE:$\n
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												inline:
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Id
															type_var:
																class:
																	class_variable_names:Skill
															ACCESS:->
												methodName:
													name_var:
														variable:
															variable_names:getId
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:id
														RETURN:return 
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:getName
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:String
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_quote:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:skillName
												inline:
												body_element:
													NEWLINE:$\n
										FORSLASH:/
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:victim
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:user
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
													COMMA:,
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:use
												typeName:
													type_var:
														class:
															class_variable_names:void
									methodName:
										ADD:+=
									type_var:
										class:
											class_variable_names:Skills
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									name_var:
										variable:
											variable_names:declarationToken
									variableName:
										NAME:element
									tokenInstance:
										COLON::
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													body_call:
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:add
															parameters:
																method_argument:
																	as_statement:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_quote:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
														group:
															name_var:
																variable:
																	variable_names:description
										tokenName:
											NAME:description
									COLON::
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_declaration:
										typeName:
											CONTEXT_TYPE:Context 
										EQUALS:=
										variableName:
											name_var:
												variable:
													variable_names:useContext
										method_argument:
											body_statement:
												body_call:
													DOT:.
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:use
														name_var:
															variable:
																variable_names:getMethod
													DOT:.
													group:
														name_var:
															access:
																name_var:
																	as_string:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:skillName
																name_var:
																	variable:
																		variable_names:Skills
																ACCESS:->
													group:
														parameters:
														name_var:
															variable:
																variable_names:getContext
									SEMICOLON:;
							body_element:
								body_line:
									SEMICOLON:;
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:Skills
											DOT:.
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		exact:
																			WILD:create
											DOT:.
											group:
												parameters:
													method_argument:
														as_statement:
															body_element:
																body_conditional:
																	as_body:
																		body_element:
																			body_return:
																				RETURN:return 
																				SEMICOLON:;
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																								typeName:
																									type_var:
																										access_multi:
																											type_var:
																												class:
																													class_variable_names:Skills
																											type_var:
																												as_string:
																													body_statement:
																														body_call:
																															group:
																																name_var:
																																	variable:
																																		variable_names:skillName
																											ACCESS:->
																								NEW:new 
																		body_element:
																			NEWLINE:$\n
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					as_quote:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:skillName
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											WILD:skillName
																				name_var:
																					variable:
																						variable_names:equals
																	conditional:
																		IF:if
												name_var:
													variable:
														variable_names:prependToBody
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:declaration
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:declarationToken
									typeName:
										type_var:
											class:
												class_variable_names:IToken
							body_element:
								body_manipulate:
									class_declaration:
										NEWLINE:$\n
										FORSLASH:/
										FORSLASH:/
										WEAK:~
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														SEMICOLON:;
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:user
														typeName:
															type_var:
																class:
																	class_variable_names:Tile
												body_element:
													NEWLINE:$\n
										parentName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Criteria
													type_var:
														class:
															class_variable_names:Target
										NEWLINE:$\n
										objectType:
											CLASS:class 
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																exact:
																	WILD:user
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													NEWLINE:$\n
										className:
											variable_names:TargetCriteria
									methodName:
										ADD:+=
									type_var:
										access_multi:
											type_var:
												as_string:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:skillName
											type_var:
												class:
													class_variable_names:Skills
											ACCESS:->
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									body_statement:
										OPERATOR:->*.
										body_call:
											group:
												name_var:
													access:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:skillName
														name_var:
															variable:
																variable_names:Skills
														ACCESS:->
														ACCESS:->
										body_call:
											group:
												name_var:
													variable:
														variable_names:appendToBody
												parameters:
													method_argument:
														body_entries:
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	variable_assignment:
																		name_var:
																			exact:
																				WILD:targetCriteria
																		EQUALS:=
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						NEW:new 
																						parameters:
																						typeName:
																							type_var:
																								access_multi:
																									ACCESS:->
																									ACCESS:->
																									type_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:skillName
																									type_var:
																										class:
																											class_variable_names:TargetCriteria
																									type_var:
																										class:
																											class_variable_names:Skills
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
									SEMICOLON:;
							body_element:
								body_line:
									variable_declaration:
										EQUALS:=
										WEAK:~
										typeName:
											type_var:
												class:
													class_variable_names:Boolean
										variableName:
											name_var:
												variable:
													variable_names:isFirst
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:true
									SEMICOLON:;
					NEWLINE:$\n
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Skill
							methodName:
								name_var:
									variable:
										variable_names:create
							body_element:
								NEWLINE:$\n
							static:
								STA:@
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:skillName
									typeName:
										type_var:
											class:
												class_variable_names:String
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					packageName:
						name_var:
							exact:
								WILD:entities
					DOT:.
					objectType:
						CLASS:class 
					packageName:
						name_var:
							exact:
								WILD:skills
					className:
						variable_names:Skills
					NEWLINE:$\n
					NEWLINE:$\n
					packageName:
						name_var:
							exact:
								WILD:behaviours
					DOT:.
					DOT:.
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:ParseContext
									variableName:
										name_var:
											variable:
												variable_names:data
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setup
							body_element:
								body_manipulate:
									type_var:
										access_multi:
											ACCESS:->
											type_var:
												class:
													class_variable_names:Target
											type_var:
												class:
													class_variable_names:Criteria
									methodName:
										ADD:+=
									class_declaration:
										className:
											variable_names:Free
										FORSLASH:/
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:candidate
														typeName:
															type_var:
																class:
																	class_variable_names:Tile
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
														RETURN:return 
														SEMICOLON:;
										NEWLINE:$\n
										objectType:
											CLASS:class 
										FORSLASH:/
										parentName:
											type_var:
												access_multi:
													type_var:
														class:
															class_variable_names:Criteria
													type_var:
														class:
															class_variable_names:Target
													ACCESS:->
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												methodName:
													name_var:
														variable:
															variable_names:satisfies
												body_element:
													body_return:
														RETURN:return 
														SEMICOLON:;
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:true
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:candidate
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_manipulate:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Target
											ACCESS:->
											type_var:
												class:
													class_variable_names:Criteria
									methodName:
										ADD:+=
									class_declaration:
										FORSLASH:/
										NEWLINE:$\n
										className:
											variable_names:AngleTo
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Position
														type_var:
															class:
																class_variable_names:Environment
														ACCESS:->
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
											EQUALS:=
											variableName:
												name_var:
													variable:
														variable_names:to
										FORSLASH:/
										NEWLINE:$\n
										objectType:
											CLASS:class 
										NEWLINE:$\n
										variable_declaration:
											typeName:
												type_var:
													class:
														class_variable_names:Double
											EQUALS:=
											variableName:
												name_var:
													variable:
														variable_names:angleLeft
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
										SEMICOLON:;
										SEMICOLON:;
										variable_declaration:
											variableName:
												name_var:
													variable:
														variable_names:angleRight
											typeName:
												type_var:
													class:
														class_variable_names:Double
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:0.0
											EQUALS:=
										NEWLINE:$\n
										NEWLINE:$\n
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:candidate
												body_element:
													body_line:
														SEMICOLON:;
														variable_declaration:
															variableName:
																name_var:
																	variable:
																		variable_names:direction
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:candidate
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:getDirectionTo
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:to
																		group:
																			name_var:
																				variable:
																					variable_names:getLocation
																			parameters:
																		DOT:.
															typeName:
																type_var:
																	class:
																		class_variable_names:Double
															EQUALS:=
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													body_return:
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																OPERATOR:& 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleLeft
																OPERATOR:>= 
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:direction
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:angleRight
																OPERATOR:<= 
														SEMICOLON:;
												methodName:
													name_var:
														variable:
															variable_names:satisfies
										SEMICOLON:;
										parentName:
											type_var:
												access_multi:
													ACCESS:->
													type_var:
														class:
															class_variable_names:Target
													type_var:
														class:
															class_variable_names:Criteria
							typeName:
								type_var:
									class:
										class_variable_names:void
							inner:
								IN:>
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createCriteria
									SEMICOLON:;
							body_element:
								body_line:
									body_statement:
										body_call:
											group:
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:Entity
												name_var:
													exact:
														BACKSLASH:\
														variable_names:createList
									SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:String
									variableName:
										name_var:
											variable:
												variable_names:name
							body_element:
								NEWLINE:$\n
							typeName:
								STATEMENT_TYPE:Statement
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									SEMICOLON:;
									RETURN:return 
									method_argument:
										as_statement:
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:id
													group:
														name_var:
															access:
																ACCESS:->
																name_var:
																	variable:
																		variable_names:Skills
																name_var:
																	variable:
																		variable_names:name
							inner:
								IN:>
							body_element:
								NEWLINE:$\n
				class_declaration:
					variable_declaration:
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:0
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						EQUALS:=
						variableName:
							name_var:
								variable:
									variable_names:experience
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getName
							inline:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
					packageName:
						name_var:
							exact:
								WILD:entities
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:on
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_line:
												SEMICOLON:;
												body_statement:
													OPERATOR:+= 
													body_call:
														group:
															name_var:
																exact:
																	NAME:
																		NUMBER:1
													BACKSLASH:\
													body_call:
														group:
															name_var:
																exact:
																	WILD:cooldown
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														NAME:
															NUMBER:0 
										OPERATOR:> 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:event
									typeName:
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													exact:
														variable_names:Tick
														BACKSLASH:\
												type_var:
													class:
														class_variable_names:Events
					NEWLINE:$\n
					NEWLINE:$\n
					className:
						variable_names:Skill
					SEMICOLON:;
					interfaceName:
						type_var:
							class:
								class_variable_names:Usable
					variable_declaration:
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						WEAK:~
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						variableName:
							name_var:
								variable:
									variable_names:hasEntityFocus
					variable_declaration:
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Integer
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												NAME:
													NUMBER:-1
						variableName:
							name_var:
								variable:
									variable_names:cooldown
					interfaceName:
						type_var:
							class:
								class_variable_names:Source
					class_declaration:
						FORSLASH:/
						FORSLASH:/
						objectType:
							CLASS:class 
						NEWLINE:$\n
						className:
							variable_names:Id
						parentName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Usable
									ACCESS:->
									type_var:
										class:
											class_variable_names:Id
					method_declaration:
						methodDefinition:
							inline:
							methodName:
								name_var:
									variable:
										variable_names:getName
							typeName:
								type_var:
									class:
										class_variable_names:String
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
					objectType:
						CLASS:class 
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:behaviours
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_line:
									variable_assignment:
										EQUALS:=
										name_var:
											exact:
												WILD:hasEntityFocus
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
									SEMICOLON:;
							typeName:
								type_var:
									class:
										class_variable_names:void
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:newFocus
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							body_element:
								NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							methodName:
								name_var:
									variable:
										variable_names:use
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:user
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:victim
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								COMMA:,
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:void
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:setFocus
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:newFocus
									typeName:
										type_var:
											class:
												class_variable_names:Boolean
							body_element:
								body_line:
									SEMICOLON:;
									variable_assignment:
										name_var:
											exact:
												WILD:hasEntityFocus
										method_argument:
											body_statement:
												body_call:
													group:
														name_var:
															exact:
																WILD:newFocus
										EQUALS:=
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:canChase
							inline:
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:true
									RETURN:return 
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:getValue
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
												group:
													name_var:
														exact:
															WILD:(int)(float)cost
												DOT:.
									RETURN:return 
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:getCost
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							inline:
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Entity
									variableName:
										name_var:
											exact:
												WILD:entity
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							methodName:
								name_var:
									variable:
										variable_names:getId
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									access_multi:
										ACCESS:->
										type_var:
											class:
												class_variable_names:Skill
										type_var:
											class:
												class_variable_names:Id
							inline:
							body_element:
								NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:range
						EQUALS:=
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								class:
									class_variable_names:Evaluable
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:entity
									typeName:
										type_var:
											class:
												class_variable_names:Entity
							methodName:
								name_var:
									variable:
										variable_names:getRange
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Float
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:entity
													name_var:
														variable:
															variable_names:getValue
												DOT:.
												group:
													name_var:
														exact:
															WILD:range
									SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:isOffCooldown
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							inline:
							body_element:
								NEWLINE:$\n
							body_element:
								body_return:
									RETURN:return 
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															NAME:
																NUMBER:0
											OPERATOR:== 
											body_call:
												group:
													name_var:
														exact:
															WILD:cooldown
									SEMICOLON:;
					packageName:
						name_var:
							exact:
								WILD:skills
					NEWLINE:$\n
					NEWLINE:$\n
					SEMICOLON:;
					SEMICOLON:;
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							body_element:
								body_return:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									SEMICOLON:;
									RETURN:return 
							inline:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getDescription
					NEWLINE:$\n
					DOT:.
					variable_declaration:
						variableName:
							name_var:
								variable:
									variable_names:cost
						EQUALS:=
						typeName:
							type_var:
								class:
									class_variable_names:Evaluable
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
					SEMICOLON:;
					parentName:
						type_var:
							exact:
								variable_names:Object
								BACKSLASH:\
					SEMICOLON:;
					method_declaration:
						methodDefinition:
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:hasEntityFocus
												as_body:
													body_element:
														body_return:
															SEMICOLON:;
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																	OPERATOR:- 
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
										body_element:
											body_conditional:
												as_body:
													body_element:
														body_return:
															RETURN:return 
															method_argument:
																body_statement:
																	OPERATOR:- 
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				exact:
																					WILD:experience
																		group:
																			name_var:
																				exact:
																					WILD:otherSkill
																	body_call:
																		group:
																			name_var:
																				exact:
																					WILD:experience
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
												conditional:
													ELSE:else
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
										OPERATOR:== 
										body_call:
											group:
												name_var:
													exact:
														WILD:cooldown
											DOT:.
											group:
												name_var:
													exact:
														WILD:otherSkill
							body_element:
								NEWLINE:$\n
							typeName:
								type_var:
									class:
										class_variable_names:Integer
							methodName:
								name_var:
									variable:
										variable_names:compareTo
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														OPERATOR:- 
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
															group:
																name_var:
																	exact:
																		WILD:otherSkill
															DOT:.
														body_call:
															group:
																name_var:
																	exact:
																		WILD:cooldown
												RETURN:return 
										body_element:
											NEWLINE:$\n
									conditional:
										ELSE:else
							inline:
								variable_declaration:
									variableName:
										name_var:
											exact:
												WILD:otherSkill
									typeName:
										type_var:
											class:
												class_variable_names:Skill
					NEWLINE:$\n
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							typeName:
								type_var:
									class:
										class_variable_names:Boolean
							body_element:
								body_conditional:
									conditional:
										ELSE:else
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												variable_declaration:
													typeName:
														type_var:
															class:
																class_variable_names:Entity
													variableName:
														name_var:
															variable:
																variable_names:potential
												conditional:
													FOR:for
												body_statement:
													body_call:
														DOT:.
														DOT:.
														group:
															parameters:
																COMMA:,
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						variable_names:getRange
																						BACKSLASH:\
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:user
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:targetCriteria
															name_var:
																variable:
																	variable_names:getEntitiesWithin
														group:
															name_var:
																variable:
																	variable_names:user
														group:
															parameters:
															name_var:
																variable:
																	variable_names:getLocation
												OPERATOR:: 
												as_body:
													body_element:
														body_line:
															body_statement:
																body_call:
																	group:
																		parameters:
																			COMMA:,
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:potential
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
															SEMICOLON:;
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_return:
															RETURN:return 
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															SEMICOLON:;
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							methodName:
								name_var:
									variable:
										variable_names:use
							body_element:
								body_return:
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
									RETURN:return 
							inline:
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:user
									typeName:
										type_var:
											class:
												class_variable_names:Entity
								variable_declaration:
									typeName:
										type_var:
											class:
												class_variable_names:Activity
									variableName:
										name_var:
											variable:
												variable_names:activity
								COMMA:,
							body_element:
								NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:targetCriteria
										OPERATOR:|| 
										body_call:
											group:
												name_var:
													variable:
														variable_names:null
										body_call:
											DOT:.
											group:
												parameters:
												name_var:
													variable:
														variable_names:hasTarget
											group:
												name_var:
													variable:
														variable_names:activity
										OPERATOR:== 
									as_body:
										body_element:
											NEWLINE:$\n
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										body_element:
											body_conditional:
												conditional:
													IF:if
												as_body:
													body_element:
														NEWLINE:$\n
													body_element:
														NEWLINE:$\n
													body_element:
														body_line:
															SEMICOLON:;
															body_statement:
																body_call:
																	group:
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:user
																			method_argument:
																				body_statement:
																					body_call:
																						DOT:.
																						group:
																							name_var:
																								variable:
																									variable_names:getTargetEntity
																							parameters:
																						group:
																							name_var:
																								variable:
																									variable_names:activity
																			COMMA:,
																		name_var:
																			exact:
																				BACKSLASH:\
																				variable_names:use
													body_element:
														body_return:
															SEMICOLON:;
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:true
															RETURN:return 
													body_element:
														NEWLINE:$\n
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:targetCriteria
														DOT:.
														group:
															name_var:
																variable:
																	variable_names:satisfies
															parameters:
																method_argument:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:getTargetEntity
																				parameters:
																			group:
																				name_var:
																					variable:
																						variable_names:activity
																			DOT:.
													body_call:
														group:
															name_var:
																variable:
																	variable_names:targetCriteria
													body_call:
														group:
															name_var:
																variable:
																	variable_names:null
													OPERATOR:|| 
													OPERATOR:== 
										body_element:
											NEWLINE:$\n
							body_element:
								NEWLINE:$\n
							body_element:
								body_conditional:
									conditional:
										IF:if
									as_body:
										body_element:
											body_return:
												SEMICOLON:;
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:false
												RETURN:return 
										body_element:
											NEWLINE:$\n
										body_element:
											NEWLINE:$\n
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													exact:
														BACKSLASH:\
														variable_names:isOffCooldown
					DOT:.
					NEWLINE:$\n
					method_declaration:
						methodDefinition:
							inline:
							typeName:
								type_var:
									class:
										class_variable_names:String
							methodName:
								name_var:
									variable:
										variable_names:getDescription
							body_element:
								body_return:
									RETURN:return 
									SEMICOLON:;
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
					NEWLINE:$\n
					NEWLINE:$\n
					variable_declaration:
						EQUALS:=
						WEAK:~
						method_argument:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Target
									type_var:
										class:
											class_variable_names:Criteria
									ACCESS:->
						variableName:
							name_var:
								variable:
									variable_names:targetCriteria
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
				NEWLINE:$\n
				NEWLINE:$\n
		class_declaration:
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									exact:
										WILD:entityName
							typeName:
								type_var:
									class:
										class_variable_names:String
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
							RETURN:return 
							SEMICOLON:;
					methodName:
						name_var:
							variable:
								variable_names:createEntity
					typeName:
						type_var:
							class:
								class_variable_names:Entity
					body_element:
						NEWLINE:$\n
					static:
						STA:@
			method_declaration:
				methodDefinition:
					body_element:
						body_manipulate:
							COLON::
							name_var:
								variable:
									variable_names:declarationToken
							variableName:
								NAME:element
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:entity_definition
								body_element:
									body_manipulate:
										variableName:
											NAME:atom
										tokenInstance:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													typeName:
																														type_var:
																															access_multi:
																																ACCESS:->
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						variable:
																																							variable_names:atom
																																							CAMEL:^
																																type_var:
																																	class:
																																		class_variable_names:Affinities
																													parameters:
																													NEW:new 
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							DOT:.
																					SEMICOLON:;
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											COLON::
											tokenName:
												NAME:affinity_names
											body_element:
												NEWLINE:$\n
										COLON::
										name_var:
											variable:
												variable_names:element
								body_element:
									NEWLINE:$\n
								COLON::
								body_element:
									body_manipulate:
										variableName:
											NAME:atom
										tokenInstance:
											tokenName:
												NAME:skill
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													COLON::
													tokenInstance:
														body_element:
															body_line:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:arguments
																		group:
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getStatement
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:bodyContext
																			name_var:
																				variable:
																					variable_names:add
																		DOT:.
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														COLON::
														tokenName:
															NAME:statement
													variableName:
														NAME:quark
													name_var:
														variable:
															variable_names:atom
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														typeName:
															STATEMENT_TYPE:Statement
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		typeName:
																			STATEMENT_TYPE:Statement
																		parameters:
																		NEW:new 
														variableName:
															name_var:
																variable:
																	variable_names:arguments
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														EQUALS:=
														typeName:
															CONTEXT_TYPE:Context 
														method_argument:
															body_statement:
																body_call:
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getContext
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:Entity
														variableName:
															name_var:
																variable:
																	variable_names:bodyContext
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					SEMICOLON:;
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:this
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:gain
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													NEW:new 
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_method:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:arguments
																													typeName:
																														type_var:
																															access_multi:
																																type_var:
																																	class:
																																		class_variable_names:Skills
																																ACCESS:->
																																type_var:
																																	as_string:
																																		body_statement:
																																			body_call:
																																				group:
																																					name_var:
																																						access:
																																							name_var:
																																								exact:
																																									WILD:skill_names
																																							ACCESS:->
																																							CAMEL:^
																																							name_var:
																																								variable:
																																									variable_names:atom
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:this
																									COMMA:,
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		ACCESS:->
																		ACCESS:->
																		name_var:
																			variable:
																				variable_names:Entities
											COLON::
											body_element:
												body_line:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:arguments
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:,
																name_var:
																	variable:
																		variable_names:set
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
										name_var:
											variable:
												variable_names:element
										COLON::
								body_element:
									body_manipulate:
										tokenInstance:
											body_element:
												body_line:
													variable_declaration:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Events
																	group:
																		name_var:
																			variable:
																				variable_names:addToEventMethod
																		parameters:
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													access:
																														name_var:
																															variable:
																																variable_names:atom
																														name_var:
																															exact:
																																WILD:event_names
																														ACCESS:->
																			method_argument:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:Entities
																									name_var:
																										as_string:
																											body_statement:
																												body_call:
																													group:
																														name_var:
																															variable:
																																variable_names:entityName
																			COMMA:,
																			method_argument:
																				body_entries:
																			COMMA:,
																	DOT:.
														variableName:
															name_var:
																variable:
																	variable_names:eventContext
														typeName:
															CONTEXT_TYPE:Context 
														EQUALS:=
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_manipulate:
													COLON::
													variableName:
														NAME:quark
													name_var:
														variable:
															variable_names:atom
													tokenInstance:
														COLON::
														tokenName:
															NAME:body_element
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																SEMICOLON:;
																body_statement:
																	body_call:
																		DOT:.
																		group:
																			name_var:
																				variable:
																					variable_names:add
																			parameters:
																				method_argument:
																					body_statement:
																						body_call:
																							group:
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:eventContext
																									COMMA:,
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:quark
																								name_var:
																									exact:
																										BACKSLASH:\
																										variable_names:getBodyElement
																		group:
																			name_var:
																				variable:
																					variable_names:eventBody
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:event
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:eventBody
														typeName:
															BODY_TYPE:Body 
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		NEW:new 
																		typeName:
																			BODY_TYPE:Body 
																		parameters:
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:Events
															group:
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						access:
																							name_var:
																								variable:
																									variable_names:Entities
																							name_var:
																								as_string:
																									body_statement:
																										body_call:
																											group:
																												name_var:
																													variable:
																														variable_names:entityName
																							ACCESS:->
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													variable:
																														variable_names:atom
																												name_var:
																													exact:
																														WILD:event_names
																												ACCESS:->
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:eventBody
																name_var:
																	variable:
																		variable_names:addToEventMethod
													SEMICOLON:;
											COLON::
										variableName:
											NAME:atom
										name_var:
											variable:
												variable_names:element
										COLON::
								body_element:
									body_manipulate:
										variableName:
											NAME:atom
										name_var:
											variable:
												variable_names:element
										tokenInstance:
											body_element:
												NEWLINE:$\n
											body_element:
												body_conditional:
													conditional:
														IF:if
													as_body:
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
														body_element:
															body_line:
																SEMICOLON:;
																variable_assignment:
																	name_var:
																		variable:
																			variable_names:rightBound
																	EQUALS:=
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											access:
																												name_var:
																													variable:
																														variable_names:atom
																												name_var:
																													exact:
																														WILD:left
																												ACCESS:->
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:null
														body_call:
															group:
																name_var:
																	access:
																		name_var:
																			exact:
																				WILD:right
																		name_var:
																			variable:
																				variable_names:atom
																		ACCESS:->
														OPERATOR:!= 
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													variable_declaration:
														typeName:
															type_var:
																class:
																	class_variable_names:String
														variableName:
															name_var:
																variable:
																	variable_names:rightBound
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:leftBound
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										exact:
																											WILD:left
																									ACCESS:->
																									name_var:
																										variable:
																											variable_names:atom
														typeName:
															type_var:
																class:
																	class_variable_names:String
											tokenName:
												NAME:statRange
											body_element:
												body_conditional:
													conditional:
														ELSE:else
													as_body:
														body_element:
															body_line:
																variable_assignment:
																	EQUALS:=
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:leftBound
																	name_var:
																		variable:
																			variable_names:rightBound
																SEMICOLON:;
														body_element:
															NEWLINE:$\n
														body_element:
															NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	access:
																		ACCESS:->
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:entityName
																		name_var:
																			variable:
																				variable_names:Entities
																		ACCESS:->
														OPERATOR:->*.
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:appendToBody
																parameters:
																	method_argument:
																		as_statement:
																			body_element:
																				body_line:
																					body_statement:
																						body_call:
																							DOT:.
																							group:
																								name_var:
																									variable:
																										variable_names:setValue
																								parameters:
																									method_argument:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:getIntegerBetween
																													parameters:
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:leftBound
																														COMMA:,
																														method_argument:
																															body_statement:
																																body_call:
																																	group:
																																		name_var:
																																			as_string:
																																				body_statement:
																																					body_call:
																																						group:
																																							name_var:
																																								variable:
																																									variable_names:rightBound
																												DOT:.
																												group:
																													name_var:
																														variable:
																															variable_names:Range
																							DOT:.
																							group:
																								name_var:
																									as_string:
																										body_statement:
																											body_call:
																												group:
																													name_var:
																														variable:
																															variable_names:heroStatName
																							group:
																								name_var:
																									variable:
																										variable_names:this
																					SEMICOLON:;
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_declaration:
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								access:
																									name_var:
																										variable:
																											variable_names:atom
																									name_var:
																										exact:
																											WILD:hero_stats
																									ACCESS:->
																	group:
																		name_var:
																			variable:
																				variable_names:toLowerCase
																		parameters:
																	DOT:.
														variableName:
															name_var:
																variable:
																	variable_names:heroStatName
														typeName:
															type_var:
																class:
																	class_variable_names:String
											COLON::
										COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
					body_element:
						body_manipulate:
							tokenInstance:
								tokenName:
									NAME:entityName
								COLON::
								body_element:
									body_line:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			as_string:
																				body_statement:
																					body_call:
																						group:
																							name_var:
																								variable:
																									variable_names:element
												group:
													name_var:
														variable:
															variable_names:entityNameBuilder
												DOT:.
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							variableName:
								NAME:element
							COLON::
							name_var:
								variable:
									variable_names:declarationToken
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:StringBuilder
								EQUALS:=
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												NEW:new 
												typeName:
													type_var:
														class:
															class_variable_names:StringBuilder
								variableName:
									name_var:
										variable:
											variable_names:entityNameBuilder
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:!= 
								body_call:
									group:
										name_var:
											access:
												name_var:
													variable:
														variable_names:declarationToken
												ACCESS:->
												name_var:
													exact:
														WILD:imageName
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																access:
																	CAMEL:^
																	name_var:
																		exact:
																			WILD:imageName
																	name_var:
																		variable:
																			variable_names:declarationToken
																	ACCESS:->
											typeName:
												type_var:
													class:
														class_variable_names:String
											EQUALS:=
											variableName:
												name_var:
													variable:
														variable_names:imageClassName
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:newState
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:_0
																name_var:
																	variable:
																		variable_names:append
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
											body_call:
												group:
													name_var:
														access:
															name_var:
																variable:
																	variable_names:declarationToken
															ACCESS:->
															name_var:
																exact:
																	WILD:width
											OPERATOR:!= 
										conditional:
											IF:if
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										variable_declaration:
											EQUALS:=
											typeName:
												type_var:
													class:
														class_variable_names:String
											variableName:
												name_var:
													variable:
														variable_names:imageName
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							exact:
																								WILD:imageName
																						name_var:
																							variable:
																								variable_names:declarationToken
										SEMICOLON:;
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Drawable
															type_var:
																class:
																	class_variable_names:Gui
															ACCESS:->
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														variable:
															variable_names:getDrawable
												body_element:
													body_conditional:
														as_body:
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	variable_assignment:
																		name_var:
																			variable:
																				variable_names:drawable
																		EQUALS:=
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:image
																						parameters:
																							method_argument:
																								body_statement:
																									body_call:
																										group:
																											name_var:
																												variable:
																													variable_names:imageStates
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:Drawables
																					DOT:.
																					group:
																						name_var:
																							variable:
																								variable_names:square
																	SEMICOLON:;
															body_element:
																body_line:
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:drawable
																			group:
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:2
																							OPERATOR:/
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:13f
																				name_var:
																					variable:
																						variable_names:setVisualHeight
																	SEMICOLON:;
															body_element:
																NEWLINE:$\n
															body_element:
																NEWLINE:$\n
															body_element:
																body_line:
																	SEMICOLON:;
																	body_statement:
																		body_call:
																			DOT:.
																			group:
																				name_var:
																					variable:
																						variable_names:drawable
																			group:
																				name_var:
																					variable:
																						variable_names:setVisualWidth
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:13f
																							OPERATOR:/
																							body_call:
																								group:
																									name_var:
																										exact:
																											NAME:
																												NUMBER:2
														conditional:
															IF:if
														body_statement:
															OPERATOR:== 
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:null
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:drawable
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:drawable
														SEMICOLON:;
														RETURN:return 
										type_var:
											access_multi:
												ACCESS:->
												type_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:entityName
												type_var:
													class:
														class_variable_names:Entities
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Entities
												ACCESS:->
												type_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:entityName
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:changeTo
												body_element:
													NEWLINE:$\n
												typeName:
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Gui
															type_var:
																class:
																	class_variable_names:States
															type_var:
																class:
																	class_variable_names:Image
															ACCESS:->
															ACCESS:->
												inline:
												body_element:
													NEWLINE:$\n
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:imageStates
								body_element:
									body_line:
										SEMICOLON:;
										variable_declaration:
											EQUALS:=
											typeName:
												type_var:
													class:
														class_variable_names:StringBuilder
											variableName:
												name_var:
													variable:
														variable_names:newState
											method_argument:
												body_statement:
													body_call:
														group:
															typeName:
																type_var:
																	class:
																		class_variable_names:StringBuilder
															NEW:new 
															parameters:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														access:
															ACCESS:->
															name_var:
																variable:
																	variable_names:Entities
															ACCESS:->
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:entityName
											OPERATOR:->*.
											body_call:
												group:
													name_var:
														variable:
															variable_names:appendToBody
													parameters:
														method_argument:
															as_statement:
																body_element:
																	body_line:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:imageStates
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:newState
																					parameters:
																				DOT:.
																		SEMICOLON:;
								body_element:
									body_manipulate:
										type_var:
											access_multi:
												type_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:entityName
												type_var:
													class:
														class_variable_names:Entities
												ACCESS:->
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																variable:
																	variable_names:newState
														typeName:
															type_var:
																class:
																	class_variable_names:ImageStates
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														variable:
															variable_names:changeState
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:changeState
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:newState
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:imageStates
														SEMICOLON:;
										methodName:
											ADD:+=
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										variable_declaration:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																exact:
																	WILD:
											typeName:
												type_var:
													class:
														class_variable_names:String
											WEAK:~
											variableName:
												name_var:
													variable:
														variable_names:underscore
											EQUALS:=
										SEMICOLON:;
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:Images
														ACCESS:->
														ACCESS:->
														type_var:
															class:
																class_variable_names:States
														type_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:imageClassName
											WEAK:~
											EQUALS:=
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:asStates
															parameters:
														DOT:.
														group:
															name_var:
																access:
																	name_var:
																		variable:
																			variable_names:Images
																	ACCESS:->
																	name_var:
																		as_string:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							variable:
																								variable_names:imageName
														NEWLINE:$\n
													NEWLINE:$\n
											variableName:
												name_var:
													variable:
														variable_names:imageStates
										methodName:
											ADD:+=
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Entities
												type_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:entityName
												ACCESS:->
								body_element:
									body_manipulate:
										method_declaration:
											methodDefinition:
												methodName:
													name_var:
														variable:
															variable_names:isIdle
												typeName:
													type_var:
														class:
															class_variable_names:Boolean
												body_element:
													NEWLINE:$\n
												body_element:
													NEWLINE:$\n
												inline:
												body_element:
													body_return:
														SEMICOLON:;
														RETURN:return 
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:imageStates
																	DOT:.
																	group:
																		parameters:
																		name_var:
																			variable:
																				variable_names:getId
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:idle
																	DOT:.
																	group:
																		name_var:
																			variable:
																				variable_names:ImageStates
																OPERATOR:== 
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Entities
												type_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:entityName
												ACCESS:->
										methodName:
											ADD:+=
								body_element:
									body_manipulate:
										COLON::
										variableName:
											NAME:element
										name_var:
											variable:
												variable_names:declarationToken
										tokenInstance:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:newState
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:append
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:underscore
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											tokenName:
												NAME:imageId
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											COLON::
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															DOT:.
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						as_string:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:element
																name_var:
																	variable:
																		variable_names:append
															group:
																name_var:
																	variable:
																		variable_names:newState
											body_element:
												body_line:
													SEMICOLON:;
													variable_assignment:
														name_var:
															variable:
																variable_names:underscore
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			exact:
																				WILD:_
														EQUALS:=
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					typeName:
						CLASS_TYPE:Class 
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												access:
													ACCESS:->
													name_var:
														as_string:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:entityName
													ACCESS:->
													name_var:
														variable:
															variable_names:Factory
													name_var:
														variable:
															variable_names:Entities
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:entityNameBuilder
											group:
												parameters:
												name_var:
													variable:
														variable_names:toString
											DOT:.
								variableName:
									name_var:
										variable:
											variable_names:entityName
								EQUALS:=
					inner:
						IN:>
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:declarationToken
							typeName:
								type_var:
									class:
										class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							methodName:
								ADD:+=
							class_declaration:
								packageName:
									name_var:
										exact:
											WILD:entities
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										body_element:
											body_return:
												RETURN:return 
												method_argument:
													body_statement:
														body_call:
															group:
																parameters:
																typeName:
																	type_var:
																		access_multi:
																			type_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:entityName
																			type_var:
																				class:
																					class_variable_names:Entities
																			ACCESS:->
																NEW:new 
												SEMICOLON:;
										body_element:
											NEWLINE:$\n
										typeName:
											type_var:
												class:
													class_variable_names:Entity
										methodName:
											name_var:
												variable:
													variable_names:create
										body_element:
											NEWLINE:$\n
										inline:
								DOT:.
								NEWLINE:$\n
								objectType:
									CLASS:class 
								className:
									variable_names:Factory
								parentName:
									type_var:
										exact:
											variable_names:Object
											BACKSLASH:\
								interfaceName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Entity
											ACCESS:->
											type_var:
												class:
													class_variable_names:Factory
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Entities
									type_var:
										exact:
											variable_names:entityName
											BACKSLASH:\
									ACCESS:->
					body_element:
						body_manipulate:
							type_var:
								class:
									class_variable_names:Entities
							methodName:
								ADD:+=
							class_declaration:
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								DOT:.
								parentName:
									type_var:
										class:
											class_variable_names:Entity
								NEWLINE:$\n
								variable_declaration:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:null
									WEAK:~
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Gui
												type_var:
													class:
														class_variable_names:Drawable
												ACCESS:->
									EQUALS:=
									variableName:
										name_var:
											variable:
												variable_names:drawable
								className:
									variable_names:entityName
								NEWLINE:$\n
								packageName:
									name_var:
										exact:
											WILD:entities
								SEMICOLON:;
								objectType:
									CLASS:class 
					body_element:
						NEWLINE:$\n
			objectType:
				CLASS:class 
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			packageName:
				name_var:
					exact:
						WILD:entities
			className:
				variable_names:Entities
			class_declaration:
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								class:
									class_variable_names:boolean
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getIsPlayerAffiliated
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:true
								RETURN:return 
								SEMICOLON:;
						inline:
				FORSLASH:/
				FORSLASH:/
				NEWLINE:$\n
				NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:isIdle
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:getId
											group:
												name_var:
													variable:
														variable_names:imageStates
											DOT:.
										OPERATOR:== 
										body_call:
											group:
												name_var:
													variable:
														variable_names:ImageStates
											DOT:.
											group:
												name_var:
													variable:
														variable_names:idle
								SEMICOLON:;
								RETURN:return 
						typeName:
							type_var:
								class:
									class_variable_names:Boolean
						inline:
						body_element:
							NEWLINE:$\n
				method_declaration:
					methodDefinition:
						body_element:
							body_return:
								RETURN:return 
								SEMICOLON:;
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:imageStates
						typeName:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Gui
									ACCESS:->
									type_var:
										class:
											class_variable_names:States
									type_var:
										class:
											class_variable_names:Image
									ACCESS:->
						inline:
						methodName:
							name_var:
								variable:
									variable_names:changeTo
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
				SEMICOLON:;
				method_declaration:
					methodDefinition:
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:image
								typeName:
									type_var:
										access_multi:
											type_var:
												class:
													class_variable_names:Statable
											ACCESS:->
											type_var:
												class:
													class_variable_names:Gui
						body_element:
							NEWLINE:$\n
						methodName:
							NAME:
								AS_METHOD_NAME:*
						typeName:
							type_var:
								class:
									class_variable_names:Hero
						body_element:
							NEWLINE:$\n
						body_element:
							body_line:
								SEMICOLON:;
								variable_assignment:
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:image
												DOT:.
												group:
													name_var:
														variable:
															variable_names:asStates
													parameters:
									name_var:
										variable:
											variable_names:imageStates
									EQUALS:=
				method_declaration:
					methodDefinition:
						body_element:
							NEWLINE:$\n
						typeName:
							type_var:
								access_multi:
									ACCESS:->
									type_var:
										class:
											class_variable_names:Drawable
									type_var:
										class:
											class_variable_names:Gui
						body_element:
							NEWLINE:$\n
						body_element:
							body_return:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:drawable
								RETURN:return 
								SEMICOLON:;
						body_element:
							body_conditional:
								conditional:
									IF:if
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:drawable
									OPERATOR:== 
									body_call:
										group:
											name_var:
												variable:
													variable_names:null
								as_body:
									body_element:
										body_line:
											variable_assignment:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:square
															DOT:.
															DOT:.
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:imageStates
																name_var:
																	variable:
																		variable_names:image
															group:
																name_var:
																	variable:
																		variable_names:Drawables
												name_var:
													variable:
														variable_names:drawable
												EQUALS:=
											SEMICOLON:;
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:drawable
													DOT:.
													group:
														name_var:
															variable:
																variable_names:setVisualHeight
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:2
																	OPERATOR:/
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:13f
									body_element:
										NEWLINE:$\n
									body_element:
										NEWLINE:$\n
									body_element:
										body_line:
											SEMICOLON:;
											body_statement:
												body_call:
													DOT:.
													group:
														name_var:
															variable:
																variable_names:drawable
													group:
														parameters:
															method_argument:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:13f
																	OPERATOR:/
																	body_call:
																		group:
																			name_var:
																				exact:
																					NAME:
																						NUMBER:2
														name_var:
															variable:
																variable_names:setVisualWidth
						body_element:
							NEWLINE:$\n
						methodName:
							name_var:
								variable:
									variable_names:getDrawable
						inline:
				SEMICOLON:;
				NEWLINE:$\n
				variable_declaration:
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Drawable
								type_var:
									class:
										class_variable_names:Gui
								ACCESS:->
					WEAK:~
					variableName:
						name_var:
							variable:
								variable_names:drawable
					EQUALS:=
				method_declaration:
					methodDefinition:
						methodName:
							name_var:
								variable:
									variable_names:changeState
						body_element:
							body_line:
								SEMICOLON:;
								body_statement:
									body_call:
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:newState
											name_var:
												variable:
													variable_names:changeState
										group:
											name_var:
												variable:
													variable_names:imageStates
										DOT:.
						body_element:
							NEWLINE:$\n
						body_element:
							NEWLINE:$\n
						inline:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:newState
								typeName:
									type_var:
										class:
											class_variable_names:ImageStates
						typeName:
							type_var:
								class:
									class_variable_names:void
				NEWLINE:$\n
				NEWLINE:$\n
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:imageStates
					method_argument:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:null
					typeName:
						type_var:
							access_multi:
								type_var:
									class:
										class_variable_names:Gui
								type_var:
									class:
										class_variable_names:Image
								ACCESS:->
								type_var:
									class:
										class_variable_names:States
								ACCESS:->
					EQUALS:=
					WEAK:~
				className:
					variable_names:Hero
				NEWLINE:$\n
				NEWLINE:$\n
				parentName:
					type_var:
						class:
							class_variable_names:Entity
				NEWLINE:$\n
				objectType:
					CLASS:class 
			NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
imports:
	IMPORT_CLASS:
		imports:
			IMPORT_CLASS:
				class_declaration:
					packageName:
						name_var:
							exact:
								WILD:environments
					className:
						variable_names:EntryPoints
					objectType:
						CLASS:class 
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					NEWLINE:$\n
					DOT:.
				NEWLINE:$\n
		NEWLINE:$\n
		imports:
			IMPORT_CLASS:
				class_declaration:
					objectType:
						CLASS:class 
					DOT:.
					className:
						variable_names:Areas
					packageName:
						name_var:
							as_string:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:packageName
					packageName:
						name_var:
							exact:
								WILD:environments
					NEWLINE:$\n
				NEWLINE:$\n
				imports:
					IMPORT_CLASS:
method_declaration:
	methodDefinition:
		methodName:
			name_var:
				variable:
					variable_names:assignListElementNames
		inner:
			IN:>
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
				variableName:
					name_var:
						variable:
							variable_names:context
			COMMA:,
			variable_declaration:
				variableName:
					name_var:
						variable:
							variable_names:root
				typeName:
					type_var:
						class:
							class_variable_names:IToken
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												typeName:
													type_var:
														class:
															class_variable_names:HeroStats
												NEW:new 
							name_var:
								variable:
									variable_names:retainList
						group:
							name_var:
								variable:
									variable_names:context
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
NEWLINE:$\n
NEWLINE:$\n
method_declaration:
	methodDefinition:
		inner:
			IN:>
		typeName:
			type_var:
				class:
					class_variable_names:void
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
				variableName:
					name_var:
						variable:
							variable_names:data
		methodName:
			name_var:
				variable:
					variable_names:setup
		body_element:
			NEWLINE:$\n
method_declaration:
	methodDefinition:
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:ParseContext
				variableName:
					name_var:
						variable:
							variable_names:data
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Treasury
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Environment
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
		body_element:
			body_manipulate:
				COLON::
				variableName:
					NAME:imports
				name_var:
					variable:
						variable_names:root
				tokenInstance:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
										name_var:
											variable:
												variable_names:importAny
									group:
										name_var:
											variable:
												variable_names:Gui
									DOT:.
					COLON::
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											exact:
												variable_names:importAny
												BACKSLASH:\
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:imports
							SEMICOLON:;
					tokenName:
						NAME:import_any
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Skills
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:Relationship
						DOT:.
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Activities
				SEMICOLON:;
		typeName:
			type_var:
				class:
					class_variable_names:void
		body_element:
			NEWLINE:$\n
		methodName:
			name_var:
				variable:
					variable_names:generate
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
							name_var:
								exact:
									variable_names:setupGui
									BACKSLASH:\
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Tile
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Aspects
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Quests
						DOT:.
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
						group:
							name_var:
								variable:
									variable_names:Entity
						DOT:.
		body_element:
			body_line:
				body_statement:
					body_call:
						DOT:.
						group:
							name_var:
								variable:
									variable_names:Items
						group:
							name_var:
								variable:
									variable_names:setup
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
				SEMICOLON:;
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						group:
							name_var:
								exact:
									BACKSLASH:\
									variable_names:output
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
		body_element:
			body_line:
				body_statement:
					body_call:
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														WILD:../Questineer/src
							name_var:
								exact:
									BACKSLASH:\
									variable_names:setup
				SEMICOLON:;
		body_element:
			body_line:
				SEMICOLON:;
				body_statement:
					body_call:
						DOT:.
						group:
							parameters:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:data
							name_var:
								variable:
									variable_names:setup
						group:
							name_var:
								variable:
									variable_names:Conditions
		body_element:
			body_manipulate:
				variableName:
					NAME:imports
				COLON::
				tokenInstance:
					COLON::
					tokenName:
						NAME:import_any
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								body_element:
									body_manipulate:
										COLON::
										name_var:
											variable:
												variable_names:import_events
										tokenInstance:
											tokenName:
												NAME:event_declaration
											COLON::
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:element
																name_var:
																	variable:
																		variable_names:declaration
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:Events
											body_element:
												NEWLINE:$\n
										variableName:
											NAME:element
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								tokenName:
									NAME:IMPORT_EVENT
							name_var:
								variable:
									variable_names:imports
							variableName:
								NAME:import_events
					body_element:
						NEWLINE:$\n
				name_var:
					variable:
						variable_names:root
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		inner:
			IN:>
		body_element:
			NEWLINE:$\n
		body_element:
			body_line:
				SEMICOLON:;
				variable_declaration:
					variableName:
						name_var:
							variable:
								variable_names:root
					method_argument:
						body_statement:
							body_call:
								DOT:.
								group:
									parameters:
									name_var:
										variable:
											variable_names:getRoot
								group:
									name_var:
										variable:
											variable_names:data
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:IToken
imports:
	IMPORT_CLASS:
		class_declaration:
			class_declaration:
				objectType:
					ENUMERATION:enum 
				FORSLASH:/
				FORSLASH:/
				className:
					variable_names:Id
			objectType:
				CLASS:class 
			packageName:
				name_var:
					exact:
						WILD:events
			className:
				variable_names:Event
			NEWLINE:$\n
			DOT:.
			NEWLINE:$\n
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
		NEWLINE:$\n
		class_declaration:
			DOT:.
			method_declaration:
				methodDefinition:
					body_element:
						NEWLINE:$\n
					body_element:
						body_return:
							SEMICOLON:;
							RETURN:return 
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
										DOT:.
										group:
											name_var:
												variable:
													variable_names:inputClass
										group:
											parameters:
												method_argument:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:newMethodName
											name_var:
												variable:
													variable_names:getMethod
										DOT:.
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
											group:
												name_var:
													variable:
														variable_names:newMethod
											DOT:.
								EQUALS:=
					body_element:
						body_conditional:
							conditional:
								IF:if
							as_body:
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
													name_var:
														exact:
															BACKSLASH:\
															variable_names:createList
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										methodName:
											ADD:+=
										method_declaration:
											methodDefinition:
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:event
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Events
																	type_var:
																		exact:
																			CAMEL:^
																			BACKSLASH:\
																			variable_names:eName
																	ACCESS:->
												typeName:
													type_var:
														class:
															class_variable_names:void
												methodName:
													name_var:
														exact:
															WILD:on
								body_element:
									body_manipulate:
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:add
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																group:
																	name_var:
																		concat:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
																			name_var:
																				exact:
																					WILD:Listeners
																			PLUS:+
																DOT:.
												methodName:
													name_var:
														exact:
															WILD:add
												typeName:
													type_var:
														class:
															class_variable_names:void
												body_element:
													NEWLINE:$\n
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:newListener
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		exact:
																			variable_names:eName
																			CAMEL:^
																			BACKSLASH:\
																	type_var:
																		class:
																			class_variable_names:Listener
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Events
										methodName:
											ADD:+=
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														type_var:
															class:
																class_variable_names:List
														type_var:
															class:
																class_variable_names:Listenable
														ACCESS:->
											variableName:
												name_var:
													concat:
														name_var:
															exact:
																WILD:Listeners
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
														PLUS:+
											WEAK:~
											method_argument:
												body_statement:
													NEWLINE:$\n
													body_call:
														group:
															NEW:new 
															typeName:
																type_var:
																	access_multi:
																		type_var:
																			class:
																				class_variable_names:Listenable
																		type_var:
																			class:
																				class_variable_names:List
																		ACCESS:->
															parameters:
														NEWLINE:$\n
											EQUALS:=
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:inputClass
									DOT:.
									group:
										name_var:
											variable:
												variable_names:getMethod
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
					typeName:
						CONTEXT_TYPE:Context 
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					methodName:
						name_var:
							variable:
								variable_names:getEventContext
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:eName
							typeName:
								type_var:
									class:
										class_variable_names:String
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:inputClass
							typeName:
								CLASS_TYPE:Class 
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:newMethod
								typeName:
									METHOD_TYPE:Method 
								method_argument:
									method_declaration:
										methodDefinition:
											typeName:
												type_var:
													class:
														class_variable_names:void
											inline:
												variable_declaration:
													typeName:
														type_var:
															access_multi:
																ACCESS:->
																type_var:
																	exact:
																		CAMEL:^
																		BACKSLASH:\
																		variable_names:eName
																type_var:
																	class:
																		class_variable_names:Events
													variableName:
														name_var:
															exact:
																WILD:event
											methodName:
												name_var:
													exact:
														WILD:on
								EQUALS:=
							SEMICOLON:;
			NEWLINE:$\n
			SEMICOLON:;
			method_declaration:
				methodDefinition:
					body_element:
						body_conditional:
							conditional:
								FOR:for
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:name
							OPERATOR:: 
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										conditional:
											ELSE:else
										as_body:
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																parameters:
																	method_argument:
																		body_entries:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	COMMA:,
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:addToEventMethod
													SEMICOLON:;
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										as_body:
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																name_var:
																	exact:
																		BACKSLASH:\
																		variable_names:addToEventMethod
																parameters:
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				DOT:.
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				group:
																					name_var:
																						variable:
																							variable_names:get
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																	COMMA:,
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										conditional:
											IF:if
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
												DOT:.
												group:
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
													name_var:
														variable:
															variable_names:containsKey
								body_element:
									NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:bodiesToAdd
							typeName:
								type_var:
									class:
										template_parameters:
											template_parameter:
												type_var:
													class:
														class_variable_names:String
											COMMA:,
											template_parameter:
												BODY_TYPE:Body 
										class_variable_names:Map
						COMMA:,
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
					methodName:
						name_var:
							variable:
								variable_names:addEventMethods
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
			objectType:
				CLASS:class 
			SEMICOLON:;
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			NEWLINE:$\n
			variable_declaration:
				inner:
					IN:>
				variableName:
					name_var:
						variable:
							variable_names:variableDefs
				EQUALS:=
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											class_variable_names:HashMap
											template_parameters:
												COMMA:,
												template_parameter:
													type_var:
														class:
															template_parameters:
																template_parameter:
																	type_var:
																		class:
																			class_variable_names:Entry
															class_variable_names:List
												template_parameter:
													type_var:
														class:
															class_variable_names:String
				typeName:
					type_var:
						class:
							class_variable_names:Map
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
								template_parameter:
									type_var:
										class:
											class_variable_names:List
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:Entry
								COMMA:,
			variable_declaration:
				inner:
					IN:>
				typeName:
					type_var:
						class:
							class_variable_names:Set
							template_parameters:
								template_parameter:
									type_var:
										class:
											class_variable_names:String
				variableName:
					name_var:
						variable:
							variable_names:eventNameSet
				method_argument:
					body_statement:
						body_call:
							group:
								NEW:new 
								parameters:
								typeName:
									type_var:
										class:
											template_parameters:
												template_parameter:
													type_var:
														class:
															class_variable_names:String
											class_variable_names:HashSet
				EQUALS:=
			packageName:
				name_var:
					exact:
						WILD:events
			className:
				variable_names:Events
			NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					typeName:
						CONTEXT_TYPE:Context 
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:establishedMethod
									group:
										name_var:
											variable:
												variable_names:appendToBody
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:body
							SEMICOLON:;
					body_element:
						body_return:
							method_argument:
								body_statement:
									body_call:
										group:
											name_var:
												variable:
													variable_names:getContext
											parameters:
										group:
											name_var:
												variable:
													variable_names:establishedMethod
										DOT:.
							SEMICOLON:;
							RETURN:return 
					methodName:
						name_var:
							variable:
								variable_names:addToEventMethod
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:establishedMethod
								typeName:
									METHOD_TYPE:Method 
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:getMethod
												parameters:
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:newMethodName
											group:
												name_var:
													variable:
														variable_names:inputClass
											DOT:.
								EQUALS:=
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:null
								OPERATOR:== 
								body_call:
									group:
										name_var:
											variable:
												variable_names:getMethod
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:newMethodName
									DOT:.
									group:
										name_var:
											variable:
												variable_names:inputClass
							as_body:
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										variable_declaration:
											typeName:
												type_var:
													access_multi:
														ACCESS:->
														type_var:
															class:
																class_variable_names:List
														type_var:
															class:
																class_variable_names:Listenable
											WEAK:~
											method_argument:
												body_statement:
													NEWLINE:$\n
													body_call:
														group:
															typeName:
																type_var:
																	access_multi:
																		ACCESS:->
																		type_var:
																			class:
																				class_variable_names:List
																		type_var:
																			class:
																				class_variable_names:Listenable
															NEW:new 
															parameters:
														NEWLINE:$\n
											EQUALS:=
											variableName:
												name_var:
													concat:
														name_var:
															as_string:
																body_statement:
																	body_call:
																		group:
																			name_var:
																				variable:
																					variable_names:eName
														PLUS:+
														name_var:
															exact:
																WILD:Listeners
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														exact:
															BACKSLASH:\
															variable_names:createList
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:Listenable
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												typeName:
													type_var:
														class:
															class_variable_names:void
												inline:
													variable_declaration:
														variableName:
															name_var:
																exact:
																	WILD:event
														typeName:
															type_var:
																access_multi:
																	type_var:
																		class:
																			class_variable_names:Events
																	type_var:
																		exact:
																			BACKSLASH:\
																			CAMEL:^
																			variable_names:eName
																	ACCESS:->
												methodName:
													name_var:
														exact:
															WILD:on
								body_element:
									body_manipulate:
										methodName:
											ADD:+=
										type_var:
											class:
												class_variable_names:inputClass
										method_declaration:
											methodDefinition:
												body_element:
													NEWLINE:$\n
												methodName:
													name_var:
														exact:
															WILD:add
												body_element:
													body_line:
														SEMICOLON:;
														body_statement:
															body_call:
																DOT:.
																group:
																	name_var:
																		variable:
																			variable_names:add
																	parameters:
																		method_argument:
																			body_statement:
																				body_call:
																					group:
																						name_var:
																							exact:
																								WILD:newListener
																group:
																	name_var:
																		concat:
																			name_var:
																				as_string:
																					body_statement:
																						body_call:
																							group:
																								name_var:
																									variable:
																										variable_names:eName
																			PLUS:+
																			name_var:
																				exact:
																					WILD:Listeners
												inline:
													variable_declaration:
														typeName:
															type_var:
																access_multi:
																	ACCESS:->
																	type_var:
																		exact:
																			BACKSLASH:\
																			variable_names:eName
																			CAMEL:^
																	type_var:
																		class:
																			class_variable_names:Events
																	ACCESS:->
																	type_var:
																		class:
																			class_variable_names:Listener
														variableName:
															name_var:
																exact:
																	WILD:newListener
												typeName:
													type_var:
														class:
															class_variable_names:void
												body_element:
													NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								IF:if
					inline:
						COMMA:,
						variable_declaration:
							typeName:
								BODY_TYPE:Body 
							variableName:
								name_var:
									variable:
										variable_names:body
						variable_declaration:
							typeName:
								CLASS_TYPE:Class 
							variableName:
								name_var:
									variable:
										variable_names:inputClass
						COMMA:,
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:eName
							typeName:
								type_var:
									class:
										class_variable_names:String
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												parameters:
												name_var:
													variable:
														variable_names:getName
											group:
												name_var:
													variable:
														variable_names:newMethod
											DOT:.
								typeName:
									type_var:
										class:
											class_variable_names:String
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:newMethodName
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							variable_declaration:
								typeName:
									METHOD_TYPE:Method 
								method_argument:
									method_declaration:
										methodDefinition:
											typeName:
												type_var:
													class:
														class_variable_names:void
											inline:
												variable_declaration:
													typeName:
														type_var:
															access_multi:
																type_var:
																	class:
																		class_variable_names:Events
																type_var:
																	exact:
																		variable_names:eName
																		BACKSLASH:\
																		CAMEL:^
																ACCESS:->
													variableName:
														name_var:
															exact:
																WILD:event
											methodName:
												name_var:
													exact:
														WILD:on
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:newMethod
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						NEWLINE:$\n
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							variable_declaration:
								typeName:
									type_var:
										class:
											class_variable_names:String
								EQUALS:=
								variableName:
									name_var:
										variable:
											variable_names:cev
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													exact:
														variable_names:eventName
														BACKSLASH:\
														CAMEL:^
							SEMICOLON:;
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_manipulate:
							COLON::
							tokenInstance:
								COLON::
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
								body_element:
									body_manipulate:
										tokenInstance:
											COLON::
											tokenName:
												NAME:type_name
											body_element:
												body_manipulate:
													methodName:
														ADD:+=
													type_var:
														access_multi:
															type_var:
																class:
																	class_variable_names:Events
															type_var:
																exact:
																	variable_names:cev
																	BACKSLASH:\
															ACCESS:->
													variable_declaration:
														typeName:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					exact:
																						BACKSLASH:\
																						variable_names:getTypeName
																				parameters:
																					method_argument:
																						body_statement:
																							body_call:
																								group:
																									name_var:
																										variable:
																											variable_names:atom
														variableName:
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					access:
																						ACCESS:->
																						name_var:
																							variable:
																								variable_names:element
																						name_var:
																							exact:
																								WILD:name
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										name_var:
											variable:
												variable_names:element
										COLON::
										variableName:
											NAME:atom
								tokenName:
									NAME:parameter
							name_var:
								variable:
									variable_names:declaration
							variableName:
								NAME:element
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Event
									type_var:
										class:
											class_variable_names:Id
									ACCESS:->
							variable_declaration:
								method_argument:
									body_statement:
										NEWLINE:$\n
										body_call:
											NEWLINE:$\n
											group:
												name_var:
													variable:
														variable_names:null
								typeName:
									type_var:
										class:
											class_variable_names:void
								variableName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:eventName
								EQUALS:=
							methodName:
								ADD:+=
					body_element:
						body_line:
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:eventName
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:String
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													as_string:
														body_statement:
															body_call:
																group:
																	name_var:
																		access:
																			name_var:
																				exact:
																					WILD:eventName
																			ACCESS:->
																			name_var:
																				variable:
																					variable_names:declaration
							SEMICOLON:;
					body_element:
						body_line:
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
									DOT:.
									group:
										name_var:
											variable:
												variable_names:add
										parameters:
											method_argument:
												body_statement:
													body_call:
														group:
															name_var:
																variable:
																	variable_names:eventName
							SEMICOLON:;
					inline:
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:declaration
							typeName:
								type_var:
									class:
										class_variable_names:IToken
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						body_manipulate:
							type_var:
								access_multi:
									type_var:
										class:
											class_variable_names:Events
									ACCESS:->
									type_var:
										exact:
											variable_names:cev
											BACKSLASH:\
							methodName:
								ADD:+=
							class_declaration:
								NEWLINE:$\n
								className:
									variable_names:Listener
								interfaceName:
									type_var:
										class:
											class_variable_names:Listenable
											template_parameters:
												template_parameter:
													type_var:
														access_multi:
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:cev
															SPECIAL_ACCESS:\>
															type_var:
																class:
																	class_variable_names:Events
								DOT:.
								parentName:
									type_var:
										exact:
											BACKSLASH:\
											variable_names:Object
								NEWLINE:$\n
								method_declaration:
									methodDefinition:
										typeName:
											type_var:
												class:
													class_variable_names:void
										methodName:
											name_var:
												variable:
													variable_names:listen
										inline:
											variable_declaration:
												variableName:
													name_var:
														variable:
															variable_names:event
												typeName:
													type_var:
														access_multi:
															ACCESS:->
															type_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:cev
															type_var:
																class:
																	class_variable_names:Events
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
								packageName:
									name_var:
										exact:
											WILD:events
								objectType:
									CLASS:class 
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:declaration
					body_element:
						body_manipulate:
							class_declaration:
								parentName:
									type_var:
										class:
											class_variable_names:Event
								SEMICOLON:;
								variable_declaration:
									variableName:
										name_var:
											variable:
												variable_names:id
									static:
										STA:@
									typeName:
										type_var:
											access_multi:
												type_var:
													class:
														class_variable_names:Id
												ACCESS:->
												type_var:
													class:
														class_variable_names:Event
									EQUALS:=
									method_argument:
										body_statement:
											body_call:
												group:
													name_var:
														access:
															ACCESS:->
															ACCESS:->
															name_var:
																as_string:
																	body_statement:
																		body_call:
																			group:
																				name_var:
																					variable:
																						variable_names:eventName
															name_var:
																variable:
																	variable_names:Id
															name_var:
																variable:
																	variable_names:Event
								objectType:
									CLASS:class 
								NEWLINE:$\n
								packageName:
									name_var:
										exact:
											WILD:events
								NEWLINE:$\n
								className:
									variable_names:cev
								DOT:.
								packageName:
									name_var:
										as_string:
											body_statement:
												body_call:
													group:
														name_var:
															variable:
																variable_names:packageName
							methodName:
								ADD:+=
							type_var:
								class:
									class_variable_names:Events
					body_element:
						NEWLINE:$\n
			method_declaration:
				methodDefinition:
					inline:
						variable_declaration:
							typeName:
								type_var:
									class:
										template_parameters:
											COMMA:,
											template_parameter:
												type_var:
													class:
														class_variable_names:String
											template_parameter:
												BODY_TYPE:Body 
										class_variable_names:Map
							variableName:
								name_var:
									variable:
										variable_names:bodiesToAdd
						variable_declaration:
							variableName:
								name_var:
									variable:
										variable_names:inputClass
							typeName:
								CLASS_TYPE:Class 
						COMMA:,
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_conditional:
										conditional:
											IF:if
										as_body:
											body_element:
												body_line:
													SEMICOLON:;
													body_statement:
														body_call:
															group:
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:inputClass
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:name
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						variable:
																							variable_names:bodiesToAdd
																				group:
																					parameters:
																						method_argument:
																							body_statement:
																								body_call:
																									group:
																										name_var:
																											variable:
																												variable_names:name
																					name_var:
																						variable:
																							variable_names:get
																				DOT:.
																	COMMA:,
																	COMMA:,
																name_var:
																	exact:
																		variable_names:addToEventMethod
																		BACKSLASH:\
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:containsKey
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:name
												DOT:.
												group:
													name_var:
														variable:
															variable_names:bodiesToAdd
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								FOR:for
							OPERATOR:: 
							variable_declaration:
								variableName:
									name_var:
										variable:
											variable_names:name
								typeName:
									type_var:
										class:
											class_variable_names:String
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:eventNameSet
					body_element:
						NEWLINE:$\n
					typeName:
						type_var:
							class:
								class_variable_names:void
					methodName:
						name_var:
							variable:
								variable_names:addEventMethodsExclusive
			packageName:
				name_var:
					as_string:
						body_statement:
							body_call:
								group:
									name_var:
										variable:
											variable_names:packageName
			NEWLINE:$\n
			method_declaration:
				methodDefinition:
					body_element:
						body_line:
							SEMICOLON:;
							body_statement:
								body_call:
									group:
										name_var:
											variable:
												variable_names:method
									DOT:.
									group:
										name_var:
											variable:
												variable_names:addParameter
										parameters:
											method_argument:
												variable_declaration:
													variableName:
														name_var:
															exact:
																WILD:event
													typeName:
														type_var:
															exact:
																BACKSLASH:\
																variable_names:eventName
												SEMICOLON:;
					inline:
						variable_declaration:
							typeName:
								METHOD_TYPE:Method 
							variableName:
								name_var:
									variable:
										variable_names:method
						variable_declaration:
							typeName:
								type_var:
									class:
										class_variable_names:String
							variableName:
								name_var:
									variable:
										variable_names:eventName
						COMMA:,
					typeName:
						type_var:
							class:
								class_variable_names:void
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					inner:
						IN:>
					methodName:
						name_var:
							variable:
								variable_names:addParameter
		NEWLINE:$\n
		NEWLINE:$\n
method_declaration:
	methodDefinition:
		body_element:
			NEWLINE:$\n
		inline:
			variable_declaration:
				typeName:
					type_var:
						class:
							class_variable_names:IToken
				variableName:
					name_var:
						variable:
							variable_names:nameToken
		body_element:
			body_line:
				SEMICOLON:;
				variable_declaration:
					method_argument:
						body_statement:
							body_call:
								group:
									typeName:
										type_var:
											class:
												class_variable_names:StringBuilder
									parameters:
									NEW:new 
					variableName:
						name_var:
							variable:
								variable_names:nameBuilder
					EQUALS:=
					typeName:
						type_var:
							class:
								class_variable_names:StringBuilder
		body_element:
			NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		body_element:
			body_conditional:
				as_body:
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_conditional:
							as_body:
								body_element:
									body_conditional:
										conditional:
											IF:if
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:subClass
												group:
													name_var:
														variable:
															variable_names:getName
													parameters:
												DOT:.
												group:
													name_var:
														variable:
															variable_names:equals
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:findName
												DOT:.
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_return:
													SEMICOLON:;
													method_argument:
														body_statement:
															body_call:
																group:
																	name_var:
																		variable:
																			variable_names:subClass
																DOT:.
																group:
																	parameters:
																	name_var:
																		variable:
																			variable_names:getFullName
													RETURN:return 
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							conditional:
								FOR:for
							OPERATOR:: 
							body_statement:
								body_call:
									DOT:.
									group:
										name_var:
											variable:
												variable_names:allClasses
									group:
										name_var:
											exact:
												BACKSLASH:\
												variable_names:ExternalClassEntry
							variable_declaration:
								typeName:
									CLASS_TYPE:Class 
								variableName:
									name_var:
										variable:
											variable_names:subClass
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								EQUALS:=
								WEAK:~
								typeName:
									type_var:
										class:
											class_variable_names:String
								variableName:
									name_var:
										variable:
											variable_names:findName
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													access:
														name_var:
															variable:
																variable_names:nameToken
														ACCESS:->
														CAMEL:^
														name_var:
															exact:
																WILD:typeName
					body_element:
						NEWLINE:$\n
					body_element:
						body_throw:
							SEMICOLON:;
							THROW:throw 
							body_statement:
								body_call:
									group:
										name_var:
											concat:
												PLUS:+
												name_var:
													variable:
														variable_names:findName
												PLUS:+
												name_var:
													exact:
														WILD:Could not find 
												name_var:
													exact:
														WILD: class!
				conditional:
					IF:if
				body_statement:
					body_call:
						group:
							name_var:
								access:
									name_var:
										exact:
											WILD:findType
									name_var:
										variable:
											variable_names:nameToken
									ACCESS:->
					OPERATOR:!= 
					body_call:
						group:
							name_var:
								variable:
									variable_names:null
		body_element:
			body_conditional:
				conditional:
					ELSE:else
				as_body:
					body_element:
						body_manipulate:
							tokenInstance:
								body_element:
									NEWLINE:$\n
								body_element:
									body_conditional:
										body_statement:
											OPERATOR:==
											body_call:
												group:
													name_var:
														variable:
															variable_names:false
											body_call:
												group:
													name_var:
														variable:
															variable_names:isFirst
										conditional:
											IF:if
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													body_statement:
														body_call:
															group:
																name_var:
																	variable:
																		variable_names:append
																parameters:
																	method_argument:
																		body_statement:
																			body_call:
																				group:
																					name_var:
																						exact:
																							WILD:.
															DOT:.
															group:
																name_var:
																	variable:
																		variable_names:nameBuilder
													SEMICOLON:;
								tokenName:
									NAME:typeName
								body_element:
									NEWLINE:$\n
								body_element:
									body_line:
										SEMICOLON:;
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:append
													parameters:
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				CAMEL:^
																				variable_names:element
												DOT:.
												group:
													name_var:
														variable:
															variable_names:nameBuilder
								COLON::
								body_element:
									body_conditional:
										conditional:
											ELSE:else
										as_body:
											body_element:
												NEWLINE:$\n
											body_element:
												NEWLINE:$\n
											body_element:
												body_line:
													SEMICOLON:;
													variable_assignment:
														name_var:
															variable:
																variable_names:isFirst
														EQUALS:=
														method_argument:
															body_statement:
																body_call:
																	group:
																		name_var:
																			variable:
																				variable_names:false
								body_element:
									NEWLINE:$\n
								body_element:
									NEWLINE:$\n
							COLON::
							variableName:
								NAME:element
							name_var:
								variable:
									variable_names:nameToken
					body_element:
						NEWLINE:$\n
					body_element:
						NEWLINE:$\n
					body_element:
						body_line:
							SEMICOLON:;
							variable_declaration:
								method_argument:
									body_statement:
										body_call:
											group:
												name_var:
													variable:
														variable_names:true
								WEAK:~
								variableName:
									name_var:
										variable:
											variable_names:isFirst
								EQUALS:=
								typeName:
									type_var:
										class:
											class_variable_names:Boolean
					body_element:
						NEWLINE:$\n
		body_element:
			NEWLINE:$\n
		typeName:
			type_var:
				class:
					class_variable_names:String
		inner:
			IN:>
		body_element:
			body_return:
				SEMICOLON:;
				method_argument:
					body_statement:
						body_call:
							group:
								name_var:
									as_string:
										body_statement:
											body_call:
												group:
													name_var:
														variable:
															variable_names:nameBuilder
				RETURN:return 
		methodName:
			name_var:
				variable:
					variable_names:getTypeName
		body_element:
			NEWLINE:$\n<<