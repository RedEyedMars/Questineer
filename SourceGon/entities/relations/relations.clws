
import associations/associations.clws

class 'packageName'.entities.relations Relationship {
  ~Integer influence = 0;
  void influence(Relationship->Reason reason, Integer amount){
    "influences".add(reason,new Int(amount));
    influence \+= amount;
  }
  class Factory // {
    Relationship create(){
      return new Relationship();
    }
  }
> void setup(%Pass data){
    \createListMap(Relationship->Reason, Int);
    Relationship += ~ListMaps->\Reasons->\_Int "influences";
  }
  class Reason // {
    ~String name = null;
    ~String description = null;
    \boolean equals(\Object otherReason){
      return otherReason != null && ((Reason)\otherReason).\name.equals(name);
    }
    \int hashCode(){
      return "name".hashCode();
    }
    class 'packageName'."entities"."relations" Factory {
      Relationship->Reason create(){
        return null;
      }
    }
  }
> void declaration(%T declarationToken){
	String reasonName = 'declarationToken->"reasonName"';
    String reasonClassName = reasonName.replace(" ","");
    Relationship->Reasons += class reasonClassName /Relationship->Reason/ {
      String getDescription(){
        StringBuilder builder = new StringBuilder();
      }
    }
    Relationship->Reasons->'reasonClassName' += class 'packageName'."entities"."relations" Factory Relationship->Reason->Factory{
        Relationship->Reason create(){
          return new Relationship->Reasons->'reasonClassName'();
        }
      }
    StringBuilder descriptionBuilder = new StringBuilder(); 
    declarationToken : element
      : variableIndex {
        String variableName = "_" + 'element';
        Relationship->Reasons->'reasonClassName' += Object 'variableName';
        Relationship->Reasons->'reasonClassName'->*"getDescription".appendToBody({"builder".append('variableName'.toString());}); 
      }
      : description {
        Relationship->Reasons->'reasonClassName'->*"getDescription".appendToBody({"builder".append('' 'element' '');});
      }
    Relationship->Reasons->'reasonClassName'->*.prependToBody({
      if "name" == null {
        "name" = '' 'reasonName' '';
      }
    });
    Relationship->Reasons->'reasonClassName'->*"getDescription".appendToBody({return "builder".toString();});
    Relationship->Reasons->*"create".prependToBody({
      if '' 'reasonName' ''.equals('' "reasonName" '') || '' 'reasonName' ''.replace(''" "'',''""'').equals('' 'reasonClassName' ''){
        return new Relationship->Reasons->'reasonClassName'(); 
      }});
  }
  class Reasons // {
    @Relationship->Reason create(String reasonName){
      return null;
    }
  }
}